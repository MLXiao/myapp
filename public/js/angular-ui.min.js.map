{"version":3,"sources":["angular-ui-router.js","ui-bootstrap.js"],"names":["module","exports","window","angular","undefined","inherit","parent","extra","extend","prototype","merge","dst","forEach","arguments","obj","value","key","hasOwnProperty","ancestors","first","second","path","n","push","objectKeys","object","Object","keys","result","val","indexOf","array","Array","Number","len","length","from","Math","ceil","floor","inheritParams","currentParams","newParams","$current","$to","parentParams","parents","inherited","inheritList","i","params","j","equalForKeys","a","b","k","filterByKeys","values","filtered","name","pick","copy","concat","apply","slice","call","omit","filter","collection","callback","isArray","map","$Resolve","$q","$injector","VISIT_IN_PROGRESS","VISIT_DONE","NOTHING","NO_DEPENDENCIES","NO_LOCALS","NO_PARENT","when","$$promises","$$values","this","study","invocables","visit","visited","cycle","splice","Error","join","isString","plan","get","annotate","param","pop","isResolve","isObject","then","invocableKeys","locals","self","done","wait","merged","$$inheritedValues","resolution","resolve","fail","reason","$$failure","reject","invoke","invocable","onfailure","invocation","proceed","isDefined","promise","e","defer","waitParams","dep","promises","ii","$TemplateFactory","$http","$templateCache","fromConfig","config","template","fromString","templateUrl","fromUrl","templateProvider","fromProvider","isFunction","url","cache","headers","Accept","response","data","provider","UrlMatcher","pattern","parentMatcher","addParameter","id","type","location","paramNames","test","$$UMFP","Param","quoteRegExp","string","squash","optional","surroundPattern","replace","matchDetails","m","isSearch","regexp","segment","cfg","substring","last","index","RegExp","caseInsensitive","placeholder","searchPlaceholder","compiled","segments","$$new","ParamSet","source","p","exec","isOptional","lastIndex","search","sourceSearch","sourcePath","strict","prefix","$$paramNames","Type","$UrlMatcherFactory","valToString","toString","valFromString","getDefaultConfig","isStrictMode","isCaseInsensitive","isInjectable","flushTypeQueue","typeQueue","shift","$types","injector","def","defaultSquashPolicy","enqueue","defaultTypes","encode","decode","is","int","parseInt","bool","date","getFullYear","getMonth","getDate","match","capture","Date","isNaN","valueOf","equals","toISOString","json","toJson","fromJson","any","identity","$$getDefaultValue","strictMode","compile","isMatcher","o","definition","definitionFn","$get","unwrapShorthand","isShorthand","$$fn","getType","urlType","getArrayMode","arrayDefaults","arrayParamNomenclature","getSquashPolicy","getReplace","arrayMode","configuredKeys","defaultPolicy","to","item","defaultValue","$value","hasReplaceVal","$replace","replacement","$normalize","$asArray","dynamic","$$parent","$$keys","chain","ignore","reverse","paramset","paramValues","$$equals","paramValues1","paramValues2","equal","left","right","$$validates","rawVal","normalized","encoded","$UrlRouterProvider","$locationProvider","$urlMatcherFactory","regExpPrefix","re","interpolate","what","handleIfMatch","handler","$match","$location","$rootScope","$browser","appendBasePath","isHtml5","absolute","baseHref","update","evt","check","rule","handled","defaultPrevented","lastPushedUrl","rules","otherwise","listen","listener","$on","interceptDeferred","sync","read","urlMatcher","options","format","$$avoidResync","href","validates","html5Mode","enabled","hashPrefix","slash","port","protocol","host","redirect","handlerIsString","strategies","matcher","regex","global","sticky","deferIntercept","$inject","$StateProvider","$urlRouterProvider","isRelative","stateName","findState","stateOrName","base","isStr","rel","split","pathLength","current","state","states","queueState","parentName","queue","flushQueuedChildren","queued","registerState","lastIndexOf","stateBuilder","$delegates","abstractKey","$stateParams","$state","navigable","transitionTo","isGlob","text","doesStateMatchGlob","glob","globSegments","l","unshift","MAX_VALUE","decorator","func","$view","$resolve","$urlRouter","handleRedirect","$broadcast","TransitionAborted","retry","$retry","TransitionFailed","retryTransition","transition","TransitionSuperseded","toParams","resolveState","paramsAreFiltered","resolveViews","viewsPromises","views","view","injectables","$template","load","globals","notify","controllerProvider","injectLocals","$$controller","controller","$$state","$$controllerAs","controllerAs","all","TransitionPrevented","root","reload","go","relative","fromParams","fromPath","toState","hash","redirectResult","toPath","keep","toLocals","reloadState","ownParams","shouldSkipReload","resolved","entering","exiting","onExit","onEnter","error","includes","lossy","nav","context","nonSearchParamsEqual","fromAndToState","notSearchParam","nonQueryParamKeys","nonQueryParams","nonQueryParamSet","reloadOnSearch","compositeName","charAt","","abstract","$ViewProvider","$templateFactory","defaults","async","$ViewScrollProvider","useAnchorScroll","$anchorScroll","$timeout","$element","scrollIntoView","$ViewDirective","$uiViewScroll","$interpolate","getService","service","has","getRenderer","attrs","scope","statics","enter","element","target","cb","after","leave","remove","$animate","$animator","animate","directive","restrict","terminal","priority","transclude","tElement","tAttrs","$transclude","cleanupLastView","previousEl","currentScope","$destroy","currentEl","renderer","updateView","firstTime","newScope","getUiViewName","previousLocals","latestLocals","$new","clone","$emit","autoScrollExp","$eval","onloadExp","onload","autoscroll","$ViewDirectiveFill","$compile","$controller","initial","html","link","contents","$scope","children","uiView","inheritedData","parseStateRef","ref","parsed","preparsed","paramExpr","stateContext","el","stateData","$StateRefDirective","allowedOptions","require","uiSrefActive","uiSref","hrefKind","prop","newHref","isAnchor","toUpperCase","isForm","nodeName","attr","optionsOverride","uiSrefOpts","option","newVal","activeDirective","$$addStateInfo","$set","$watch","oldVal","bind","button","which","ctrlKey","metaKey","shiftKey","preventDefault","ignorePreventDefaultCount","cancel","$StateRefActiveDirective","$attrs","anyMatch","addClass","activeClass","removeClass","isMatch","uiSrefActiveEq","newState","$IsStateFilter","isFilter","$stateful","$IncludedByStateFilter","includesFilter","defaultConfig","searchParams","decodePathArray","reverseString","str","unquoteDashes","allReversed","paramName","parameters","nTotal","nPath","paramVal","encodeDashes","encodeURIComponent","c","charCodeAt","isPathParam","isDefaultValue","nextSegment","$subPattern","sub","substr","mode","ArrayType","bindTo","callbackName","arrayWrap","arrayUnwrap","falsey","arrayHandler","allTruthyMode","arrayEqualsHandler","val1","val2","$arrayMode","run","$animateCss","expand","easing","height","scrollHeight","start","expandDone","css","collapse","hasClass","collapseDone","uibCollapse","shouldCollapse","$log","$collapseSuppressWarning","warn","constant","closeOthers","accordionConfig","groups","openGroup","group","isOpen","addGroup","groupScope","that","event","removeGroup","heading","isDisabled","setHeading","accordionCtrl","openClass","panelClass","toggleClass","toggleOpen","$event","accordionGroupCtrl","noop","uibAccordionTransclude","find","append","$accordionSuppressWarning","accordionTransclude","closeable","close","dismissOnTimeout","$parent","$alertSuppressWarning","toggleEvent","buttonConfig","ctrls","buttonsCtrl","ngModelCtrl","display","$render","$modelValue","uibBtnRadio","on","disabled","isActive","uncheckable","$apply","$setViewValue","getTrueValue","getCheckboxValue","btnCheckboxTrue","getFalseValue","btnCheckboxFalse","attribute","$buttonsSuppressWarning","btnRadio","$document","attributeValue","activeElement","$interval","goNext","slide","direction","destroyed","active","currentSlide","noTransition","$currentTransition","slides","SLIDE_DIRECTION","NEW_ANIMATE","phase","off","one","currentIndex","restartTimer","getSlideByIndex","isUndefined","resetTimer","interval","currentInterval","timerFn","isPlaying","next","pause","resetTransition","version","minor","NO_TRANSITION","select","nextSlide","nextIndex","indexOfSlide","getCurrentIndex","newIndex","noWrap","prev","$watchCollection","play","noPause","addSlide","removeSlide","sort","actual","carouselCtrl","animation","className","beforeAddClass","stopped","directionClass","removeClassFn","beforeRemoveClass","$carouselSuppressWarning","$locale","orderByFilter","createParser","formatCodeToRegex","code","isValid","year","month","localeId","SPECIAL_CHARACTERS_REGEXP","init","parsers","yyyy","yy","y","MMMM","DATETIME_FORMATS","MONTH","MMM","SHORTMONTH","MM","M","dd","d","EEEE","DAY","EEE","SHORTDAY","HH","hours","hh","H","h","mm","minutes","sss","milliseconds","ss","seconds","s","AMPMS","parse","input","baseDate","parser","results","fields","dt","isDate","getTime","getHours","getMinutes","getSeconds","getMilliseconds","mapper","setFullYear","$dateParserSuppressWarning","uibDateParser","factory","$window","getStyle","cssprop","currentStyle","getComputedStyle","style","isStaticPositioned","parentOffsetEl","docDomEl","offsetParent","position","elBCR","offset","offsetParentBCR","top","offsetParentEl","clientTop","scrollTop","clientLeft","scrollLeft","boundingClientRect","getBoundingClientRect","width","pageYOffset","documentElement","pageXOffset","positionElements","hostEl","targetEl","positionStr","appendToBody","hostElPos","targetElWidth","targetElHeight","targetElPos","positionStrParts","pos0","pos1","shiftWidth","center","shiftHeight","bottom","$positionSuppressWarning","$uibPosition","formatDay","formatMonth","formatYear","formatDayHeader","formatDayTitle","formatMonthTitle","datepickerMode","minMode","maxMode","showWeeks","startingDay","yearRange","minDate","maxDate","shortcutPropagation","$parse","dateFilter","datepickerConfig","$datepickerSuppressError","modes","refreshView","uniqueId","$id","random","initDate","activeDate","$isEmpty","$invalid","dateObject","compare","activeDateId","uid","ngModelCtrl_","render","$viewValue","_refreshView","$setValidity","createDateObject","model","label","selected","customClass","dateDisabled","arr","size","arrays","move","step","years","months","toggleMode",13,32,33,34,35,36,37,38,39,40,"focusElement","focus","keydown","altKey","stopPropagation","handleKeyDown","getDaysInMonth","DAYS_IN_MONTH","getISO8601WeekNumber","checkDate","setDate","getDay","time","setMonth","round","ctrl","getDates","startDate","dates","firstDayOfMonth","difference","numDisplayedFromPreviousMonth","firstDate","days","secondary","labels","abbr","full","title","rows","weekNumbers","thursdayIndex","numWeeks","curWeek","date1","date2","min","getStartingYear","range","yearpickerInit","datepickerCtrl","daypickerCtrl","monthpickerCtrl","datepickerPopup","datepickerPopupTemplateUrl","datepickerTemplateUrl","html5Types","datetime-local","currentText","clearText","closeText","closeOnDateSelection","showButtonBar","onOpenFocus","$position","dateParser","datepickerPopupConfig","cameltoDash","$1","toLowerCase","parseDate","viewValue","isNumber","dateFormat","validator","modelValue","ngRequired","documentClickBind","popup","$popup","dpContainsTarget","contains","popupContainsTarget","inputKeydownBind","popupEl","datepickerEl","ngModel","isHtml5DateInput","watchData","_ngModel_","datepickerAppendToBody","uibDatepickerPopup","$observe","oldValue","newDateFormat","ng-model","ng-change","template-url","datepickerOptions","getAttribute","setAttribute","assign","oldvalue","$formatters","$$parserName","$validators","$parsers","$viewChangeListeners","$$phase","unbind","getText","dateSelection","today","setHours","$datepickerSuppressWarning","fixTimeZone","openScope","open","dropdownScope","closeDropdown","keybindFilter","getAutoClose","toggleElement","getToggleElement","dropdownElement","getDropdownElement","focusToggleElement","isKeynavEnabled","focusDropdownEntry","dropdownConfig","uibDropdownService","$templateRequest","templateScope","getIsOpen","setIsOpen","toggleInvoker","onToggle","keynavEnabled","dropdownAppendToBody","uibKeyboardNav","dropdownMenu","toggle","autoClose","getElement","keyCode","elems","eq","selectedOption","wasOpen","pos","rightalign","innerWidth","dropdownMenuTemplateUrl","tplContent","trim","newEl","replaceWith","offDestroy","dropdownCtrl","dropdownNested","tplUrl","toggleDropdown","aria-haspopup","aria-expanded","$dropdownSuppressWarning","createNew","stack","add","idx","removeTop","entries","hasKey","put","$modalStack","linkFn","modalInClass","NOW_CLOSING_EVENT","setIsAsync","backdropClass","windowClass","windowTopClass","modal","getTop","backdrop","currentTarget","dismiss","$isRendered","modalRenderDeferObj","animationPromise","inputWithAutofocus","querySelector","modalRendered","modalAnimation","uibModalAnimationClass","empty","$$multiMap","$$stackedMap","backdropIndex","topBackdropIndex","opened","openedWindows","removeModalWindow","modalInstance","elementToReceiveFocus","body","modalWindow","removeAfterAnimate","modalDomEl","modalScope","modalBodyClass","openedClass","OPENED_MODAL_CLASS","openedClasses","toggleTopWindowClass","checkRemoveBackdrop","toggleSwitch","backdropDomEl","backdropScopeRef","backdropScope","domEl","afterAnimating","asyncDeferred","asyncPromise","broadcastClosing","resultOrReason","closing","focusableElementList","focusIndex","tababbleSelector","newBackdropIndex","isDefaultPrevented","keyboard","loadFocusElementList","focusChanged","isFocusInFirstItem","focusLastFocusableElement","isFocusInLastItem","focusFirstFocusableElement","modalOpener","deferred","renderDeferred","currBackdropIndex","angularBackgroundDomEl","angularDomEl","windowTemplateUrl","window-class","window-top-class","content","clearFocusListCache","$$uibDestructionScheduled","dismissAll","topModal","srcElement","modalDomE1","querySelectorAll","$modalProvider","$modalSuppressWarning","getTemplatePromise","getResolvePromises","resolves","promisesArr","$modal","promiseChain","getPromiseChain","modalOptions","resolveWithTemplate","templateAndResolvePromise","modalResultDeferred","modalOpenedDeferred","modalRenderDeferred","rendered","samePromise","tplAndVars","$close","$dismiss","ctrlInstance","ctrlLocals","resolveIter","$uibModalInstance","defineProperty","bindToController","modalAnimationClass","$uibModalStack","$uibModalProvider","setNumPages","numPages","itemsPerPage","totalPages","calculateTotalPages","page","selectPage","totalItems","max","clickAllowed","ngDisabled","blur","noPrevious","noNext","boundaryLinks","directionLinks","firstText","previousText","nextText","lastText","rotate","paginationConfig","makePage","number","getPages","currentPage","pages","startPage","endPage","isMaxSized","maxSize","previousPageSet","nextPageSet","paginationCtrl","originalRender","align","pagerConfig","$paginationSuppressWarning","snake_case","separator","letter","defaultOptions","placement","popupDelay","popupCloseDelay","useContentExp","triggerMap","mouseenter","click","none","globalOptions","setTriggers","triggers","openedTooltips","ttType","defaultTriggerShow","getTriggers","trigger","show","hide","directiveName","startSym","startSymbol","endSym","endSymbol","tElem","tooltipLinker","tooltipCtrl","toggleTooltipBind","ttScope","hideTooltipBind","showTooltipBind","hasEnableExp","cancelHide","prepareTooltip","showTimeout","cancelShow","hideTimeout","createTooltip","$evalAsync","assignIsOpen","positionTooltip","positionTimeout","transitionTimeout","removeTooltip","tooltip","tooltipLinkedScope","prepObservers","unregisterObservers","contentParse","popupClass","delay","closeDelay","isOpenParse","observers","repositionScheduled","$$postDigest","observer","prepTriggers","unregisterTriggers","addEventListener","ttCss","visibility","origScope","contentExp","hideTrigger","removeEventListener","appendToBodyVal","$sce","elem","previousElement","currentElement","tooltipTemplateTranscludeScope","changeCounter","cleanupLastIncludeContent","parseAsResourceUrl","uibTooltipTemplateTransclude","src","thisChangeId","tooltipAnimationClass","$uibTooltip","originScope","$uibTooltipProvider","$tooltipSuppressWarning","tooltipTemplateTransclude","$tooltip","$popoverSuppressWarning","progressConfig","bars","addBar","bar","recalculatePercentage","totalPercentage","reduce","total","percent","toFixed","removeBar","progressCtrl","$progressSuppressWarning","stateOn","stateOff","titles","ratingConfig","tmpTitles","ratingStates","buildTemplateObjects","getTitle","rate","readonly","onHover","reset","onLeave","onKeydown","ratingCtrl","$ratingSuppressWarning","tabs","selectedTab","tab","onDeselect","selectCalled","onSelect","addTab","removeTab","newActiveIndex","vertical","justified","elm","tabsetCtrl","disable","$transcludeFn","isTabHeading","node","tagName","hasAttribute","uibTabContentTransclude","headingElement","$tabsSuppressWarning","tabContentTransclude","hourStep","minuteStep","showMeridian","meridians","readonlyInput","mousewheel","arrowkeys","showSpinners","timepickerConfig","getHoursFromTemplate","valid","meridian","getMinutesFromTemplate","pad","refresh","keyboardChange","makeValid","updateTemplate","invalidHours","invalidMinutes","addMinutes","newDate","addMinutesToSelected","tabindex","removeAttr","inputs","hoursInputEl","minutesInputEl","setupMousewheelEvents","setupArrowkeyEvents","setupInputEvents","noIncrementHours","incrementedSelected","noDecrementHours","decrementedSelected","noIncrementMinutes","noDecrementMinutes","noToggleMeridian","$error","isScrollingUp","originalEvent","delta","wheelDelta","deltaY","detail","incrementHours","decrementHours","incrementMinutes","decrementMinutes","updateHours","updateMinutes","invalidate","setMinutes","toggleMeridian","timepickerCtrl","$timepickerSuppressWarning","TYPEAHEAD_REGEXP","itemName","viewMapper","modelMapper","originalScope","typeaheadParser","fireRecalculating","moveInProgress","$digest","timeoutEventPromise","matches","recalculatePosition","eventDebounceTime","modelCtrl","ngModelOptions","HOT_KEYS","minLength","typeaheadMinLength","hasFocus","waitTime","typeaheadWaitMs","isEditable","typeaheadEditable","isLoadingSetter","typeaheadLoading","onSelectCallback","typeaheadOnSelect","isSelectOnBlur","typeaheadSelectOnBlur","isNoResultsSetter","typeaheadNoResults","inputFormatter","typeaheadInputFormatter","typeaheadAppendToBody","appendToElementId","typeaheadAppendToElementId","focusFirst","typeaheadFocusFirst","selectOnExact","typeaheadSelectOnExact","parsedModel","invokeModelSetter","$setModelValue","newValue","$options","getterSetter","$$$p","parserResult","uibTypeahead","popupId","aria-autocomplete","aria-owns","popUpEl","move-in-progress","query","typeaheadTemplateUrl","typeaheadPopupTemplateUrl","resetMatches","activeIdx","getMatchId","inputIsExactMatch","inputValue","getMatchesAsync","onCurrentRequest","timeoutPromise","scheduleSearchWithTimeout","cancelPreviousTimeout","$item","$model","$label","typeaheadFocusOnSelect","dismissClickHandler","getElementById","_modelCtrl","_ngModelOptions","candidateViewValue","emptyViewValue","popupTemplateUrl","matchIdx","selectActive","selectMatch","clonedElement","escapeRegexp","queryToEscape","containsHtml","matchItem","isSanitizePresent","trustAsHtml","uibTypeaheadParser","$typeaheadSuppressWarning","typeahead","$$csp","document","prepend"],"mappings":"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","file":"angular-ui.min.js","sourcesContent":["/**\n * State-based routing for AngularJS\n * @version v0.2.15\n * @link http://angular-ui.github.com/\n * @license MIT License, http://www.opensource.org/licenses/MIT\n */\n\n/* commonjs package manager support (eg componentjs) */\nif (typeof module !== \"undefined\" && typeof exports !== \"undefined\" && module.exports === exports){\n  module.exports = 'ui.router';\n}\n\n(function (window, angular, undefined) {\n/*jshint globalstrict:true*/\n/*global angular:false*/\n'use strict';\n\nvar isDefined = angular.isDefined,\n    isFunction = angular.isFunction,\n    isString = angular.isString,\n    isObject = angular.isObject,\n    isArray = angular.isArray,\n    forEach = angular.forEach,\n    extend = angular.extend,\n    copy = angular.copy;\n\nfunction inherit(parent, extra) {\n  return extend(new (extend(function() {}, { prototype: parent }))(), extra);\n}\n\nfunction merge(dst) {\n  forEach(arguments, function(obj) {\n    if (obj !== dst) {\n      forEach(obj, function(value, key) {\n        if (!dst.hasOwnProperty(key)) dst[key] = value;\n      });\n    }\n  });\n  return dst;\n}\n\n/**\n * Finds the common ancestor path between two states.\n *\n * @param {Object} first The first state.\n * @param {Object} second The second state.\n * @return {Array} Returns an array of state names in descending order, not including the root.\n */\nfunction ancestors(first, second) {\n  var path = [];\n\n  for (var n in first.path) {\n    if (first.path[n] !== second.path[n]) break;\n    path.push(first.path[n]);\n  }\n  return path;\n}\n\n/**\n * IE8-safe wrapper for `Object.keys()`.\n *\n * @param {Object} object A JavaScript object.\n * @return {Array} Returns the keys of the object as an array.\n */\nfunction objectKeys(object) {\n  if (Object.keys) {\n    return Object.keys(object);\n  }\n  var result = [];\n\n  forEach(object, function(val, key) {\n    result.push(key);\n  });\n  return result;\n}\n\n/**\n * IE8-safe wrapper for `Array.prototype.indexOf()`.\n *\n * @param {Array} array A JavaScript array.\n * @param {*} value A value to search the array for.\n * @return {Number} Returns the array index value of `value`, or `-1` if not present.\n */\nfunction indexOf(array, value) {\n  if (Array.prototype.indexOf) {\n    return array.indexOf(value, Number(arguments[2]) || 0);\n  }\n  var len = array.length >>> 0, from = Number(arguments[2]) || 0;\n  from = (from < 0) ? Math.ceil(from) : Math.floor(from);\n\n  if (from < 0) from += len;\n\n  for (; from < len; from++) {\n    if (from in array && array[from] === value) return from;\n  }\n  return -1;\n}\n\n/**\n * Merges a set of parameters with all parameters inherited between the common parents of the\n * current state and a given destination state.\n *\n * @param {Object} currentParams The value of the current state parameters ($stateParams).\n * @param {Object} newParams The set of parameters which will be composited with inherited params.\n * @param {Object} $current Internal definition of object representing the current state.\n * @param {Object} $to Internal definition of object representing state to transition to.\n */\nfunction inheritParams(currentParams, newParams, $current, $to) {\n  var parents = ancestors($current, $to), parentParams, inherited = {}, inheritList = [];\n\n  for (var i in parents) {\n    if (!parents[i].params) continue;\n    parentParams = objectKeys(parents[i].params);\n    if (!parentParams.length) continue;\n\n    for (var j in parentParams) {\n      if (indexOf(inheritList, parentParams[j]) >= 0) continue;\n      inheritList.push(parentParams[j]);\n      inherited[parentParams[j]] = currentParams[parentParams[j]];\n    }\n  }\n  return extend({}, inherited, newParams);\n}\n\n/**\n * Performs a non-strict comparison of the subset of two objects, defined by a list of keys.\n *\n * @param {Object} a The first object.\n * @param {Object} b The second object.\n * @param {Array} keys The list of keys within each object to compare. If the list is empty or not specified,\n *                     it defaults to the list of keys in `a`.\n * @return {Boolean} Returns `true` if the keys match, otherwise `false`.\n */\nfunction equalForKeys(a, b, keys) {\n  if (!keys) {\n    keys = [];\n    for (var n in a) keys.push(n); // Used instead of Object.keys() for IE8 compatibility\n  }\n\n  for (var i=0; i<keys.length; i++) {\n    var k = keys[i];\n    if (a[k] != b[k]) return false; // Not '===', values aren't necessarily normalized\n  }\n  return true;\n}\n\n/**\n * Returns the subset of an object, based on a list of keys.\n *\n * @param {Array} keys\n * @param {Object} values\n * @return {Boolean} Returns a subset of `values`.\n */\nfunction filterByKeys(keys, values) {\n  var filtered = {};\n\n  forEach(keys, function (name) {\n    filtered[name] = values[name];\n  });\n  return filtered;\n}\n\n// like _.indexBy\n// when you know that your index values will be unique, or you want last-one-in to win\nfunction indexBy(array, propName) {\n  var result = {};\n  forEach(array, function(item) {\n    result[item[propName]] = item;\n  });\n  return result;\n}\n\n// extracted from underscore.js\n// Return a copy of the object only containing the whitelisted properties.\nfunction pick(obj) {\n  var copy = {};\n  var keys = Array.prototype.concat.apply(Array.prototype, Array.prototype.slice.call(arguments, 1));\n  forEach(keys, function(key) {\n    if (key in obj) copy[key] = obj[key];\n  });\n  return copy;\n}\n\n// extracted from underscore.js\n// Return a copy of the object omitting the blacklisted properties.\nfunction omit(obj) {\n  var copy = {};\n  var keys = Array.prototype.concat.apply(Array.prototype, Array.prototype.slice.call(arguments, 1));\n  for (var key in obj) {\n    if (indexOf(keys, key) == -1) copy[key] = obj[key];\n  }\n  return copy;\n}\n\nfunction pluck(collection, key) {\n  var result = isArray(collection) ? [] : {};\n\n  forEach(collection, function(val, i) {\n    result[i] = isFunction(key) ? key(val) : val[key];\n  });\n  return result;\n}\n\nfunction filter(collection, callback) {\n  var array = isArray(collection);\n  var result = array ? [] : {};\n  forEach(collection, function(val, i) {\n    if (callback(val, i)) {\n      result[array ? result.length : i] = val;\n    }\n  });\n  return result;\n}\n\nfunction map(collection, callback) {\n  var result = isArray(collection) ? [] : {};\n\n  forEach(collection, function(val, i) {\n    result[i] = callback(val, i);\n  });\n  return result;\n}\n\n/**\n * @ngdoc overview\n * @name ui.router.util\n *\n * @description\n * # ui.router.util sub-module\n *\n * This module is a dependency of other sub-modules. Do not include this module as a dependency\n * in your angular app (use {@link ui.router} module instead).\n *\n */\nangular.module('ui.router.util', ['ng']);\n\n/**\n * @ngdoc overview\n * @name ui.router.router\n * \n * @requires ui.router.util\n *\n * @description\n * # ui.router.router sub-module\n *\n * This module is a dependency of other sub-modules. Do not include this module as a dependency\n * in your angular app (use {@link ui.router} module instead).\n */\nangular.module('ui.router.router', ['ui.router.util']);\n\n/**\n * @ngdoc overview\n * @name ui.router.state\n * \n * @requires ui.router.router\n * @requires ui.router.util\n *\n * @description\n * # ui.router.state sub-module\n *\n * This module is a dependency of the main ui.router module. Do not include this module as a dependency\n * in your angular app (use {@link ui.router} module instead).\n * \n */\nangular.module('ui.router.state', ['ui.router.router', 'ui.router.util']);\n\n/**\n * @ngdoc overview\n * @name ui.router\n *\n * @requires ui.router.state\n *\n * @description\n * # ui.router\n * \n * ## The main module for ui.router \n * There are several sub-modules included with the ui.router module, however only this module is needed\n * as a dependency within your angular app. The other modules are for organization purposes. \n *\n * The modules are:\n * * ui.router - the main \"umbrella\" module\n * * ui.router.router - \n * \n * *You'll need to include **only** this module as the dependency within your angular app.*\n * \n * <pre>\n * <!doctype html>\n * <html ng-app=\"myApp\">\n * <head>\n *   <script src=\"js/angular.js\"></script>\n *   <!-- Include the ui-router script -->\n *   <script src=\"js/angular-ui-router.min.js\"></script>\n *   <script>\n *     // ...and add 'ui.router' as a dependency\n *     var myApp = angular.module('myApp', ['ui.router']);\n *   </script>\n * </head>\n * <body>\n * </body>\n * </html>\n * </pre>\n */\nangular.module('ui.router', ['ui.router.state']);\n\nangular.module('ui.router.compat', ['ui.router']);\n\n/**\n * @ngdoc object\n * @name ui.router.util.$resolve\n *\n * @requires $q\n * @requires $injector\n *\n * @description\n * Manages resolution of (acyclic) graphs of promises.\n */\n$Resolve.$inject = ['$q', '$injector'];\nfunction $Resolve(  $q,    $injector) {\n  \n  var VISIT_IN_PROGRESS = 1,\n      VISIT_DONE = 2,\n      NOTHING = {},\n      NO_DEPENDENCIES = [],\n      NO_LOCALS = NOTHING,\n      NO_PARENT = extend($q.when(NOTHING), { $$promises: NOTHING, $$values: NOTHING });\n  \n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$resolve#study\n   * @methodOf ui.router.util.$resolve\n   *\n   * @description\n   * Studies a set of invocables that are likely to be used multiple times.\n   * <pre>\n   * $resolve.study(invocables)(locals, parent, self)\n   * </pre>\n   * is equivalent to\n   * <pre>\n   * $resolve.resolve(invocables, locals, parent, self)\n   * </pre>\n   * but the former is more efficient (in fact `resolve` just calls `study` \n   * internally).\n   *\n   * @param {object} invocables Invocable objects\n   * @return {function} a function to pass in locals, parent and self\n   */\n  this.study = function (invocables) {\n    if (!isObject(invocables)) throw new Error(\"'invocables' must be an object\");\n    var invocableKeys = objectKeys(invocables || {});\n    \n    // Perform a topological sort of invocables to build an ordered plan\n    var plan = [], cycle = [], visited = {};\n    function visit(value, key) {\n      if (visited[key] === VISIT_DONE) return;\n      \n      cycle.push(key);\n      if (visited[key] === VISIT_IN_PROGRESS) {\n        cycle.splice(0, indexOf(cycle, key));\n        throw new Error(\"Cyclic dependency: \" + cycle.join(\" -> \"));\n      }\n      visited[key] = VISIT_IN_PROGRESS;\n      \n      if (isString(value)) {\n        plan.push(key, [ function() { return $injector.get(value); }], NO_DEPENDENCIES);\n      } else {\n        var params = $injector.annotate(value);\n        forEach(params, function (param) {\n          if (param !== key && invocables.hasOwnProperty(param)) visit(invocables[param], param);\n        });\n        plan.push(key, value, params);\n      }\n      \n      cycle.pop();\n      visited[key] = VISIT_DONE;\n    }\n    forEach(invocables, visit);\n    invocables = cycle = visited = null; // plan is all that's required\n    \n    function isResolve(value) {\n      return isObject(value) && value.then && value.$$promises;\n    }\n    \n    return function (locals, parent, self) {\n      if (isResolve(locals) && self === undefined) {\n        self = parent; parent = locals; locals = null;\n      }\n      if (!locals) locals = NO_LOCALS;\n      else if (!isObject(locals)) {\n        throw new Error(\"'locals' must be an object\");\n      }       \n      if (!parent) parent = NO_PARENT;\n      else if (!isResolve(parent)) {\n        throw new Error(\"'parent' must be a promise returned by $resolve.resolve()\");\n      }\n      \n      // To complete the overall resolution, we have to wait for the parent\n      // promise and for the promise for each invokable in our plan.\n      var resolution = $q.defer(),\n          result = resolution.promise,\n          promises = result.$$promises = {},\n          values = extend({}, locals),\n          wait = 1 + plan.length/3,\n          merged = false;\n          \n      function done() {\n        // Merge parent values we haven't got yet and publish our own $$values\n        if (!--wait) {\n          if (!merged) merge(values, parent.$$values); \n          result.$$values = values;\n          result.$$promises = result.$$promises || true; // keep for isResolve()\n          delete result.$$inheritedValues;\n          resolution.resolve(values);\n        }\n      }\n      \n      function fail(reason) {\n        result.$$failure = reason;\n        resolution.reject(reason);\n      }\n\n      // Short-circuit if parent has already failed\n      if (isDefined(parent.$$failure)) {\n        fail(parent.$$failure);\n        return result;\n      }\n      \n      if (parent.$$inheritedValues) {\n        merge(values, omit(parent.$$inheritedValues, invocableKeys));\n      }\n\n      // Merge parent values if the parent has already resolved, or merge\n      // parent promises and wait if the parent resolve is still in progress.\n      extend(promises, parent.$$promises);\n      if (parent.$$values) {\n        merged = merge(values, omit(parent.$$values, invocableKeys));\n        result.$$inheritedValues = omit(parent.$$values, invocableKeys);\n        done();\n      } else {\n        if (parent.$$inheritedValues) {\n          result.$$inheritedValues = omit(parent.$$inheritedValues, invocableKeys);\n        }        \n        parent.then(done, fail);\n      }\n      \n      // Process each invocable in the plan, but ignore any where a local of the same name exists.\n      for (var i=0, ii=plan.length; i<ii; i+=3) {\n        if (locals.hasOwnProperty(plan[i])) done();\n        else invoke(plan[i], plan[i+1], plan[i+2]);\n      }\n      \n      function invoke(key, invocable, params) {\n        // Create a deferred for this invocation. Failures will propagate to the resolution as well.\n        var invocation = $q.defer(), waitParams = 0;\n        function onfailure(reason) {\n          invocation.reject(reason);\n          fail(reason);\n        }\n        // Wait for any parameter that we have a promise for (either from parent or from this\n        // resolve; in that case study() will have made sure it's ordered before us in the plan).\n        forEach(params, function (dep) {\n          if (promises.hasOwnProperty(dep) && !locals.hasOwnProperty(dep)) {\n            waitParams++;\n            promises[dep].then(function (result) {\n              values[dep] = result;\n              if (!(--waitParams)) proceed();\n            }, onfailure);\n          }\n        });\n        if (!waitParams) proceed();\n        function proceed() {\n          if (isDefined(result.$$failure)) return;\n          try {\n            invocation.resolve($injector.invoke(invocable, self, values));\n            invocation.promise.then(function (result) {\n              values[key] = result;\n              done();\n            }, onfailure);\n          } catch (e) {\n            onfailure(e);\n          }\n        }\n        // Publish promise synchronously; invocations further down in the plan may depend on it.\n        promises[key] = invocation.promise;\n      }\n      \n      return result;\n    };\n  };\n  \n  /**\n   * @ngdoc function\n   * @name ui.router.util.$resolve#resolve\n   * @methodOf ui.router.util.$resolve\n   *\n   * @description\n   * Resolves a set of invocables. An invocable is a function to be invoked via \n   * `$injector.invoke()`, and can have an arbitrary number of dependencies. \n   * An invocable can either return a value directly,\n   * or a `$q` promise. If a promise is returned it will be resolved and the \n   * resulting value will be used instead. Dependencies of invocables are resolved \n   * (in this order of precedence)\n   *\n   * - from the specified `locals`\n   * - from another invocable that is part of this `$resolve` call\n   * - from an invocable that is inherited from a `parent` call to `$resolve` \n   *   (or recursively\n   * - from any ancestor `$resolve` of that parent).\n   *\n   * The return value of `$resolve` is a promise for an object that contains \n   * (in this order of precedence)\n   *\n   * - any `locals` (if specified)\n   * - the resolved return values of all injectables\n   * - any values inherited from a `parent` call to `$resolve` (if specified)\n   *\n   * The promise will resolve after the `parent` promise (if any) and all promises \n   * returned by injectables have been resolved. If any invocable \n   * (or `$injector.invoke`) throws an exception, or if a promise returned by an \n   * invocable is rejected, the `$resolve` promise is immediately rejected with the \n   * same error. A rejection of a `parent` promise (if specified) will likewise be \n   * propagated immediately. Once the `$resolve` promise has been rejected, no \n   * further invocables will be called.\n   * \n   * Cyclic dependencies between invocables are not permitted and will caues `$resolve`\n   * to throw an error. As a special case, an injectable can depend on a parameter \n   * with the same name as the injectable, which will be fulfilled from the `parent` \n   * injectable of the same name. This allows inherited values to be decorated. \n   * Note that in this case any other injectable in the same `$resolve` with the same\n   * dependency would see the decorated value, not the inherited value.\n   *\n   * Note that missing dependencies -- unlike cyclic dependencies -- will cause an \n   * (asynchronous) rejection of the `$resolve` promise rather than a (synchronous) \n   * exception.\n   *\n   * Invocables are invoked eagerly as soon as all dependencies are available. \n   * This is true even for dependencies inherited from a `parent` call to `$resolve`.\n   *\n   * As a special case, an invocable can be a string, in which case it is taken to \n   * be a service name to be passed to `$injector.get()`. This is supported primarily \n   * for backwards-compatibility with the `resolve` property of `$routeProvider` \n   * routes.\n   *\n   * @param {object} invocables functions to invoke or \n   * `$injector` services to fetch.\n   * @param {object} locals  values to make available to the injectables\n   * @param {object} parent  a promise returned by another call to `$resolve`.\n   * @param {object} self  the `this` for the invoked methods\n   * @return {object} Promise for an object that contains the resolved return value\n   * of all invocables, as well as any inherited and local values.\n   */\n  this.resolve = function (invocables, locals, parent, self) {\n    return this.study(invocables)(locals, parent, self);\n  };\n}\n\nangular.module('ui.router.util').service('$resolve', $Resolve);\n\n\n/**\n * @ngdoc object\n * @name ui.router.util.$templateFactory\n *\n * @requires $http\n * @requires $templateCache\n * @requires $injector\n *\n * @description\n * Service. Manages loading of templates.\n */\n$TemplateFactory.$inject = ['$http', '$templateCache', '$injector'];\nfunction $TemplateFactory(  $http,   $templateCache,   $injector) {\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$templateFactory#fromConfig\n   * @methodOf ui.router.util.$templateFactory\n   *\n   * @description\n   * Creates a template from a configuration object. \n   *\n   * @param {object} config Configuration object for which to load a template. \n   * The following properties are search in the specified order, and the first one \n   * that is defined is used to create the template:\n   *\n   * @param {string|object} config.template html string template or function to \n   * load via {@link ui.router.util.$templateFactory#fromString fromString}.\n   * @param {string|object} config.templateUrl url to load or a function returning \n   * the url to load via {@link ui.router.util.$templateFactory#fromUrl fromUrl}.\n   * @param {Function} config.templateProvider function to invoke via \n   * {@link ui.router.util.$templateFactory#fromProvider fromProvider}.\n   * @param {object} params  Parameters to pass to the template function.\n   * @param {object} locals Locals to pass to `invoke` if the template is loaded \n   * via a `templateProvider`. Defaults to `{ params: params }`.\n   *\n   * @return {string|object}  The template html as a string, or a promise for \n   * that string,or `null` if no template is configured.\n   */\n  this.fromConfig = function (config, params, locals) {\n    return (\n      isDefined(config.template) ? this.fromString(config.template, params) :\n      isDefined(config.templateUrl) ? this.fromUrl(config.templateUrl, params) :\n      isDefined(config.templateProvider) ? this.fromProvider(config.templateProvider, params, locals) :\n      null\n    );\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$templateFactory#fromString\n   * @methodOf ui.router.util.$templateFactory\n   *\n   * @description\n   * Creates a template from a string or a function returning a string.\n   *\n   * @param {string|object} template html template as a string or function that \n   * returns an html template as a string.\n   * @param {object} params Parameters to pass to the template function.\n   *\n   * @return {string|object} The template html as a string, or a promise for that \n   * string.\n   */\n  this.fromString = function (template, params) {\n    return isFunction(template) ? template(params) : template;\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$templateFactory#fromUrl\n   * @methodOf ui.router.util.$templateFactory\n   * \n   * @description\n   * Loads a template from the a URL via `$http` and `$templateCache`.\n   *\n   * @param {string|Function} url url of the template to load, or a function \n   * that returns a url.\n   * @param {Object} params Parameters to pass to the url function.\n   * @return {string|Promise.<string>} The template html as a string, or a promise \n   * for that string.\n   */\n  this.fromUrl = function (url, params) {\n    if (isFunction(url)) url = url(params);\n    if (url == null) return null;\n    else return $http\n        .get(url, { cache: $templateCache, headers: { Accept: 'text/html' }})\n        .then(function(response) { return response.data; });\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$templateFactory#fromProvider\n   * @methodOf ui.router.util.$templateFactory\n   *\n   * @description\n   * Creates a template by invoking an injectable provider function.\n   *\n   * @param {Function} provider Function to invoke via `$injector.invoke`\n   * @param {Object} params Parameters for the template.\n   * @param {Object} locals Locals to pass to `invoke`. Defaults to \n   * `{ params: params }`.\n   * @return {string|Promise.<string>} The template html as a string, or a promise \n   * for that string.\n   */\n  this.fromProvider = function (provider, params, locals) {\n    return $injector.invoke(provider, null, locals || { params: params });\n  };\n}\n\nangular.module('ui.router.util').service('$templateFactory', $TemplateFactory);\n\nvar $$UMFP; // reference to $UrlMatcherFactoryProvider\n\n/**\n * @ngdoc object\n * @name ui.router.util.type:UrlMatcher\n *\n * @description\n * Matches URLs against patterns and extracts named parameters from the path or the search\n * part of the URL. A URL pattern consists of a path pattern, optionally followed by '?' and a list\n * of search parameters. Multiple search parameter names are separated by '&'. Search parameters\n * do not influence whether or not a URL is matched, but their values are passed through into\n * the matched parameters returned by {@link ui.router.util.type:UrlMatcher#methods_exec exec}.\n *\n * Path parameter placeholders can be specified using simple colon/catch-all syntax or curly brace\n * syntax, which optionally allows a regular expression for the parameter to be specified:\n *\n * * `':'` name - colon placeholder\n * * `'*'` name - catch-all placeholder\n * * `'{' name '}'` - curly placeholder\n * * `'{' name ':' regexp|type '}'` - curly placeholder with regexp or type name. Should the\n *   regexp itself contain curly braces, they must be in matched pairs or escaped with a backslash.\n *\n * Parameter names may contain only word characters (latin letters, digits, and underscore) and\n * must be unique within the pattern (across both path and search parameters). For colon\n * placeholders or curly placeholders without an explicit regexp, a path parameter matches any\n * number of characters other than '/'. For catch-all placeholders the path parameter matches\n * any number of characters.\n *\n * Examples:\n *\n * * `'/hello/'` - Matches only if the path is exactly '/hello/'. There is no special treatment for\n *   trailing slashes, and patterns have to match the entire path, not just a prefix.\n * * `'/user/:id'` - Matches '/user/bob' or '/user/1234!!!' or even '/user/' but not '/user' or\n *   '/user/bob/details'. The second path segment will be captured as the parameter 'id'.\n * * `'/user/{id}'` - Same as the previous example, but using curly brace syntax.\n * * `'/user/{id:[^/]*}'` - Same as the previous example.\n * * `'/user/{id:[0-9a-fA-F]{1,8}}'` - Similar to the previous example, but only matches if the id\n *   parameter consists of 1 to 8 hex digits.\n * * `'/files/{path:.*}'` - Matches any URL starting with '/files/' and captures the rest of the\n *   path into the parameter 'path'.\n * * `'/files/*path'` - ditto.\n * * `'/calendar/{start:date}'` - Matches \"/calendar/2014-11-12\" (because the pattern defined\n *   in the built-in  `date` Type matches `2014-11-12`) and provides a Date object in $stateParams.start\n *\n * @param {string} pattern  The pattern to compile into a matcher.\n * @param {Object} config  A configuration object hash:\n * @param {Object=} parentMatcher Used to concatenate the pattern/config onto\n *   an existing UrlMatcher\n *\n * * `caseInsensitive` - `true` if URL matching should be case insensitive, otherwise `false`, the default value (for backward compatibility) is `false`.\n * * `strict` - `false` if matching against a URL with a trailing slash should be treated as equivalent to a URL without a trailing slash, the default value is `true`.\n *\n * @property {string} prefix  A static prefix of this pattern. The matcher guarantees that any\n *   URL matching this matcher (i.e. any string for which {@link ui.router.util.type:UrlMatcher#methods_exec exec()} returns\n *   non-null) will start with this prefix.\n *\n * @property {string} source  The pattern that was passed into the constructor\n *\n * @property {string} sourcePath  The path portion of the source property\n *\n * @property {string} sourceSearch  The search portion of the source property\n *\n * @property {string} regex  The constructed regex that will be used to match against the url when\n *   it is time to determine which url will match.\n *\n * @returns {Object}  New `UrlMatcher` object\n */\nfunction UrlMatcher(pattern, config, parentMatcher) {\n  config = extend({ params: {} }, isObject(config) ? config : {});\n\n  // Find all placeholders and create a compiled pattern, using either classic or curly syntax:\n  //   '*' name\n  //   ':' name\n  //   '{' name '}'\n  //   '{' name ':' regexp '}'\n  // The regular expression is somewhat complicated due to the need to allow curly braces\n  // inside the regular expression. The placeholder regexp breaks down as follows:\n  //    ([:*])([\\w\\[\\]]+)              - classic placeholder ($1 / $2) (search version has - for snake-case)\n  //    \\{([\\w\\[\\]]+)(?:\\:( ... ))?\\}  - curly brace placeholder ($3) with optional regexp/type ... ($4) (search version has - for snake-case\n  //    (?: ... | ... | ... )+         - the regexp consists of any number of atoms, an atom being either\n  //    [^{}\\\\]+                       - anything other than curly braces or backslash\n  //    \\\\.                            - a backslash escape\n  //    \\{(?:[^{}\\\\]+|\\\\.)*\\}          - a matched set of curly braces containing other atoms\n  var placeholder       = /([:*])([\\w\\[\\]]+)|\\{([\\w\\[\\]]+)(?:\\:((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}/g,\n      searchPlaceholder = /([:]?)([\\w\\[\\]-]+)|\\{([\\w\\[\\]-]+)(?:\\:((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}/g,\n      compiled = '^', last = 0, m,\n      segments = this.segments = [],\n      parentParams = parentMatcher ? parentMatcher.params : {},\n      params = this.params = parentMatcher ? parentMatcher.params.$$new() : new $$UMFP.ParamSet(),\n      paramNames = [];\n\n  function addParameter(id, type, config, location) {\n    paramNames.push(id);\n    if (parentParams[id]) return parentParams[id];\n    if (!/^\\w+(-+\\w+)*(?:\\[\\])?$/.test(id)) throw new Error(\"Invalid parameter name '\" + id + \"' in pattern '\" + pattern + \"'\");\n    if (params[id]) throw new Error(\"Duplicate parameter name '\" + id + \"' in pattern '\" + pattern + \"'\");\n    params[id] = new $$UMFP.Param(id, type, config, location);\n    return params[id];\n  }\n\n  function quoteRegExp(string, pattern, squash, optional) {\n    var surroundPattern = ['',''], result = string.replace(/[\\\\\\[\\]\\^$*+?.()|{}]/g, \"\\\\$&\");\n    if (!pattern) return result;\n    switch(squash) {\n      case false: surroundPattern = ['(', ')' + (optional ? \"?\" : \"\")]; break;\n      case true:  surroundPattern = ['?(', ')?']; break;\n      default:    surroundPattern = ['(' + squash + \"|\", ')?']; break;\n    }\n    return result + surroundPattern[0] + pattern + surroundPattern[1];\n  }\n\n  this.source = pattern;\n\n  // Split into static segments separated by path parameter placeholders.\n  // The number of segments is always 1 more than the number of parameters.\n  function matchDetails(m, isSearch) {\n    var id, regexp, segment, type, cfg, arrayMode;\n    id          = m[2] || m[3]; // IE[78] returns '' for unmatched groups instead of null\n    cfg         = config.params[id];\n    segment     = pattern.substring(last, m.index);\n    regexp      = isSearch ? m[4] : m[4] || (m[1] == '*' ? '.*' : null);\n    type        = $$UMFP.type(regexp || \"string\") || inherit($$UMFP.type(\"string\"), { pattern: new RegExp(regexp, config.caseInsensitive ? 'i' : undefined) });\n    return {\n      id: id, regexp: regexp, segment: segment, type: type, cfg: cfg\n    };\n  }\n\n  var p, param, segment;\n  while ((m = placeholder.exec(pattern))) {\n    p = matchDetails(m, false);\n    if (p.segment.indexOf('?') >= 0) break; // we're into the search part\n\n    param = addParameter(p.id, p.type, p.cfg, \"path\");\n    compiled += quoteRegExp(p.segment, param.type.pattern.source, param.squash, param.isOptional);\n    segments.push(p.segment);\n    last = placeholder.lastIndex;\n  }\n  segment = pattern.substring(last);\n\n  // Find any search parameter names and remove them from the last segment\n  var i = segment.indexOf('?');\n\n  if (i >= 0) {\n    var search = this.sourceSearch = segment.substring(i);\n    segment = segment.substring(0, i);\n    this.sourcePath = pattern.substring(0, last + i);\n\n    if (search.length > 0) {\n      last = 0;\n      while ((m = searchPlaceholder.exec(search))) {\n        p = matchDetails(m, true);\n        param = addParameter(p.id, p.type, p.cfg, \"search\");\n        last = placeholder.lastIndex;\n        // check if ?&\n      }\n    }\n  } else {\n    this.sourcePath = pattern;\n    this.sourceSearch = '';\n  }\n\n  compiled += quoteRegExp(segment) + (config.strict === false ? '\\/?' : '') + '$';\n  segments.push(segment);\n\n  this.regexp = new RegExp(compiled, config.caseInsensitive ? 'i' : undefined);\n  this.prefix = segments[0];\n  this.$$paramNames = paramNames;\n}\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:UrlMatcher#concat\n * @methodOf ui.router.util.type:UrlMatcher\n *\n * @description\n * Returns a new matcher for a pattern constructed by appending the path part and adding the\n * search parameters of the specified pattern to this pattern. The current pattern is not\n * modified. This can be understood as creating a pattern for URLs that are relative to (or\n * suffixes of) the current pattern.\n *\n * @example\n * The following two matchers are equivalent:\n * <pre>\n * new UrlMatcher('/user/{id}?q').concat('/details?date');\n * new UrlMatcher('/user/{id}/details?q&date');\n * </pre>\n *\n * @param {string} pattern  The pattern to append.\n * @param {Object} config  An object hash of the configuration for the matcher.\n * @returns {UrlMatcher}  A matcher for the concatenated pattern.\n */\nUrlMatcher.prototype.concat = function (pattern, config) {\n  // Because order of search parameters is irrelevant, we can add our own search\n  // parameters to the end of the new pattern. Parse the new pattern by itself\n  // and then join the bits together, but it's much easier to do this on a string level.\n  var defaultConfig = {\n    caseInsensitive: $$UMFP.caseInsensitive(),\n    strict: $$UMFP.strictMode(),\n    squash: $$UMFP.defaultSquashPolicy()\n  };\n  return new UrlMatcher(this.sourcePath + pattern + this.sourceSearch, extend(defaultConfig, config), this);\n};\n\nUrlMatcher.prototype.toString = function () {\n  return this.source;\n};\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:UrlMatcher#exec\n * @methodOf ui.router.util.type:UrlMatcher\n *\n * @description\n * Tests the specified path against this matcher, and returns an object containing the captured\n * parameter values, or null if the path does not match. The returned object contains the values\n * of any search parameters that are mentioned in the pattern, but their value may be null if\n * they are not present in `searchParams`. This means that search parameters are always treated\n * as optional.\n *\n * @example\n * <pre>\n * new UrlMatcher('/user/{id}?q&r').exec('/user/bob', {\n *   x: '1', q: 'hello'\n * });\n * // returns { id: 'bob', q: 'hello', r: null }\n * </pre>\n *\n * @param {string} path  The URL path to match, e.g. `$location.path()`.\n * @param {Object} searchParams  URL search parameters, e.g. `$location.search()`.\n * @returns {Object}  The captured parameter values.\n */\nUrlMatcher.prototype.exec = function (path, searchParams) {\n  var m = this.regexp.exec(path);\n  if (!m) return null;\n  searchParams = searchParams || {};\n\n  var paramNames = this.parameters(), nTotal = paramNames.length,\n    nPath = this.segments.length - 1,\n    values = {}, i, j, cfg, paramName;\n\n  if (nPath !== m.length - 1) throw new Error(\"Unbalanced capture group in route '\" + this.source + \"'\");\n\n  function decodePathArray(string) {\n    function reverseString(str) { return str.split(\"\").reverse().join(\"\"); }\n    function unquoteDashes(str) { return str.replace(/\\\\-/g, \"-\"); }\n\n    var split = reverseString(string).split(/-(?!\\\\)/);\n    var allReversed = map(split, reverseString);\n    return map(allReversed, unquoteDashes).reverse();\n  }\n\n  for (i = 0; i < nPath; i++) {\n    paramName = paramNames[i];\n    var param = this.params[paramName];\n    var paramVal = m[i+1];\n    // if the param value matches a pre-replace pair, replace the value before decoding.\n    for (j = 0; j < param.replace; j++) {\n      if (param.replace[j].from === paramVal) paramVal = param.replace[j].to;\n    }\n    if (paramVal && param.array === true) paramVal = decodePathArray(paramVal);\n    values[paramName] = param.value(paramVal);\n  }\n  for (/**/; i < nTotal; i++) {\n    paramName = paramNames[i];\n    values[paramName] = this.params[paramName].value(searchParams[paramName]);\n  }\n\n  return values;\n};\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:UrlMatcher#parameters\n * @methodOf ui.router.util.type:UrlMatcher\n *\n * @description\n * Returns the names of all path and search parameters of this pattern in an unspecified order.\n *\n * @returns {Array.<string>}  An array of parameter names. Must be treated as read-only. If the\n *    pattern has no parameters, an empty array is returned.\n */\nUrlMatcher.prototype.parameters = function (param) {\n  if (!isDefined(param)) return this.$$paramNames;\n  return this.params[param] || null;\n};\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:UrlMatcher#validate\n * @methodOf ui.router.util.type:UrlMatcher\n *\n * @description\n * Checks an object hash of parameters to validate their correctness according to the parameter\n * types of this `UrlMatcher`.\n *\n * @param {Object} params The object hash of parameters to validate.\n * @returns {boolean} Returns `true` if `params` validates, otherwise `false`.\n */\nUrlMatcher.prototype.validates = function (params) {\n  return this.params.$$validates(params);\n};\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:UrlMatcher#format\n * @methodOf ui.router.util.type:UrlMatcher\n *\n * @description\n * Creates a URL that matches this pattern by substituting the specified values\n * for the path and search parameters. Null values for path parameters are\n * treated as empty strings.\n *\n * @example\n * <pre>\n * new UrlMatcher('/user/{id}?q').format({ id:'bob', q:'yes' });\n * // returns '/user/bob?q=yes'\n * </pre>\n *\n * @param {Object} values  the values to substitute for the parameters in this pattern.\n * @returns {string}  the formatted URL (path and optionally search part).\n */\nUrlMatcher.prototype.format = function (values) {\n  values = values || {};\n  var segments = this.segments, params = this.parameters(), paramset = this.params;\n  if (!this.validates(values)) return null;\n\n  var i, search = false, nPath = segments.length - 1, nTotal = params.length, result = segments[0];\n\n  function encodeDashes(str) { // Replace dashes with encoded \"\\-\"\n    return encodeURIComponent(str).replace(/-/g, function(c) { return '%5C%' + c.charCodeAt(0).toString(16).toUpperCase(); });\n  }\n\n  for (i = 0; i < nTotal; i++) {\n    var isPathParam = i < nPath;\n    var name = params[i], param = paramset[name], value = param.value(values[name]);\n    var isDefaultValue = param.isOptional && param.type.equals(param.value(), value);\n    var squash = isDefaultValue ? param.squash : false;\n    var encoded = param.type.encode(value);\n\n    if (isPathParam) {\n      var nextSegment = segments[i + 1];\n      if (squash === false) {\n        if (encoded != null) {\n          if (isArray(encoded)) {\n            result += map(encoded, encodeDashes).join(\"-\");\n          } else {\n            result += encodeURIComponent(encoded);\n          }\n        }\n        result += nextSegment;\n      } else if (squash === true) {\n        var capture = result.match(/\\/$/) ? /\\/?(.*)/ : /(.*)/;\n        result += nextSegment.match(capture)[1];\n      } else if (isString(squash)) {\n        result += squash + nextSegment;\n      }\n    } else {\n      if (encoded == null || (isDefaultValue && squash !== false)) continue;\n      if (!isArray(encoded)) encoded = [ encoded ];\n      encoded = map(encoded, encodeURIComponent).join('&' + name + '=');\n      result += (search ? '&' : '?') + (name + '=' + encoded);\n      search = true;\n    }\n  }\n\n  return result;\n};\n\n/**\n * @ngdoc object\n * @name ui.router.util.type:Type\n *\n * @description\n * Implements an interface to define custom parameter types that can be decoded from and encoded to\n * string parameters matched in a URL. Used by {@link ui.router.util.type:UrlMatcher `UrlMatcher`}\n * objects when matching or formatting URLs, or comparing or validating parameter values.\n *\n * See {@link ui.router.util.$urlMatcherFactory#methods_type `$urlMatcherFactory#type()`} for more\n * information on registering custom types.\n *\n * @param {Object} config  A configuration object which contains the custom type definition.  The object's\n *        properties will override the default methods and/or pattern in `Type`'s public interface.\n * @example\n * <pre>\n * {\n *   decode: function(val) { return parseInt(val, 10); },\n *   encode: function(val) { return val && val.toString(); },\n *   equals: function(a, b) { return this.is(a) && a === b; },\n *   is: function(val) { return angular.isNumber(val) isFinite(val) && val % 1 === 0; },\n *   pattern: /\\d+/\n * }\n * </pre>\n *\n * @property {RegExp} pattern The regular expression pattern used to match values of this type when\n *           coming from a substring of a URL.\n *\n * @returns {Object}  Returns a new `Type` object.\n */\nfunction Type(config) {\n  extend(this, config);\n}\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:Type#is\n * @methodOf ui.router.util.type:Type\n *\n * @description\n * Detects whether a value is of a particular type. Accepts a native (decoded) value\n * and determines whether it matches the current `Type` object.\n *\n * @param {*} val  The value to check.\n * @param {string} key  Optional. If the type check is happening in the context of a specific\n *        {@link ui.router.util.type:UrlMatcher `UrlMatcher`} object, this is the name of the\n *        parameter in which `val` is stored. Can be used for meta-programming of `Type` objects.\n * @returns {Boolean}  Returns `true` if the value matches the type, otherwise `false`.\n */\nType.prototype.is = function(val, key) {\n  return true;\n};\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:Type#encode\n * @methodOf ui.router.util.type:Type\n *\n * @description\n * Encodes a custom/native type value to a string that can be embedded in a URL. Note that the\n * return value does *not* need to be URL-safe (i.e. passed through `encodeURIComponent()`), it\n * only needs to be a representation of `val` that has been coerced to a string.\n *\n * @param {*} val  The value to encode.\n * @param {string} key  The name of the parameter in which `val` is stored. Can be used for\n *        meta-programming of `Type` objects.\n * @returns {string}  Returns a string representation of `val` that can be encoded in a URL.\n */\nType.prototype.encode = function(val, key) {\n  return val;\n};\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:Type#decode\n * @methodOf ui.router.util.type:Type\n *\n * @description\n * Converts a parameter value (from URL string or transition param) to a custom/native value.\n *\n * @param {string} val  The URL parameter value to decode.\n * @param {string} key  The name of the parameter in which `val` is stored. Can be used for\n *        meta-programming of `Type` objects.\n * @returns {*}  Returns a custom representation of the URL parameter value.\n */\nType.prototype.decode = function(val, key) {\n  return val;\n};\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:Type#equals\n * @methodOf ui.router.util.type:Type\n *\n * @description\n * Determines whether two decoded values are equivalent.\n *\n * @param {*} a  A value to compare against.\n * @param {*} b  A value to compare against.\n * @returns {Boolean}  Returns `true` if the values are equivalent/equal, otherwise `false`.\n */\nType.prototype.equals = function(a, b) {\n  return a == b;\n};\n\nType.prototype.$subPattern = function() {\n  var sub = this.pattern.toString();\n  return sub.substr(1, sub.length - 2);\n};\n\nType.prototype.pattern = /.*/;\n\nType.prototype.toString = function() { return \"{Type:\" + this.name + \"}\"; };\n\n/** Given an encoded string, or a decoded object, returns a decoded object */\nType.prototype.$normalize = function(val) {\n  return this.is(val) ? val : this.decode(val);\n};\n\n/*\n * Wraps an existing custom Type as an array of Type, depending on 'mode'.\n * e.g.:\n * - urlmatcher pattern \"/path?{queryParam[]:int}\"\n * - url: \"/path?queryParam=1&queryParam=2\n * - $stateParams.queryParam will be [1, 2]\n * if `mode` is \"auto\", then\n * - url: \"/path?queryParam=1 will create $stateParams.queryParam: 1\n * - url: \"/path?queryParam=1&queryParam=2 will create $stateParams.queryParam: [1, 2]\n */\nType.prototype.$asArray = function(mode, isSearch) {\n  if (!mode) return this;\n  if (mode === \"auto\" && !isSearch) throw new Error(\"'auto' array mode is for query parameters only\");\n\n  function ArrayType(type, mode) {\n    function bindTo(type, callbackName) {\n      return function() {\n        return type[callbackName].apply(type, arguments);\n      };\n    }\n\n    // Wrap non-array value as array\n    function arrayWrap(val) { return isArray(val) ? val : (isDefined(val) ? [ val ] : []); }\n    // Unwrap array value for \"auto\" mode. Return undefined for empty array.\n    function arrayUnwrap(val) {\n      switch(val.length) {\n        case 0: return undefined;\n        case 1: return mode === \"auto\" ? val[0] : val;\n        default: return val;\n      }\n    }\n    function falsey(val) { return !val; }\n\n    // Wraps type (.is/.encode/.decode) functions to operate on each value of an array\n    function arrayHandler(callback, allTruthyMode) {\n      return function handleArray(val) {\n        val = arrayWrap(val);\n        var result = map(val, callback);\n        if (allTruthyMode === true)\n          return filter(result, falsey).length === 0;\n        return arrayUnwrap(result);\n      };\n    }\n\n    // Wraps type (.equals) functions to operate on each value of an array\n    function arrayEqualsHandler(callback) {\n      return function handleArray(val1, val2) {\n        var left = arrayWrap(val1), right = arrayWrap(val2);\n        if (left.length !== right.length) return false;\n        for (var i = 0; i < left.length; i++) {\n          if (!callback(left[i], right[i])) return false;\n        }\n        return true;\n      };\n    }\n\n    this.encode = arrayHandler(bindTo(type, 'encode'));\n    this.decode = arrayHandler(bindTo(type, 'decode'));\n    this.is     = arrayHandler(bindTo(type, 'is'), true);\n    this.equals = arrayEqualsHandler(bindTo(type, 'equals'));\n    this.pattern = type.pattern;\n    this.$normalize = arrayHandler(bindTo(type, '$normalize'));\n    this.name = type.name;\n    this.$arrayMode = mode;\n  }\n\n  return new ArrayType(this, mode);\n};\n\n\n\n/**\n * @ngdoc object\n * @name ui.router.util.$urlMatcherFactory\n *\n * @description\n * Factory for {@link ui.router.util.type:UrlMatcher `UrlMatcher`} instances. The factory\n * is also available to providers under the name `$urlMatcherFactoryProvider`.\n */\nfunction $UrlMatcherFactory() {\n  $$UMFP = this;\n\n  var isCaseInsensitive = false, isStrictMode = true, defaultSquashPolicy = false;\n\n  function valToString(val) { return val != null ? val.toString().replace(/\\//g, \"%2F\") : val; }\n  function valFromString(val) { return val != null ? val.toString().replace(/%2F/g, \"/\") : val; }\n\n  var $types = {}, enqueue = true, typeQueue = [], injector, defaultTypes = {\n    string: {\n      encode: valToString,\n      decode: valFromString,\n      // TODO: in 1.0, make string .is() return false if value is undefined/null by default.\n      // In 0.2.x, string params are optional by default for backwards compat\n      is: function(val) { return val == null || !isDefined(val) || typeof val === \"string\"; },\n      pattern: /[^/]*/\n    },\n    int: {\n      encode: valToString,\n      decode: function(val) { return parseInt(val, 10); },\n      is: function(val) { return isDefined(val) && this.decode(val.toString()) === val; },\n      pattern: /\\d+/\n    },\n    bool: {\n      encode: function(val) { return val ? 1 : 0; },\n      decode: function(val) { return parseInt(val, 10) !== 0; },\n      is: function(val) { return val === true || val === false; },\n      pattern: /0|1/\n    },\n    date: {\n      encode: function (val) {\n        if (!this.is(val))\n          return undefined;\n        return [ val.getFullYear(),\n          ('0' + (val.getMonth() + 1)).slice(-2),\n          ('0' + val.getDate()).slice(-2)\n        ].join(\"-\");\n      },\n      decode: function (val) {\n        if (this.is(val)) return val;\n        var match = this.capture.exec(val);\n        return match ? new Date(match[1], match[2] - 1, match[3]) : undefined;\n      },\n      is: function(val) { return val instanceof Date && !isNaN(val.valueOf()); },\n      equals: function (a, b) { return this.is(a) && this.is(b) && a.toISOString() === b.toISOString(); },\n      pattern: /[0-9]{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-2][0-9]|3[0-1])/,\n      capture: /([0-9]{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])/\n    },\n    json: {\n      encode: angular.toJson,\n      decode: angular.fromJson,\n      is: angular.isObject,\n      equals: angular.equals,\n      pattern: /[^/]*/\n    },\n    any: { // does not encode/decode\n      encode: angular.identity,\n      decode: angular.identity,\n      equals: angular.equals,\n      pattern: /.*/\n    }\n  };\n\n  function getDefaultConfig() {\n    return {\n      strict: isStrictMode,\n      caseInsensitive: isCaseInsensitive\n    };\n  }\n\n  function isInjectable(value) {\n    return (isFunction(value) || (isArray(value) && isFunction(value[value.length - 1])));\n  }\n\n  /**\n   * [Internal] Get the default value of a parameter, which may be an injectable function.\n   */\n  $UrlMatcherFactory.$$getDefaultValue = function(config) {\n    if (!isInjectable(config.value)) return config.value;\n    if (!injector) throw new Error(\"Injectable functions cannot be called at configuration time\");\n    return injector.invoke(config.value);\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$urlMatcherFactory#caseInsensitive\n   * @methodOf ui.router.util.$urlMatcherFactory\n   *\n   * @description\n   * Defines whether URL matching should be case sensitive (the default behavior), or not.\n   *\n   * @param {boolean} value `false` to match URL in a case sensitive manner; otherwise `true`;\n   * @returns {boolean} the current value of caseInsensitive\n   */\n  this.caseInsensitive = function(value) {\n    if (isDefined(value))\n      isCaseInsensitive = value;\n    return isCaseInsensitive;\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$urlMatcherFactory#strictMode\n   * @methodOf ui.router.util.$urlMatcherFactory\n   *\n   * @description\n   * Defines whether URLs should match trailing slashes, or not (the default behavior).\n   *\n   * @param {boolean=} value `false` to match trailing slashes in URLs, otherwise `true`.\n   * @returns {boolean} the current value of strictMode\n   */\n  this.strictMode = function(value) {\n    if (isDefined(value))\n      isStrictMode = value;\n    return isStrictMode;\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$urlMatcherFactory#defaultSquashPolicy\n   * @methodOf ui.router.util.$urlMatcherFactory\n   *\n   * @description\n   * Sets the default behavior when generating or matching URLs with default parameter values.\n   *\n   * @param {string} value A string that defines the default parameter URL squashing behavior.\n   *    `nosquash`: When generating an href with a default parameter value, do not squash the parameter value from the URL\n   *    `slash`: When generating an href with a default parameter value, squash (remove) the parameter value, and, if the\n   *             parameter is surrounded by slashes, squash (remove) one slash from the URL\n   *    any other string, e.g. \"~\": When generating an href with a default parameter value, squash (remove)\n   *             the parameter value from the URL and replace it with this string.\n   */\n  this.defaultSquashPolicy = function(value) {\n    if (!isDefined(value)) return defaultSquashPolicy;\n    if (value !== true && value !== false && !isString(value))\n      throw new Error(\"Invalid squash policy: \" + value + \". Valid policies: false, true, arbitrary-string\");\n    defaultSquashPolicy = value;\n    return value;\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$urlMatcherFactory#compile\n   * @methodOf ui.router.util.$urlMatcherFactory\n   *\n   * @description\n   * Creates a {@link ui.router.util.type:UrlMatcher `UrlMatcher`} for the specified pattern.\n   *\n   * @param {string} pattern  The URL pattern.\n   * @param {Object} config  The config object hash.\n   * @returns {UrlMatcher}  The UrlMatcher.\n   */\n  this.compile = function (pattern, config) {\n    return new UrlMatcher(pattern, extend(getDefaultConfig(), config));\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$urlMatcherFactory#isMatcher\n   * @methodOf ui.router.util.$urlMatcherFactory\n   *\n   * @description\n   * Returns true if the specified object is a `UrlMatcher`, or false otherwise.\n   *\n   * @param {Object} object  The object to perform the type check against.\n   * @returns {Boolean}  Returns `true` if the object matches the `UrlMatcher` interface, by\n   *          implementing all the same methods.\n   */\n  this.isMatcher = function (o) {\n    if (!isObject(o)) return false;\n    var result = true;\n\n    forEach(UrlMatcher.prototype, function(val, name) {\n      if (isFunction(val)) {\n        result = result && (isDefined(o[name]) && isFunction(o[name]));\n      }\n    });\n    return result;\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$urlMatcherFactory#type\n   * @methodOf ui.router.util.$urlMatcherFactory\n   *\n   * @description\n   * Registers a custom {@link ui.router.util.type:Type `Type`} object that can be used to\n   * generate URLs with typed parameters.\n   *\n   * @param {string} name  The type name.\n   * @param {Object|Function} definition   The type definition. See\n   *        {@link ui.router.util.type:Type `Type`} for information on the values accepted.\n   * @param {Object|Function} definitionFn (optional) A function that is injected before the app\n   *        runtime starts.  The result of this function is merged into the existing `definition`.\n   *        See {@link ui.router.util.type:Type `Type`} for information on the values accepted.\n   *\n   * @returns {Object}  Returns `$urlMatcherFactoryProvider`.\n   *\n   * @example\n   * This is a simple example of a custom type that encodes and decodes items from an\n   * array, using the array index as the URL-encoded value:\n   *\n   * <pre>\n   * var list = ['John', 'Paul', 'George', 'Ringo'];\n   *\n   * $urlMatcherFactoryProvider.type('listItem', {\n   *   encode: function(item) {\n   *     // Represent the list item in the URL using its corresponding index\n   *     return list.indexOf(item);\n   *   },\n   *   decode: function(item) {\n   *     // Look up the list item by index\n   *     return list[parseInt(item, 10)];\n   *   },\n   *   is: function(item) {\n   *     // Ensure the item is valid by checking to see that it appears\n   *     // in the list\n   *     return list.indexOf(item) > -1;\n   *   }\n   * });\n   *\n   * $stateProvider.state('list', {\n   *   url: \"/list/{item:listItem}\",\n   *   controller: function($scope, $stateParams) {\n   *     console.log($stateParams.item);\n   *   }\n   * });\n   *\n   * // ...\n   *\n   * // Changes URL to '/list/3', logs \"Ringo\" to the console\n   * $state.go('list', { item: \"Ringo\" });\n   * </pre>\n   *\n   * This is a more complex example of a type that relies on dependency injection to\n   * interact with services, and uses the parameter name from the URL to infer how to\n   * handle encoding and decoding parameter values:\n   *\n   * <pre>\n   * // Defines a custom type that gets a value from a service,\n   * // where each service gets different types of values from\n   * // a backend API:\n   * $urlMatcherFactoryProvider.type('dbObject', {}, function(Users, Posts) {\n   *\n   *   // Matches up services to URL parameter names\n   *   var services = {\n   *     user: Users,\n   *     post: Posts\n   *   };\n   *\n   *   return {\n   *     encode: function(object) {\n   *       // Represent the object in the URL using its unique ID\n   *       return object.id;\n   *     },\n   *     decode: function(value, key) {\n   *       // Look up the object by ID, using the parameter\n   *       // name (key) to call the correct service\n   *       return services[key].findById(value);\n   *     },\n   *     is: function(object, key) {\n   *       // Check that object is a valid dbObject\n   *       return angular.isObject(object) && object.id && services[key];\n   *     }\n   *     equals: function(a, b) {\n   *       // Check the equality of decoded objects by comparing\n   *       // their unique IDs\n   *       return a.id === b.id;\n   *     }\n   *   };\n   * });\n   *\n   * // In a config() block, you can then attach URLs with\n   * // type-annotated parameters:\n   * $stateProvider.state('users', {\n   *   url: \"/users\",\n   *   // ...\n   * }).state('users.item', {\n   *   url: \"/{user:dbObject}\",\n   *   controller: function($scope, $stateParams) {\n   *     // $stateParams.user will now be an object returned from\n   *     // the Users service\n   *   },\n   *   // ...\n   * });\n   * </pre>\n   */\n  this.type = function (name, definition, definitionFn) {\n    if (!isDefined(definition)) return $types[name];\n    if ($types.hasOwnProperty(name)) throw new Error(\"A type named '\" + name + \"' has already been defined.\");\n\n    $types[name] = new Type(extend({ name: name }, definition));\n    if (definitionFn) {\n      typeQueue.push({ name: name, def: definitionFn });\n      if (!enqueue) flushTypeQueue();\n    }\n    return this;\n  };\n\n  // `flushTypeQueue()` waits until `$urlMatcherFactory` is injected before invoking the queued `definitionFn`s\n  function flushTypeQueue() {\n    while(typeQueue.length) {\n      var type = typeQueue.shift();\n      if (type.pattern) throw new Error(\"You cannot override a type's .pattern at runtime.\");\n      angular.extend($types[type.name], injector.invoke(type.def));\n    }\n  }\n\n  // Register default types. Store them in the prototype of $types.\n  forEach(defaultTypes, function(type, name) { $types[name] = new Type(extend({name: name}, type)); });\n  $types = inherit($types, {});\n\n  /* No need to document $get, since it returns this */\n  this.$get = ['$injector', function ($injector) {\n    injector = $injector;\n    enqueue = false;\n    flushTypeQueue();\n\n    forEach(defaultTypes, function(type, name) {\n      if (!$types[name]) $types[name] = new Type(type);\n    });\n    return this;\n  }];\n\n  this.Param = function Param(id, type, config, location) {\n    var self = this;\n    config = unwrapShorthand(config);\n    type = getType(config, type, location);\n    var arrayMode = getArrayMode();\n    type = arrayMode ? type.$asArray(arrayMode, location === \"search\") : type;\n    if (type.name === \"string\" && !arrayMode && location === \"path\" && config.value === undefined)\n      config.value = \"\"; // for 0.2.x; in 0.3.0+ do not automatically default to \"\"\n    var isOptional = config.value !== undefined;\n    var squash = getSquashPolicy(config, isOptional);\n    var replace = getReplace(config, arrayMode, isOptional, squash);\n\n    function unwrapShorthand(config) {\n      var keys = isObject(config) ? objectKeys(config) : [];\n      var isShorthand = indexOf(keys, \"value\") === -1 && indexOf(keys, \"type\") === -1 &&\n                        indexOf(keys, \"squash\") === -1 && indexOf(keys, \"array\") === -1;\n      if (isShorthand) config = { value: config };\n      config.$$fn = isInjectable(config.value) ? config.value : function () { return config.value; };\n      return config;\n    }\n\n    function getType(config, urlType, location) {\n      if (config.type && urlType) throw new Error(\"Param '\"+id+\"' has two type configurations.\");\n      if (urlType) return urlType;\n      if (!config.type) return (location === \"config\" ? $types.any : $types.string);\n      return config.type instanceof Type ? config.type : new Type(config.type);\n    }\n\n    // array config: param name (param[]) overrides default settings.  explicit config overrides param name.\n    function getArrayMode() {\n      var arrayDefaults = { array: (location === \"search\" ? \"auto\" : false) };\n      var arrayParamNomenclature = id.match(/\\[\\]$/) ? { array: true } : {};\n      return extend(arrayDefaults, arrayParamNomenclature, config).array;\n    }\n\n    /**\n     * returns false, true, or the squash value to indicate the \"default parameter url squash policy\".\n     */\n    function getSquashPolicy(config, isOptional) {\n      var squash = config.squash;\n      if (!isOptional || squash === false) return false;\n      if (!isDefined(squash) || squash == null) return defaultSquashPolicy;\n      if (squash === true || isString(squash)) return squash;\n      throw new Error(\"Invalid squash policy: '\" + squash + \"'. Valid policies: false, true, or arbitrary string\");\n    }\n\n    function getReplace(config, arrayMode, isOptional, squash) {\n      var replace, configuredKeys, defaultPolicy = [\n        { from: \"\",   to: (isOptional || arrayMode ? undefined : \"\") },\n        { from: null, to: (isOptional || arrayMode ? undefined : \"\") }\n      ];\n      replace = isArray(config.replace) ? config.replace : [];\n      if (isString(squash))\n        replace.push({ from: squash, to: undefined });\n      configuredKeys = map(replace, function(item) { return item.from; } );\n      return filter(defaultPolicy, function(item) { return indexOf(configuredKeys, item.from) === -1; }).concat(replace);\n    }\n\n    /**\n     * [Internal] Get the default value of a parameter, which may be an injectable function.\n     */\n    function $$getDefaultValue() {\n      if (!injector) throw new Error(\"Injectable functions cannot be called at configuration time\");\n      var defaultValue = injector.invoke(config.$$fn);\n      if (defaultValue !== null && defaultValue !== undefined && !self.type.is(defaultValue))\n        throw new Error(\"Default value (\" + defaultValue + \") for parameter '\" + self.id + \"' is not an instance of Type (\" + self.type.name + \")\");\n      return defaultValue;\n    }\n\n    /**\n     * [Internal] Gets the decoded representation of a value if the value is defined, otherwise, returns the\n     * default value, which may be the result of an injectable function.\n     */\n    function $value(value) {\n      function hasReplaceVal(val) { return function(obj) { return obj.from === val; }; }\n      function $replace(value) {\n        var replacement = map(filter(self.replace, hasReplaceVal(value)), function(obj) { return obj.to; });\n        return replacement.length ? replacement[0] : value;\n      }\n      value = $replace(value);\n      return !isDefined(value) ? $$getDefaultValue() : self.type.$normalize(value);\n    }\n\n    function toString() { return \"{Param:\" + id + \" \" + type + \" squash: '\" + squash + \"' optional: \" + isOptional + \"}\"; }\n\n    extend(this, {\n      id: id,\n      type: type,\n      location: location,\n      array: arrayMode,\n      squash: squash,\n      replace: replace,\n      isOptional: isOptional,\n      value: $value,\n      dynamic: undefined,\n      config: config,\n      toString: toString\n    });\n  };\n\n  function ParamSet(params) {\n    extend(this, params || {});\n  }\n\n  ParamSet.prototype = {\n    $$new: function() {\n      return inherit(this, extend(new ParamSet(), { $$parent: this}));\n    },\n    $$keys: function () {\n      var keys = [], chain = [], parent = this,\n        ignore = objectKeys(ParamSet.prototype);\n      while (parent) { chain.push(parent); parent = parent.$$parent; }\n      chain.reverse();\n      forEach(chain, function(paramset) {\n        forEach(objectKeys(paramset), function(key) {\n            if (indexOf(keys, key) === -1 && indexOf(ignore, key) === -1) keys.push(key);\n        });\n      });\n      return keys;\n    },\n    $$values: function(paramValues) {\n      var values = {}, self = this;\n      forEach(self.$$keys(), function(key) {\n        values[key] = self[key].value(paramValues && paramValues[key]);\n      });\n      return values;\n    },\n    $$equals: function(paramValues1, paramValues2) {\n      var equal = true, self = this;\n      forEach(self.$$keys(), function(key) {\n        var left = paramValues1 && paramValues1[key], right = paramValues2 && paramValues2[key];\n        if (!self[key].type.equals(left, right)) equal = false;\n      });\n      return equal;\n    },\n    $$validates: function $$validate(paramValues) {\n      var keys = this.$$keys(), i, param, rawVal, normalized, encoded;\n      for (i = 0; i < keys.length; i++) {\n        param = this[keys[i]];\n        rawVal = paramValues[keys[i]];\n        if ((rawVal === undefined || rawVal === null) && param.isOptional)\n          break; // There was no parameter value, but the param is optional\n        normalized = param.type.$normalize(rawVal);\n        if (!param.type.is(normalized))\n          return false; // The value was not of the correct Type, and could not be decoded to the correct Type\n        encoded = param.type.encode(normalized);\n        if (angular.isString(encoded) && !param.type.pattern.exec(encoded))\n          return false; // The value was of the correct type, but when encoded, did not match the Type's regexp\n      }\n      return true;\n    },\n    $$parent: undefined\n  };\n\n  this.ParamSet = ParamSet;\n}\n\n// Register as a provider so it's available to other providers\nangular.module('ui.router.util').provider('$urlMatcherFactory', $UrlMatcherFactory);\nangular.module('ui.router.util').run(['$urlMatcherFactory', function($urlMatcherFactory) { }]);\n\n/**\n * @ngdoc object\n * @name ui.router.router.$urlRouterProvider\n *\n * @requires ui.router.util.$urlMatcherFactoryProvider\n * @requires $locationProvider\n *\n * @description\n * `$urlRouterProvider` has the responsibility of watching `$location`. \n * When `$location` changes it runs through a list of rules one by one until a \n * match is found. `$urlRouterProvider` is used behind the scenes anytime you specify \n * a url in a state configuration. All urls are compiled into a UrlMatcher object.\n *\n * There are several methods on `$urlRouterProvider` that make it useful to use directly\n * in your module config.\n */\n$UrlRouterProvider.$inject = ['$locationProvider', '$urlMatcherFactoryProvider'];\nfunction $UrlRouterProvider(   $locationProvider,   $urlMatcherFactory) {\n  var rules = [], otherwise = null, interceptDeferred = false, listener;\n\n  // Returns a string that is a prefix of all strings matching the RegExp\n  function regExpPrefix(re) {\n    var prefix = /^\\^((?:\\\\[^a-zA-Z0-9]|[^\\\\\\[\\]\\^$*+?.()|{}]+)*)/.exec(re.source);\n    return (prefix != null) ? prefix[1].replace(/\\\\(.)/g, \"$1\") : '';\n  }\n\n  // Interpolates matched values into a String.replace()-style pattern\n  function interpolate(pattern, match) {\n    return pattern.replace(/\\$(\\$|\\d{1,2})/, function (m, what) {\n      return match[what === '$' ? 0 : Number(what)];\n    });\n  }\n\n  /**\n   * @ngdoc function\n   * @name ui.router.router.$urlRouterProvider#rule\n   * @methodOf ui.router.router.$urlRouterProvider\n   *\n   * @description\n   * Defines rules that are used by `$urlRouterProvider` to find matches for\n   * specific URLs.\n   *\n   * @example\n   * <pre>\n   * var app = angular.module('app', ['ui.router.router']);\n   *\n   * app.config(function ($urlRouterProvider) {\n   *   // Here's an example of how you might allow case insensitive urls\n   *   $urlRouterProvider.rule(function ($injector, $location) {\n   *     var path = $location.path(),\n   *         normalized = path.toLowerCase();\n   *\n   *     if (path !== normalized) {\n   *       return normalized;\n   *     }\n   *   });\n   * });\n   * </pre>\n   *\n   * @param {object} rule Handler function that takes `$injector` and `$location`\n   * services as arguments. You can use them to return a valid path as a string.\n   *\n   * @return {object} `$urlRouterProvider` - `$urlRouterProvider` instance\n   */\n  this.rule = function (rule) {\n    if (!isFunction(rule)) throw new Error(\"'rule' must be a function\");\n    rules.push(rule);\n    return this;\n  };\n\n  /**\n   * @ngdoc object\n   * @name ui.router.router.$urlRouterProvider#otherwise\n   * @methodOf ui.router.router.$urlRouterProvider\n   *\n   * @description\n   * Defines a path that is used when an invalid route is requested.\n   *\n   * @example\n   * <pre>\n   * var app = angular.module('app', ['ui.router.router']);\n   *\n   * app.config(function ($urlRouterProvider) {\n   *   // if the path doesn't match any of the urls you configured\n   *   // otherwise will take care of routing the user to the\n   *   // specified url\n   *   $urlRouterProvider.otherwise('/index');\n   *\n   *   // Example of using function rule as param\n   *   $urlRouterProvider.otherwise(function ($injector, $location) {\n   *     return '/a/valid/url';\n   *   });\n   * });\n   * </pre>\n   *\n   * @param {string|object} rule The url path you want to redirect to or a function \n   * rule that returns the url path. The function version is passed two params: \n   * `$injector` and `$location` services, and must return a url string.\n   *\n   * @return {object} `$urlRouterProvider` - `$urlRouterProvider` instance\n   */\n  this.otherwise = function (rule) {\n    if (isString(rule)) {\n      var redirect = rule;\n      rule = function () { return redirect; };\n    }\n    else if (!isFunction(rule)) throw new Error(\"'rule' must be a function\");\n    otherwise = rule;\n    return this;\n  };\n\n\n  function handleIfMatch($injector, handler, match) {\n    if (!match) return false;\n    var result = $injector.invoke(handler, handler, { $match: match });\n    return isDefined(result) ? result : true;\n  }\n\n  /**\n   * @ngdoc function\n   * @name ui.router.router.$urlRouterProvider#when\n   * @methodOf ui.router.router.$urlRouterProvider\n   *\n   * @description\n   * Registers a handler for a given url matching. if handle is a string, it is\n   * treated as a redirect, and is interpolated according to the syntax of match\n   * (i.e. like `String.replace()` for `RegExp`, or like a `UrlMatcher` pattern otherwise).\n   *\n   * If the handler is a function, it is injectable. It gets invoked if `$location`\n   * matches. You have the option of inject the match object as `$match`.\n   *\n   * The handler can return\n   *\n   * - **falsy** to indicate that the rule didn't match after all, then `$urlRouter`\n   *   will continue trying to find another one that matches.\n   * - **string** which is treated as a redirect and passed to `$location.url()`\n   * - **void** or any **truthy** value tells `$urlRouter` that the url was handled.\n   *\n   * @example\n   * <pre>\n   * var app = angular.module('app', ['ui.router.router']);\n   *\n   * app.config(function ($urlRouterProvider) {\n   *   $urlRouterProvider.when($state.url, function ($match, $stateParams) {\n   *     if ($state.$current.navigable !== state ||\n   *         !equalForKeys($match, $stateParams) {\n   *      $state.transitionTo(state, $match, false);\n   *     }\n   *   });\n   * });\n   * </pre>\n   *\n   * @param {string|object} what The incoming path that you want to redirect.\n   * @param {string|object} handler The path you want to redirect your user to.\n   */\n  this.when = function (what, handler) {\n    var redirect, handlerIsString = isString(handler);\n    if (isString(what)) what = $urlMatcherFactory.compile(what);\n\n    if (!handlerIsString && !isFunction(handler) && !isArray(handler))\n      throw new Error(\"invalid 'handler' in when()\");\n\n    var strategies = {\n      matcher: function (what, handler) {\n        if (handlerIsString) {\n          redirect = $urlMatcherFactory.compile(handler);\n          handler = ['$match', function ($match) { return redirect.format($match); }];\n        }\n        return extend(function ($injector, $location) {\n          return handleIfMatch($injector, handler, what.exec($location.path(), $location.search()));\n        }, {\n          prefix: isString(what.prefix) ? what.prefix : ''\n        });\n      },\n      regex: function (what, handler) {\n        if (what.global || what.sticky) throw new Error(\"when() RegExp must not be global or sticky\");\n\n        if (handlerIsString) {\n          redirect = handler;\n          handler = ['$match', function ($match) { return interpolate(redirect, $match); }];\n        }\n        return extend(function ($injector, $location) {\n          return handleIfMatch($injector, handler, what.exec($location.path()));\n        }, {\n          prefix: regExpPrefix(what)\n        });\n      }\n    };\n\n    var check = { matcher: $urlMatcherFactory.isMatcher(what), regex: what instanceof RegExp };\n\n    for (var n in check) {\n      if (check[n]) return this.rule(strategies[n](what, handler));\n    }\n\n    throw new Error(\"invalid 'what' in when()\");\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.router.$urlRouterProvider#deferIntercept\n   * @methodOf ui.router.router.$urlRouterProvider\n   *\n   * @description\n   * Disables (or enables) deferring location change interception.\n   *\n   * If you wish to customize the behavior of syncing the URL (for example, if you wish to\n   * defer a transition but maintain the current URL), call this method at configuration time.\n   * Then, at run time, call `$urlRouter.listen()` after you have configured your own\n   * `$locationChangeSuccess` event handler.\n   *\n   * @example\n   * <pre>\n   * var app = angular.module('app', ['ui.router.router']);\n   *\n   * app.config(function ($urlRouterProvider) {\n   *\n   *   // Prevent $urlRouter from automatically intercepting URL changes;\n   *   // this allows you to configure custom behavior in between\n   *   // location changes and route synchronization:\n   *   $urlRouterProvider.deferIntercept();\n   *\n   * }).run(function ($rootScope, $urlRouter, UserService) {\n   *\n   *   $rootScope.$on('$locationChangeSuccess', function(e) {\n   *     // UserService is an example service for managing user state\n   *     if (UserService.isLoggedIn()) return;\n   *\n   *     // Prevent $urlRouter's default handler from firing\n   *     e.preventDefault();\n   *\n   *     UserService.handleLogin().then(function() {\n   *       // Once the user has logged in, sync the current URL\n   *       // to the router:\n   *       $urlRouter.sync();\n   *     });\n   *   });\n   *\n   *   // Configures $urlRouter's listener *after* your custom listener\n   *   $urlRouter.listen();\n   * });\n   * </pre>\n   *\n   * @param {boolean} defer Indicates whether to defer location change interception. Passing\n            no parameter is equivalent to `true`.\n   */\n  this.deferIntercept = function (defer) {\n    if (defer === undefined) defer = true;\n    interceptDeferred = defer;\n  };\n\n  /**\n   * @ngdoc object\n   * @name ui.router.router.$urlRouter\n   *\n   * @requires $location\n   * @requires $rootScope\n   * @requires $injector\n   * @requires $browser\n   *\n   * @description\n   *\n   */\n  this.$get = $get;\n  $get.$inject = ['$location', '$rootScope', '$injector', '$browser'];\n  function $get(   $location,   $rootScope,   $injector,   $browser) {\n\n    var baseHref = $browser.baseHref(), location = $location.url(), lastPushedUrl;\n\n    function appendBasePath(url, isHtml5, absolute) {\n      if (baseHref === '/') return url;\n      if (isHtml5) return baseHref.slice(0, -1) + url;\n      if (absolute) return baseHref.slice(1) + url;\n      return url;\n    }\n\n    // TODO: Optimize groups of rules with non-empty prefix into some sort of decision tree\n    function update(evt) {\n      if (evt && evt.defaultPrevented) return;\n      var ignoreUpdate = lastPushedUrl && $location.url() === lastPushedUrl;\n      lastPushedUrl = undefined;\n      // TODO: Re-implement this in 1.0 for https://github.com/angular-ui/ui-router/issues/1573\n      //if (ignoreUpdate) return true;\n\n      function check(rule) {\n        var handled = rule($injector, $location);\n\n        if (!handled) return false;\n        if (isString(handled)) $location.replace().url(handled);\n        return true;\n      }\n      var n = rules.length, i;\n\n      for (i = 0; i < n; i++) {\n        if (check(rules[i])) return;\n      }\n      // always check otherwise last to allow dynamic updates to the set of rules\n      if (otherwise) check(otherwise);\n    }\n\n    function listen() {\n      listener = listener || $rootScope.$on('$locationChangeSuccess', update);\n      return listener;\n    }\n\n    if (!interceptDeferred) listen();\n\n    return {\n      /**\n       * @ngdoc function\n       * @name ui.router.router.$urlRouter#sync\n       * @methodOf ui.router.router.$urlRouter\n       *\n       * @description\n       * Triggers an update; the same update that happens when the address bar url changes, aka `$locationChangeSuccess`.\n       * This method is useful when you need to use `preventDefault()` on the `$locationChangeSuccess` event,\n       * perform some custom logic (route protection, auth, config, redirection, etc) and then finally proceed\n       * with the transition by calling `$urlRouter.sync()`.\n       *\n       * @example\n       * <pre>\n       * angular.module('app', ['ui.router'])\n       *   .run(function($rootScope, $urlRouter) {\n       *     $rootScope.$on('$locationChangeSuccess', function(evt) {\n       *       // Halt state change from even starting\n       *       evt.preventDefault();\n       *       // Perform custom logic\n       *       var meetsRequirement = ...\n       *       // Continue with the update and state transition if logic allows\n       *       if (meetsRequirement) $urlRouter.sync();\n       *     });\n       * });\n       * </pre>\n       */\n      sync: function() {\n        update();\n      },\n\n      listen: function() {\n        return listen();\n      },\n\n      update: function(read) {\n        if (read) {\n          location = $location.url();\n          return;\n        }\n        if ($location.url() === location) return;\n\n        $location.url(location);\n        $location.replace();\n      },\n\n      push: function(urlMatcher, params, options) {\n         var url = urlMatcher.format(params || {});\n\n        // Handle the special hash param, if needed\n        if (url !== null && params && params['#']) {\n            url += '#' + params['#'];\n        }\n\n        $location.url(url);\n        lastPushedUrl = options && options.$$avoidResync ? $location.url() : undefined;\n        if (options && options.replace) $location.replace();\n      },\n\n      /**\n       * @ngdoc function\n       * @name ui.router.router.$urlRouter#href\n       * @methodOf ui.router.router.$urlRouter\n       *\n       * @description\n       * A URL generation method that returns the compiled URL for a given\n       * {@link ui.router.util.type:UrlMatcher `UrlMatcher`}, populated with the provided parameters.\n       *\n       * @example\n       * <pre>\n       * $bob = $urlRouter.href(new UrlMatcher(\"/about/:person\"), {\n       *   person: \"bob\"\n       * });\n       * // $bob == \"/about/bob\";\n       * </pre>\n       *\n       * @param {UrlMatcher} urlMatcher The `UrlMatcher` object which is used as the template of the URL to generate.\n       * @param {object=} params An object of parameter values to fill the matcher's required parameters.\n       * @param {object=} options Options object. The options are:\n       *\n       * - **`absolute`** - {boolean=false},  If true will generate an absolute url, e.g. \"http://www.example.com/fullurl\".\n       *\n       * @returns {string} Returns the fully compiled URL, or `null` if `params` fail validation against `urlMatcher`\n       */\n      href: function(urlMatcher, params, options) {\n        if (!urlMatcher.validates(params)) return null;\n\n        var isHtml5 = $locationProvider.html5Mode();\n        if (angular.isObject(isHtml5)) {\n          isHtml5 = isHtml5.enabled;\n        }\n        \n        var url = urlMatcher.format(params);\n        options = options || {};\n\n        if (!isHtml5 && url !== null) {\n          url = \"#\" + $locationProvider.hashPrefix() + url;\n        }\n\n        // Handle special hash param, if needed\n        if (url !== null && params && params['#']) {\n          url += '#' + params['#'];\n        }\n\n        url = appendBasePath(url, isHtml5, options.absolute);\n\n        if (!options.absolute || !url) {\n          return url;\n        }\n\n        var slash = (!isHtml5 && url ? '/' : ''), port = $location.port();\n        port = (port === 80 || port === 443 ? '' : ':' + port);\n\n        return [$location.protocol(), '://', $location.host(), port, slash, url].join('');\n      }\n    };\n  }\n}\n\nangular.module('ui.router.router').provider('$urlRouter', $UrlRouterProvider);\n\n/**\n * @ngdoc object\n * @name ui.router.state.$stateProvider\n *\n * @requires ui.router.router.$urlRouterProvider\n * @requires ui.router.util.$urlMatcherFactoryProvider\n *\n * @description\n * The new `$stateProvider` works similar to Angular's v1 router, but it focuses purely\n * on state.\n *\n * A state corresponds to a \"place\" in the application in terms of the overall UI and\n * navigation. A state describes (via the controller / template / view properties) what\n * the UI looks like and does at that place.\n *\n * States often have things in common, and the primary way of factoring out these\n * commonalities in this model is via the state hierarchy, i.e. parent/child states aka\n * nested states.\n *\n * The `$stateProvider` provides interfaces to declare these states for your app.\n */\n$StateProvider.$inject = ['$urlRouterProvider', '$urlMatcherFactoryProvider'];\nfunction $StateProvider(   $urlRouterProvider,   $urlMatcherFactory) {\n\n  var root, states = {}, $state, queue = {}, abstractKey = 'abstract';\n\n  // Builds state properties from definition passed to registerState()\n  var stateBuilder = {\n\n    // Derive parent state from a hierarchical name only if 'parent' is not explicitly defined.\n    // state.children = [];\n    // if (parent) parent.children.push(state);\n    parent: function(state) {\n      if (isDefined(state.parent) && state.parent) return findState(state.parent);\n      // regex matches any valid composite state name\n      // would match \"contact.list\" but not \"contacts\"\n      var compositeName = /^(.+)\\.[^.]+$/.exec(state.name);\n      return compositeName ? findState(compositeName[1]) : root;\n    },\n\n    // inherit 'data' from parent and override by own values (if any)\n    data: function(state) {\n      if (state.parent && state.parent.data) {\n        state.data = state.self.data = extend({}, state.parent.data, state.data);\n      }\n      return state.data;\n    },\n\n    // Build a URLMatcher if necessary, either via a relative or absolute URL\n    url: function(state) {\n      var url = state.url, config = { params: state.params || {} };\n\n      if (isString(url)) {\n        if (url.charAt(0) == '^') return $urlMatcherFactory.compile(url.substring(1), config);\n        return (state.parent.navigable || root).url.concat(url, config);\n      }\n\n      if (!url || $urlMatcherFactory.isMatcher(url)) return url;\n      throw new Error(\"Invalid url '\" + url + \"' in state '\" + state + \"'\");\n    },\n\n    // Keep track of the closest ancestor state that has a URL (i.e. is navigable)\n    navigable: function(state) {\n      return state.url ? state : (state.parent ? state.parent.navigable : null);\n    },\n\n    // Own parameters for this state. state.url.params is already built at this point. Create and add non-url params\n    ownParams: function(state) {\n      var params = state.url && state.url.params || new $$UMFP.ParamSet();\n      forEach(state.params || {}, function(config, id) {\n        if (!params[id]) params[id] = new $$UMFP.Param(id, null, config, \"config\");\n      });\n      return params;\n    },\n\n    // Derive parameters for this state and ensure they're a super-set of parent's parameters\n    params: function(state) {\n      return state.parent && state.parent.params ? extend(state.parent.params.$$new(), state.ownParams) : new $$UMFP.ParamSet();\n    },\n\n    // If there is no explicit multi-view configuration, make one up so we don't have\n    // to handle both cases in the view directive later. Note that having an explicit\n    // 'views' property will mean the default unnamed view properties are ignored. This\n    // is also a good time to resolve view names to absolute names, so everything is a\n    // straight lookup at link time.\n    views: function(state) {\n      var views = {};\n\n      forEach(isDefined(state.views) ? state.views : { '': state }, function (view, name) {\n        if (name.indexOf('@') < 0) name += '@' + state.parent.name;\n        views[name] = view;\n      });\n      return views;\n    },\n\n    // Keep a full path from the root down to this state as this is needed for state activation.\n    path: function(state) {\n      return state.parent ? state.parent.path.concat(state) : []; // exclude root from path\n    },\n\n    // Speed up $state.contains() as it's used a lot\n    includes: function(state) {\n      var includes = state.parent ? extend({}, state.parent.includes) : {};\n      includes[state.name] = true;\n      return includes;\n    },\n\n    $delegates: {}\n  };\n\n  function isRelative(stateName) {\n    return stateName.indexOf(\".\") === 0 || stateName.indexOf(\"^\") === 0;\n  }\n\n  function findState(stateOrName, base) {\n    if (!stateOrName) return undefined;\n\n    var isStr = isString(stateOrName),\n        name  = isStr ? stateOrName : stateOrName.name,\n        path  = isRelative(name);\n\n    if (path) {\n      if (!base) throw new Error(\"No reference point given for path '\"  + name + \"'\");\n      base = findState(base);\n      \n      var rel = name.split(\".\"), i = 0, pathLength = rel.length, current = base;\n\n      for (; i < pathLength; i++) {\n        if (rel[i] === \"\" && i === 0) {\n          current = base;\n          continue;\n        }\n        if (rel[i] === \"^\") {\n          if (!current.parent) throw new Error(\"Path '\" + name + \"' not valid for state '\" + base.name + \"'\");\n          current = current.parent;\n          continue;\n        }\n        break;\n      }\n      rel = rel.slice(i).join(\".\");\n      name = current.name + (current.name && rel ? \".\" : \"\") + rel;\n    }\n    var state = states[name];\n\n    if (state && (isStr || (!isStr && (state === stateOrName || state.self === stateOrName)))) {\n      return state;\n    }\n    return undefined;\n  }\n\n  function queueState(parentName, state) {\n    if (!queue[parentName]) {\n      queue[parentName] = [];\n    }\n    queue[parentName].push(state);\n  }\n\n  function flushQueuedChildren(parentName) {\n    var queued = queue[parentName] || [];\n    while(queued.length) {\n      registerState(queued.shift());\n    }\n  }\n\n  function registerState(state) {\n    // Wrap a new object around the state so we can store our private details easily.\n    state = inherit(state, {\n      self: state,\n      resolve: state.resolve || {},\n      toString: function() { return this.name; }\n    });\n\n    var name = state.name;\n    if (!isString(name) || name.indexOf('@') >= 0) throw new Error(\"State must have a valid name\");\n    if (states.hasOwnProperty(name)) throw new Error(\"State '\" + name + \"'' is already defined\");\n\n    // Get parent name\n    var parentName = (name.indexOf('.') !== -1) ? name.substring(0, name.lastIndexOf('.'))\n        : (isString(state.parent)) ? state.parent\n        : (isObject(state.parent) && isString(state.parent.name)) ? state.parent.name\n        : '';\n\n    // If parent is not registered yet, add state to queue and register later\n    if (parentName && !states[parentName]) {\n      return queueState(parentName, state.self);\n    }\n\n    for (var key in stateBuilder) {\n      if (isFunction(stateBuilder[key])) state[key] = stateBuilder[key](state, stateBuilder.$delegates[key]);\n    }\n    states[name] = state;\n\n    // Register the state in the global state list and with $urlRouter if necessary.\n    if (!state[abstractKey] && state.url) {\n      $urlRouterProvider.when(state.url, ['$match', '$stateParams', function ($match, $stateParams) {\n        if ($state.$current.navigable != state || !equalForKeys($match, $stateParams)) {\n          $state.transitionTo(state, $match, { inherit: true, location: false });\n        }\n      }]);\n    }\n\n    // Register any queued children\n    flushQueuedChildren(name);\n\n    return state;\n  }\n\n  // Checks text to see if it looks like a glob.\n  function isGlob (text) {\n    return text.indexOf('*') > -1;\n  }\n\n  // Returns true if glob matches current $state name.\n  function doesStateMatchGlob (glob) {\n    var globSegments = glob.split('.'),\n        segments = $state.$current.name.split('.');\n\n    //match single stars\n    for (var i = 0, l = globSegments.length; i < l; i++) {\n      if (globSegments[i] === '*') {\n        segments[i] = '*';\n      }\n    }\n\n    //match greedy starts\n    if (globSegments[0] === '**') {\n       segments = segments.slice(indexOf(segments, globSegments[1]));\n       segments.unshift('**');\n    }\n    //match greedy ends\n    if (globSegments[globSegments.length - 1] === '**') {\n       segments.splice(indexOf(segments, globSegments[globSegments.length - 2]) + 1, Number.MAX_VALUE);\n       segments.push('**');\n    }\n\n    if (globSegments.length != segments.length) {\n      return false;\n    }\n\n    return segments.join('') === globSegments.join('');\n  }\n\n\n  // Implicit root state that is always active\n  root = registerState({\n    name: '',\n    url: '^',\n    views: null,\n    'abstract': true\n  });\n  root.navigable = null;\n\n\n  /**\n   * @ngdoc function\n   * @name ui.router.state.$stateProvider#decorator\n   * @methodOf ui.router.state.$stateProvider\n   *\n   * @description\n   * Allows you to extend (carefully) or override (at your own peril) the \n   * `stateBuilder` object used internally by `$stateProvider`. This can be used \n   * to add custom functionality to ui-router, for example inferring templateUrl \n   * based on the state name.\n   *\n   * When passing only a name, it returns the current (original or decorated) builder\n   * function that matches `name`.\n   *\n   * The builder functions that can be decorated are listed below. Though not all\n   * necessarily have a good use case for decoration, that is up to you to decide.\n   *\n   * In addition, users can attach custom decorators, which will generate new \n   * properties within the state's internal definition. There is currently no clear \n   * use-case for this beyond accessing internal states (i.e. $state.$current), \n   * however, expect this to become increasingly relevant as we introduce additional \n   * meta-programming features.\n   *\n   * **Warning**: Decorators should not be interdependent because the order of \n   * execution of the builder functions in non-deterministic. Builder functions \n   * should only be dependent on the state definition object and super function.\n   *\n   *\n   * Existing builder functions and current return values:\n   *\n   * - **parent** `{object}` - returns the parent state object.\n   * - **data** `{object}` - returns state data, including any inherited data that is not\n   *   overridden by own values (if any).\n   * - **url** `{object}` - returns a {@link ui.router.util.type:UrlMatcher UrlMatcher}\n   *   or `null`.\n   * - **navigable** `{object}` - returns closest ancestor state that has a URL (aka is \n   *   navigable).\n   * - **params** `{object}` - returns an array of state params that are ensured to \n   *   be a super-set of parent's params.\n   * - **views** `{object}` - returns a views object where each key is an absolute view \n   *   name (i.e. \"viewName@stateName\") and each value is the config object \n   *   (template, controller) for the view. Even when you don't use the views object \n   *   explicitly on a state config, one is still created for you internally.\n   *   So by decorating this builder function you have access to decorating template \n   *   and controller properties.\n   * - **ownParams** `{object}` - returns an array of params that belong to the state, \n   *   not including any params defined by ancestor states.\n   * - **path** `{string}` - returns the full path from the root down to this state. \n   *   Needed for state activation.\n   * - **includes** `{object}` - returns an object that includes every state that \n   *   would pass a `$state.includes()` test.\n   *\n   * @example\n   * <pre>\n   * // Override the internal 'views' builder with a function that takes the state\n   * // definition, and a reference to the internal function being overridden:\n   * $stateProvider.decorator('views', function (state, parent) {\n   *   var result = {},\n   *       views = parent(state);\n   *\n   *   angular.forEach(views, function (config, name) {\n   *     var autoName = (state.name + '.' + name).replace('.', '/');\n   *     config.templateUrl = config.templateUrl || '/partials/' + autoName + '.html';\n   *     result[name] = config;\n   *   });\n   *   return result;\n   * });\n   *\n   * $stateProvider.state('home', {\n   *   views: {\n   *     'contact.list': { controller: 'ListController' },\n   *     'contact.item': { controller: 'ItemController' }\n   *   }\n   * });\n   *\n   * // ...\n   *\n   * $state.go('home');\n   * // Auto-populates list and item views with /partials/home/contact/list.html,\n   * // and /partials/home/contact/item.html, respectively.\n   * </pre>\n   *\n   * @param {string} name The name of the builder function to decorate. \n   * @param {object} func A function that is responsible for decorating the original \n   * builder function. The function receives two parameters:\n   *\n   *   - `{object}` - state - The state config object.\n   *   - `{object}` - super - The original builder function.\n   *\n   * @return {object} $stateProvider - $stateProvider instance\n   */\n  this.decorator = decorator;\n  function decorator(name, func) {\n    /*jshint validthis: true */\n    if (isString(name) && !isDefined(func)) {\n      return stateBuilder[name];\n    }\n    if (!isFunction(func) || !isString(name)) {\n      return this;\n    }\n    if (stateBuilder[name] && !stateBuilder.$delegates[name]) {\n      stateBuilder.$delegates[name] = stateBuilder[name];\n    }\n    stateBuilder[name] = func;\n    return this;\n  }\n\n  /**\n   * @ngdoc function\n   * @name ui.router.state.$stateProvider#state\n   * @methodOf ui.router.state.$stateProvider\n   *\n   * @description\n   * Registers a state configuration under a given state name. The stateConfig object\n   * has the following acceptable properties.\n   *\n   * @param {string} name A unique state name, e.g. \"home\", \"about\", \"contacts\".\n   * To create a parent/child state use a dot, e.g. \"about.sales\", \"home.newest\".\n   * @param {object} stateConfig State configuration object.\n   * @param {string|function=} stateConfig.template\n   * <a id='template'></a>\n   *   html template as a string or a function that returns\n   *   an html template as a string which should be used by the uiView directives. This property \n   *   takes precedence over templateUrl.\n   *   \n   *   If `template` is a function, it will be called with the following parameters:\n   *\n   *   - {array.&lt;object&gt;} - state parameters extracted from the current $location.path() by\n   *     applying the current state\n   *\n   * <pre>template:\n   *   \"<h1>inline template definition</h1>\" +\n   *   \"<div ui-view></div>\"</pre>\n   * <pre>template: function(params) {\n   *       return \"<h1>generated template</h1>\"; }</pre>\n   * </div>\n   *\n   * @param {string|function=} stateConfig.templateUrl\n   * <a id='templateUrl'></a>\n   *\n   *   path or function that returns a path to an html\n   *   template that should be used by uiView.\n   *   \n   *   If `templateUrl` is a function, it will be called with the following parameters:\n   *\n   *   - {array.&lt;object&gt;} - state parameters extracted from the current $location.path() by \n   *     applying the current state\n   *\n   * <pre>templateUrl: \"home.html\"</pre>\n   * <pre>templateUrl: function(params) {\n   *     return myTemplates[params.pageId]; }</pre>\n   *\n   * @param {function=} stateConfig.templateProvider\n   * <a id='templateProvider'></a>\n   *    Provider function that returns HTML content string.\n   * <pre> templateProvider:\n   *       function(MyTemplateService, params) {\n   *         return MyTemplateService.getTemplate(params.pageId);\n   *       }</pre>\n   *\n   * @param {string|function=} stateConfig.controller\n   * <a id='controller'></a>\n   *\n   *  Controller fn that should be associated with newly\n   *   related scope or the name of a registered controller if passed as a string.\n   *   Optionally, the ControllerAs may be declared here.\n   * <pre>controller: \"MyRegisteredController\"</pre>\n   * <pre>controller:\n   *     \"MyRegisteredController as fooCtrl\"}</pre>\n   * <pre>controller: function($scope, MyService) {\n   *     $scope.data = MyService.getData(); }</pre>\n   *\n   * @param {function=} stateConfig.controllerProvider\n   * <a id='controllerProvider'></a>\n   *\n   * Injectable provider function that returns the actual controller or string.\n   * <pre>controllerProvider:\n   *   function(MyResolveData) {\n   *     if (MyResolveData.foo)\n   *       return \"FooCtrl\"\n   *     else if (MyResolveData.bar)\n   *       return \"BarCtrl\";\n   *     else return function($scope) {\n   *       $scope.baz = \"Qux\";\n   *     }\n   *   }</pre>\n   *\n   * @param {string=} stateConfig.controllerAs\n   * <a id='controllerAs'></a>\n   * \n   * A controller alias name. If present the controller will be\n   *   published to scope under the controllerAs name.\n   * <pre>controllerAs: \"myCtrl\"</pre>\n   *\n   * @param {string|object=} stateConfig.parent\n   * <a id='parent'></a>\n   * Optionally specifies the parent state of this state.\n   *\n   * <pre>parent: 'parentState'</pre>\n   * <pre>parent: parentState // JS variable</pre>\n   *\n   * @param {object=} stateConfig.resolve\n   * <a id='resolve'></a>\n   *\n   * An optional map&lt;string, function&gt; of dependencies which\n   *   should be injected into the controller. If any of these dependencies are promises, \n   *   the router will wait for them all to be resolved before the controller is instantiated.\n   *   If all the promises are resolved successfully, the $stateChangeSuccess event is fired\n   *   and the values of the resolved promises are injected into any controllers that reference them.\n   *   If any  of the promises are rejected the $stateChangeError event is fired.\n   *\n   *   The map object is:\n   *   \n   *   - key - {string}: name of dependency to be injected into controller\n   *   - factory - {string|function}: If string then it is alias for service. Otherwise if function, \n   *     it is injected and return value it treated as dependency. If result is a promise, it is \n   *     resolved before its value is injected into controller.\n   *\n   * <pre>resolve: {\n   *     myResolve1:\n   *       function($http, $stateParams) {\n   *         return $http.get(\"/api/foos/\"+stateParams.fooID);\n   *       }\n   *     }</pre>\n   *\n   * @param {string=} stateConfig.url\n   * <a id='url'></a>\n   *\n   *   A url fragment with optional parameters. When a state is navigated or\n   *   transitioned to, the `$stateParams` service will be populated with any \n   *   parameters that were passed.\n   *\n   *   (See {@link ui.router.util.type:UrlMatcher UrlMatcher} `UrlMatcher`} for\n   *   more details on acceptable patterns )\n   *\n   * examples:\n   * <pre>url: \"/home\"\n   * url: \"/users/:userid\"\n   * url: \"/books/{bookid:[a-zA-Z_-]}\"\n   * url: \"/books/{categoryid:int}\"\n   * url: \"/books/{publishername:string}/{categoryid:int}\"\n   * url: \"/messages?before&after\"\n   * url: \"/messages?{before:date}&{after:date}\"\n   * url: \"/messages/:mailboxid?{before:date}&{after:date}\"\n   * </pre>\n   *\n   * @param {object=} stateConfig.views\n   * <a id='views'></a>\n   * an optional map&lt;string, object&gt; which defined multiple views, or targets views\n   * manually/explicitly.\n   *\n   * Examples:\n   *\n   * Targets three named `ui-view`s in the parent state's template\n   * <pre>views: {\n   *     header: {\n   *       controller: \"headerCtrl\",\n   *       templateUrl: \"header.html\"\n   *     }, body: {\n   *       controller: \"bodyCtrl\",\n   *       templateUrl: \"body.html\"\n   *     }, footer: {\n   *       controller: \"footCtrl\",\n   *       templateUrl: \"footer.html\"\n   *     }\n   *   }</pre>\n   *\n   * Targets named `ui-view=\"header\"` from grandparent state 'top''s template, and named `ui-view=\"body\" from parent state's template.\n   * <pre>views: {\n   *     'header@top': {\n   *       controller: \"msgHeaderCtrl\",\n   *       templateUrl: \"msgHeader.html\"\n   *     }, 'body': {\n   *       controller: \"messagesCtrl\",\n   *       templateUrl: \"messages.html\"\n   *     }\n   *   }</pre>\n   *\n   * @param {boolean=} [stateConfig.abstract=false]\n   * <a id='abstract'></a>\n   * An abstract state will never be directly activated,\n   *   but can provide inherited properties to its common children states.\n   * <pre>abstract: true</pre>\n   *\n   * @param {function=} stateConfig.onEnter\n   * <a id='onEnter'></a>\n   *\n   * Callback function for when a state is entered. Good way\n   *   to trigger an action or dispatch an event, such as opening a dialog.\n   * If minifying your scripts, make sure to explictly annotate this function,\n   * because it won't be automatically annotated by your build tools.\n   *\n   * <pre>onEnter: function(MyService, $stateParams) {\n   *     MyService.foo($stateParams.myParam);\n   * }</pre>\n   *\n   * @param {function=} stateConfig.onExit\n   * <a id='onExit'></a>\n   *\n   * Callback function for when a state is exited. Good way to\n   *   trigger an action or dispatch an event, such as opening a dialog.\n   * If minifying your scripts, make sure to explictly annotate this function,\n   * because it won't be automatically annotated by your build tools.\n   *\n   * <pre>onExit: function(MyService, $stateParams) {\n   *     MyService.cleanup($stateParams.myParam);\n   * }</pre>\n   *\n   * @param {boolean=} [stateConfig.reloadOnSearch=true]\n   * <a id='reloadOnSearch'></a>\n   *\n   * If `false`, will not retrigger the same state\n   *   just because a search/query parameter has changed (via $location.search() or $location.hash()). \n   *   Useful for when you'd like to modify $location.search() without triggering a reload.\n   * <pre>reloadOnSearch: false</pre>\n   *\n   * @param {object=} stateConfig.data\n   * <a id='data'></a>\n   *\n   * Arbitrary data object, useful for custom configuration.  The parent state's `data` is\n   *   prototypally inherited.  In other words, adding a data property to a state adds it to\n   *   the entire subtree via prototypal inheritance.\n   *\n   * <pre>data: {\n   *     requiredRole: 'foo'\n   * } </pre>\n   *\n   * @param {object=} stateConfig.params\n   * <a id='params'></a>\n   *\n   * A map which optionally configures parameters declared in the `url`, or\n   *   defines additional non-url parameters.  For each parameter being\n   *   configured, add a configuration object keyed to the name of the parameter.\n   *\n   *   Each parameter configuration object may contain the following properties:\n   *\n   *   - ** value ** - {object|function=}: specifies the default value for this\n   *     parameter.  This implicitly sets this parameter as optional.\n   *\n   *     When UI-Router routes to a state and no value is\n   *     specified for this parameter in the URL or transition, the\n   *     default value will be used instead.  If `value` is a function,\n   *     it will be injected and invoked, and the return value used.\n   *\n   *     *Note*: `undefined` is treated as \"no default value\" while `null`\n   *     is treated as \"the default value is `null`\".\n   *\n   *     *Shorthand*: If you only need to configure the default value of the\n   *     parameter, you may use a shorthand syntax.   In the **`params`**\n   *     map, instead mapping the param name to a full parameter configuration\n   *     object, simply set map it to the default parameter value, e.g.:\n   *\n   * <pre>// define a parameter's default value\n   * params: {\n   *     param1: { value: \"defaultValue\" }\n   * }\n   * // shorthand default values\n   * params: {\n   *     param1: \"defaultValue\",\n   *     param2: \"param2Default\"\n   * }</pre>\n   *\n   *   - ** array ** - {boolean=}: *(default: false)* If true, the param value will be\n   *     treated as an array of values.  If you specified a Type, the value will be\n   *     treated as an array of the specified Type.  Note: query parameter values\n   *     default to a special `\"auto\"` mode.\n   *\n   *     For query parameters in `\"auto\"` mode, if multiple  values for a single parameter\n   *     are present in the URL (e.g.: `/foo?bar=1&bar=2&bar=3`) then the values\n   *     are mapped to an array (e.g.: `{ foo: [ '1', '2', '3' ] }`).  However, if\n   *     only one value is present (e.g.: `/foo?bar=1`) then the value is treated as single\n   *     value (e.g.: `{ foo: '1' }`).\n   *\n   * <pre>params: {\n   *     param1: { array: true }\n   * }</pre>\n   *\n   *   - ** squash ** - {bool|string=}: `squash` configures how a default parameter value is represented in the URL when\n   *     the current parameter value is the same as the default value. If `squash` is not set, it uses the\n   *     configured default squash policy.\n   *     (See {@link ui.router.util.$urlMatcherFactory#methods_defaultSquashPolicy `defaultSquashPolicy()`})\n   *\n   *   There are three squash settings:\n   *\n   *     - false: The parameter's default value is not squashed.  It is encoded and included in the URL\n   *     - true: The parameter's default value is omitted from the URL.  If the parameter is preceeded and followed\n   *       by slashes in the state's `url` declaration, then one of those slashes are omitted.\n   *       This can allow for cleaner looking URLs.\n   *     - `\"<arbitrary string>\"`: The parameter's default value is replaced with an arbitrary placeholder of  your choice.\n   *\n   * <pre>params: {\n   *     param1: {\n   *       value: \"defaultId\",\n   *       squash: true\n   * } }\n   * // squash \"defaultValue\" to \"~\"\n   * params: {\n   *     param1: {\n   *       value: \"defaultValue\",\n   *       squash: \"~\"\n   * } }\n   * </pre>\n   *\n   *\n   * @example\n   * <pre>\n   * // Some state name examples\n   *\n   * // stateName can be a single top-level name (must be unique).\n   * $stateProvider.state(\"home\", {});\n   *\n   * // Or it can be a nested state name. This state is a child of the\n   * // above \"home\" state.\n   * $stateProvider.state(\"home.newest\", {});\n   *\n   * // Nest states as deeply as needed.\n   * $stateProvider.state(\"home.newest.abc.xyz.inception\", {});\n   *\n   * // state() returns $stateProvider, so you can chain state declarations.\n   * $stateProvider\n   *   .state(\"home\", {})\n   *   .state(\"about\", {})\n   *   .state(\"contacts\", {});\n   * </pre>\n   *\n   */\n  this.state = state;\n  function state(name, definition) {\n    /*jshint validthis: true */\n    if (isObject(name)) definition = name;\n    else definition.name = name;\n    registerState(definition);\n    return this;\n  }\n\n  /**\n   * @ngdoc object\n   * @name ui.router.state.$state\n   *\n   * @requires $rootScope\n   * @requires $q\n   * @requires ui.router.state.$view\n   * @requires $injector\n   * @requires ui.router.util.$resolve\n   * @requires ui.router.state.$stateParams\n   * @requires ui.router.router.$urlRouter\n   *\n   * @property {object} params A param object, e.g. {sectionId: section.id)}, that \n   * you'd like to test against the current active state.\n   * @property {object} current A reference to the state's config object. However \n   * you passed it in. Useful for accessing custom data.\n   * @property {object} transition Currently pending transition. A promise that'll \n   * resolve or reject.\n   *\n   * @description\n   * `$state` service is responsible for representing states as well as transitioning\n   * between them. It also provides interfaces to ask for current state or even states\n   * you're coming from.\n   */\n  this.$get = $get;\n  $get.$inject = ['$rootScope', '$q', '$view', '$injector', '$resolve', '$stateParams', '$urlRouter', '$location', '$urlMatcherFactory'];\n  function $get(   $rootScope,   $q,   $view,   $injector,   $resolve,   $stateParams,   $urlRouter,   $location,   $urlMatcherFactory) {\n\n    var TransitionSuperseded = $q.reject(new Error('transition superseded'));\n    var TransitionPrevented = $q.reject(new Error('transition prevented'));\n    var TransitionAborted = $q.reject(new Error('transition aborted'));\n    var TransitionFailed = $q.reject(new Error('transition failed'));\n\n    // Handles the case where a state which is the target of a transition is not found, and the user\n    // can optionally retry or defer the transition\n    function handleRedirect(redirect, state, params, options) {\n      /**\n       * @ngdoc event\n       * @name ui.router.state.$state#$stateNotFound\n       * @eventOf ui.router.state.$state\n       * @eventType broadcast on root scope\n       * @description\n       * Fired when a requested state **cannot be found** using the provided state name during transition.\n       * The event is broadcast allowing any handlers a single chance to deal with the error (usually by\n       * lazy-loading the unfound state). A special `unfoundState` object is passed to the listener handler,\n       * you can see its three properties in the example. You can use `event.preventDefault()` to abort the\n       * transition and the promise returned from `go` will be rejected with a `'transition aborted'` value.\n       *\n       * @param {Object} event Event object.\n       * @param {Object} unfoundState Unfound State information. Contains: `to, toParams, options` properties.\n       * @param {State} fromState Current state object.\n       * @param {Object} fromParams Current state params.\n       *\n       * @example\n       *\n       * <pre>\n       * // somewhere, assume lazy.state has not been defined\n       * $state.go(\"lazy.state\", {a:1, b:2}, {inherit:false});\n       *\n       * // somewhere else\n       * $scope.$on('$stateNotFound',\n       * function(event, unfoundState, fromState, fromParams){\n       *     console.log(unfoundState.to); // \"lazy.state\"\n       *     console.log(unfoundState.toParams); // {a:1, b:2}\n       *     console.log(unfoundState.options); // {inherit:false} + default options\n       * })\n       * </pre>\n       */\n      var evt = $rootScope.$broadcast('$stateNotFound', redirect, state, params);\n\n      if (evt.defaultPrevented) {\n        $urlRouter.update();\n        return TransitionAborted;\n      }\n\n      if (!evt.retry) {\n        return null;\n      }\n\n      // Allow the handler to return a promise to defer state lookup retry\n      if (options.$retry) {\n        $urlRouter.update();\n        return TransitionFailed;\n      }\n      var retryTransition = $state.transition = $q.when(evt.retry);\n\n      retryTransition.then(function() {\n        if (retryTransition !== $state.transition) return TransitionSuperseded;\n        redirect.options.$retry = true;\n        return $state.transitionTo(redirect.to, redirect.toParams, redirect.options);\n      }, function() {\n        return TransitionAborted;\n      });\n      $urlRouter.update();\n\n      return retryTransition;\n    }\n\n    root.locals = { resolve: null, globals: { $stateParams: {} } };\n\n    $state = {\n      params: {},\n      current: root.self,\n      $current: root,\n      transition: null\n    };\n\n    /**\n     * @ngdoc function\n     * @name ui.router.state.$state#reload\n     * @methodOf ui.router.state.$state\n     *\n     * @description\n     * A method that force reloads the current state. All resolves are re-resolved,\n     * controllers reinstantiated, and events re-fired.\n     *\n     * @example\n     * <pre>\n     * var app angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.reload = function(){\n     *     $state.reload();\n     *   }\n     * });\n     * </pre>\n     *\n     * `reload()` is just an alias for:\n     * <pre>\n     * $state.transitionTo($state.current, $stateParams, { \n     *   reload: true, inherit: false, notify: true\n     * });\n     * </pre>\n     *\n     * @param {string=|object=} state - A state name or a state object, which is the root of the resolves to be re-resolved.\n     * @example\n     * <pre>\n     * //assuming app application consists of 3 states: 'contacts', 'contacts.detail', 'contacts.detail.item' \n     * //and current state is 'contacts.detail.item'\n     * var app angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.reload = function(){\n     *     //will reload 'contact.detail' and 'contact.detail.item' states\n     *     $state.reload('contact.detail');\n     *   }\n     * });\n     * </pre>\n     *\n     * `reload()` is just an alias for:\n     * <pre>\n     * $state.transitionTo($state.current, $stateParams, { \n     *   reload: true, inherit: false, notify: true\n     * });\n     * </pre>\n\n     * @returns {promise} A promise representing the state of the new transition. See\n     * {@link ui.router.state.$state#methods_go $state.go}.\n     */\n    $state.reload = function reload(state) {\n      return $state.transitionTo($state.current, $stateParams, { reload: state || true, inherit: false, notify: true});\n    };\n\n    /**\n     * @ngdoc function\n     * @name ui.router.state.$state#go\n     * @methodOf ui.router.state.$state\n     *\n     * @description\n     * Convenience method for transitioning to a new state. `$state.go` calls \n     * `$state.transitionTo` internally but automatically sets options to \n     * `{ location: true, inherit: true, relative: $state.$current, notify: true }`. \n     * This allows you to easily use an absolute or relative to path and specify \n     * only the parameters you'd like to update (while letting unspecified parameters \n     * inherit from the currently active ancestor states).\n     *\n     * @example\n     * <pre>\n     * var app = angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.changeState = function () {\n     *     $state.go('contact.detail');\n     *   };\n     * });\n     * </pre>\n     * <img src='../ngdoc_assets/StateGoExamples.png'/>\n     *\n     * @param {string} to Absolute state name or relative state path. Some examples:\n     *\n     * - `$state.go('contact.detail')` - will go to the `contact.detail` state\n     * - `$state.go('^')` - will go to a parent state\n     * - `$state.go('^.sibling')` - will go to a sibling state\n     * - `$state.go('.child.grandchild')` - will go to grandchild state\n     *\n     * @param {object=} params A map of the parameters that will be sent to the state, \n     * will populate $stateParams. Any parameters that are not specified will be inherited from currently \n     * defined parameters. This allows, for example, going to a sibling state that shares parameters\n     * specified in a parent state. Parameter inheritance only works between common ancestor states, I.e.\n     * transitioning to a sibling will get you the parameters for all parents, transitioning to a child\n     * will get you all current parameters, etc.\n     * @param {object=} options Options object. The options are:\n     *\n     * - **`location`** - {boolean=true|string=} - If `true` will update the url in the location bar, if `false`\n     *    will not. If string, must be `\"replace\"`, which will update url and also replace last history record.\n     * - **`inherit`** - {boolean=true}, If `true` will inherit url parameters from current url.\n     * - **`relative`** - {object=$state.$current}, When transitioning with relative path (e.g '^'), \n     *    defines which state to be relative from.\n     * - **`notify`** - {boolean=true}, If `true` will broadcast $stateChangeStart and $stateChangeSuccess events.\n     * - **`reload`** (v0.2.5) - {boolean=false}, If `true` will force transition even if the state or params \n     *    have not changed, aka a reload of the same state. It differs from reloadOnSearch because you'd\n     *    use this when you want to force a reload when *everything* is the same, including search params.\n     *\n     * @returns {promise} A promise representing the state of the new transition.\n     *\n     * Possible success values:\n     *\n     * - $state.current\n     *\n     * <br/>Possible rejection values:\n     *\n     * - 'transition superseded' - when a newer transition has been started after this one\n     * - 'transition prevented' - when `event.preventDefault()` has been called in a `$stateChangeStart` listener\n     * - 'transition aborted' - when `event.preventDefault()` has been called in a `$stateNotFound` listener or\n     *   when a `$stateNotFound` `event.retry` promise errors.\n     * - 'transition failed' - when a state has been unsuccessfully found after 2 tries.\n     * - *resolve error* - when an error has occurred with a `resolve`\n     *\n     */\n    $state.go = function go(to, params, options) {\n      return $state.transitionTo(to, params, extend({ inherit: true, relative: $state.$current }, options));\n    };\n\n    /**\n     * @ngdoc function\n     * @name ui.router.state.$state#transitionTo\n     * @methodOf ui.router.state.$state\n     *\n     * @description\n     * Low-level method for transitioning to a new state. {@link ui.router.state.$state#methods_go $state.go}\n     * uses `transitionTo` internally. `$state.go` is recommended in most situations.\n     *\n     * @example\n     * <pre>\n     * var app = angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.changeState = function () {\n     *     $state.transitionTo('contact.detail');\n     *   };\n     * });\n     * </pre>\n     *\n     * @param {string} to State name.\n     * @param {object=} toParams A map of the parameters that will be sent to the state,\n     * will populate $stateParams.\n     * @param {object=} options Options object. The options are:\n     *\n     * - **`location`** - {boolean=true|string=} - If `true` will update the url in the location bar, if `false`\n     *    will not. If string, must be `\"replace\"`, which will update url and also replace last history record.\n     * - **`inherit`** - {boolean=false}, If `true` will inherit url parameters from current url.\n     * - **`relative`** - {object=}, When transitioning with relative path (e.g '^'), \n     *    defines which state to be relative from.\n     * - **`notify`** - {boolean=true}, If `true` will broadcast $stateChangeStart and $stateChangeSuccess events.\n     * - **`reload`** (v0.2.5) - {boolean=false|string=|object=}, If `true` will force transition even if the state or params \n     *    have not changed, aka a reload of the same state. It differs from reloadOnSearch because you'd\n     *    use this when you want to force a reload when *everything* is the same, including search params.\n     *    if String, then will reload the state with the name given in reload, and any children.\n     *    if Object, then a stateObj is expected, will reload the state found in stateObj, and any children.\n     *\n     * @returns {promise} A promise representing the state of the new transition. See\n     * {@link ui.router.state.$state#methods_go $state.go}.\n     */\n    $state.transitionTo = function transitionTo(to, toParams, options) {\n      toParams = toParams || {};\n      options = extend({\n        location: true, inherit: false, relative: null, notify: true, reload: false, $retry: false\n      }, options || {});\n\n      var from = $state.$current, fromParams = $state.params, fromPath = from.path;\n      var evt, toState = findState(to, options.relative);\n\n      // Store the hash param for later (since it will be stripped out by various methods)\n      var hash = toParams['#'];\n\n      if (!isDefined(toState)) {\n        var redirect = { to: to, toParams: toParams, options: options };\n        var redirectResult = handleRedirect(redirect, from.self, fromParams, options);\n\n        if (redirectResult) {\n          return redirectResult;\n        }\n\n        // Always retry once if the $stateNotFound was not prevented\n        // (handles either redirect changed or state lazy-definition)\n        to = redirect.to;\n        toParams = redirect.toParams;\n        options = redirect.options;\n        toState = findState(to, options.relative);\n\n        if (!isDefined(toState)) {\n          if (!options.relative) throw new Error(\"No such state '\" + to + \"'\");\n          throw new Error(\"Could not resolve '\" + to + \"' from state '\" + options.relative + \"'\");\n        }\n      }\n      if (toState[abstractKey]) throw new Error(\"Cannot transition to abstract state '\" + to + \"'\");\n      if (options.inherit) toParams = inheritParams($stateParams, toParams || {}, $state.$current, toState);\n      if (!toState.params.$$validates(toParams)) return TransitionFailed;\n\n      toParams = toState.params.$$values(toParams);\n      to = toState;\n\n      var toPath = to.path;\n\n      // Starting from the root of the path, keep all levels that haven't changed\n      var keep = 0, state = toPath[keep], locals = root.locals, toLocals = [];\n\n      if (!options.reload) {\n        while (state && state === fromPath[keep] && state.ownParams.$$equals(toParams, fromParams)) {\n          locals = toLocals[keep] = state.locals;\n          keep++;\n          state = toPath[keep];\n        }\n      } else if (isString(options.reload) || isObject(options.reload)) {\n        if (isObject(options.reload) && !options.reload.name) {\n          throw new Error('Invalid reload state object');\n        }\n        \n        var reloadState = options.reload === true ? fromPath[0] : findState(options.reload);\n        if (options.reload && !reloadState) {\n          throw new Error(\"No such reload state '\" + (isString(options.reload) ? options.reload : options.reload.name) + \"'\");\n        }\n\n        while (state && state === fromPath[keep] && state !== reloadState) {\n          locals = toLocals[keep] = state.locals;\n          keep++;\n          state = toPath[keep];\n        }\n      }\n\n      // If we're going to the same state and all locals are kept, we've got nothing to do.\n      // But clear 'transition', as we still want to cancel any other pending transitions.\n      // TODO: We may not want to bump 'transition' if we're called from a location change\n      // that we've initiated ourselves, because we might accidentally abort a legitimate\n      // transition initiated from code?\n      if (shouldSkipReload(to, toParams, from, fromParams, locals, options)) {\n        if (hash) toParams['#'] = hash;\n        $state.params = toParams;\n        copy($state.params, $stateParams);\n        if (options.location && to.navigable && to.navigable.url) {\n          $urlRouter.push(to.navigable.url, toParams, {\n            $$avoidResync: true, replace: options.location === 'replace'\n          });\n          $urlRouter.update(true);\n        }\n        $state.transition = null;\n        return $q.when($state.current);\n      }\n\n      // Filter parameters before we pass them to event handlers etc.\n      toParams = filterByKeys(to.params.$$keys(), toParams || {});\n\n      // Broadcast start event and cancel the transition if requested\n      if (options.notify) {\n        /**\n         * @ngdoc event\n         * @name ui.router.state.$state#$stateChangeStart\n         * @eventOf ui.router.state.$state\n         * @eventType broadcast on root scope\n         * @description\n         * Fired when the state transition **begins**. You can use `event.preventDefault()`\n         * to prevent the transition from happening and then the transition promise will be\n         * rejected with a `'transition prevented'` value.\n         *\n         * @param {Object} event Event object.\n         * @param {State} toState The state being transitioned to.\n         * @param {Object} toParams The params supplied to the `toState`.\n         * @param {State} fromState The current state, pre-transition.\n         * @param {Object} fromParams The params supplied to the `fromState`.\n         *\n         * @example\n         *\n         * <pre>\n         * $rootScope.$on('$stateChangeStart',\n         * function(event, toState, toParams, fromState, fromParams){\n         *     event.preventDefault();\n         *     // transitionTo() promise will be rejected with\n         *     // a 'transition prevented' error\n         * })\n         * </pre>\n         */\n        if ($rootScope.$broadcast('$stateChangeStart', to.self, toParams, from.self, fromParams).defaultPrevented) {\n          $rootScope.$broadcast('$stateChangeCancel', to.self, toParams, from.self, fromParams);\n          $urlRouter.update();\n          return TransitionPrevented;\n        }\n      }\n\n      // Resolve locals for the remaining states, but don't update any global state just\n      // yet -- if anything fails to resolve the current state needs to remain untouched.\n      // We also set up an inheritance chain for the locals here. This allows the view directive\n      // to quickly look up the correct definition for each view in the current state. Even\n      // though we create the locals object itself outside resolveState(), it is initially\n      // empty and gets filled asynchronously. We need to keep track of the promise for the\n      // (fully resolved) current locals, and pass this down the chain.\n      var resolved = $q.when(locals);\n\n      for (var l = keep; l < toPath.length; l++, state = toPath[l]) {\n        locals = toLocals[l] = inherit(locals);\n        resolved = resolveState(state, toParams, state === to, resolved, locals, options);\n      }\n\n      // Once everything is resolved, we are ready to perform the actual transition\n      // and return a promise for the new state. We also keep track of what the\n      // current promise is, so that we can detect overlapping transitions and\n      // keep only the outcome of the last transition.\n      var transition = $state.transition = resolved.then(function () {\n        var l, entering, exiting;\n\n        if ($state.transition !== transition) return TransitionSuperseded;\n\n        // Exit 'from' states not kept\n        for (l = fromPath.length - 1; l >= keep; l--) {\n          exiting = fromPath[l];\n          if (exiting.self.onExit) {\n            $injector.invoke(exiting.self.onExit, exiting.self, exiting.locals.globals);\n          }\n          exiting.locals = null;\n        }\n\n        // Enter 'to' states not kept\n        for (l = keep; l < toPath.length; l++) {\n          entering = toPath[l];\n          entering.locals = toLocals[l];\n          if (entering.self.onEnter) {\n            $injector.invoke(entering.self.onEnter, entering.self, entering.locals.globals);\n          }\n        }\n\n        // Re-add the saved hash before we start returning things\n        if (hash) toParams['#'] = hash;\n\n        // Run it again, to catch any transitions in callbacks\n        if ($state.transition !== transition) return TransitionSuperseded;\n\n        // Update globals in $state\n        $state.$current = to;\n        $state.current = to.self;\n        $state.params = toParams;\n        copy($state.params, $stateParams);\n        $state.transition = null;\n\n        if (options.location && to.navigable) {\n          $urlRouter.push(to.navigable.url, to.navigable.locals.globals.$stateParams, {\n            $$avoidResync: true, replace: options.location === 'replace'\n          });\n        }\n\n        if (options.notify) {\n        /**\n         * @ngdoc event\n         * @name ui.router.state.$state#$stateChangeSuccess\n         * @eventOf ui.router.state.$state\n         * @eventType broadcast on root scope\n         * @description\n         * Fired once the state transition is **complete**.\n         *\n         * @param {Object} event Event object.\n         * @param {State} toState The state being transitioned to.\n         * @param {Object} toParams The params supplied to the `toState`.\n         * @param {State} fromState The current state, pre-transition.\n         * @param {Object} fromParams The params supplied to the `fromState`.\n         */\n          $rootScope.$broadcast('$stateChangeSuccess', to.self, toParams, from.self, fromParams);\n        }\n        $urlRouter.update(true);\n\n        return $state.current;\n      }, function (error) {\n        if ($state.transition !== transition) return TransitionSuperseded;\n\n        $state.transition = null;\n        /**\n         * @ngdoc event\n         * @name ui.router.state.$state#$stateChangeError\n         * @eventOf ui.router.state.$state\n         * @eventType broadcast on root scope\n         * @description\n         * Fired when an **error occurs** during transition. It's important to note that if you\n         * have any errors in your resolve functions (javascript errors, non-existent services, etc)\n         * they will not throw traditionally. You must listen for this $stateChangeError event to\n         * catch **ALL** errors.\n         *\n         * @param {Object} event Event object.\n         * @param {State} toState The state being transitioned to.\n         * @param {Object} toParams The params supplied to the `toState`.\n         * @param {State} fromState The current state, pre-transition.\n         * @param {Object} fromParams The params supplied to the `fromState`.\n         * @param {Error} error The resolve error object.\n         */\n        evt = $rootScope.$broadcast('$stateChangeError', to.self, toParams, from.self, fromParams, error);\n\n        if (!evt.defaultPrevented) {\n            $urlRouter.update();\n        }\n\n        return $q.reject(error);\n      });\n\n      return transition;\n    };\n\n    /**\n     * @ngdoc function\n     * @name ui.router.state.$state#is\n     * @methodOf ui.router.state.$state\n     *\n     * @description\n     * Similar to {@link ui.router.state.$state#methods_includes $state.includes},\n     * but only checks for the full state name. If params is supplied then it will be\n     * tested for strict equality against the current active params object, so all params\n     * must match with none missing and no extras.\n     *\n     * @example\n     * <pre>\n     * $state.$current.name = 'contacts.details.item';\n     *\n     * // absolute name\n     * $state.is('contact.details.item'); // returns true\n     * $state.is(contactDetailItemStateObject); // returns true\n     *\n     * // relative name (. and ^), typically from a template\n     * // E.g. from the 'contacts.details' template\n     * <div ng-class=\"{highlighted: $state.is('.item')}\">Item</div>\n     * </pre>\n     *\n     * @param {string|object} stateOrName The state name (absolute or relative) or state object you'd like to check.\n     * @param {object=} params A param object, e.g. `{sectionId: section.id}`, that you'd like\n     * to test against the current active state.\n     * @param {object=} options An options object.  The options are:\n     *\n     * - **`relative`** - {string|object} -  If `stateOrName` is a relative state name and `options.relative` is set, .is will\n     * test relative to `options.relative` state (or name).\n     *\n     * @returns {boolean} Returns true if it is the state.\n     */\n    $state.is = function is(stateOrName, params, options) {\n      options = extend({ relative: $state.$current }, options || {});\n      var state = findState(stateOrName, options.relative);\n\n      if (!isDefined(state)) { return undefined; }\n      if ($state.$current !== state) { return false; }\n      return params ? equalForKeys(state.params.$$values(params), $stateParams) : true;\n    };\n\n    /**\n     * @ngdoc function\n     * @name ui.router.state.$state#includes\n     * @methodOf ui.router.state.$state\n     *\n     * @description\n     * A method to determine if the current active state is equal to or is the child of the\n     * state stateName. If any params are passed then they will be tested for a match as well.\n     * Not all the parameters need to be passed, just the ones you'd like to test for equality.\n     *\n     * @example\n     * Partial and relative names\n     * <pre>\n     * $state.$current.name = 'contacts.details.item';\n     *\n     * // Using partial names\n     * $state.includes(\"contacts\"); // returns true\n     * $state.includes(\"contacts.details\"); // returns true\n     * $state.includes(\"contacts.details.item\"); // returns true\n     * $state.includes(\"contacts.list\"); // returns false\n     * $state.includes(\"about\"); // returns false\n     *\n     * // Using relative names (. and ^), typically from a template\n     * // E.g. from the 'contacts.details' template\n     * <div ng-class=\"{highlighted: $state.includes('.item')}\">Item</div>\n     * </pre>\n     *\n     * Basic globbing patterns\n     * <pre>\n     * $state.$current.name = 'contacts.details.item.url';\n     *\n     * $state.includes(\"*.details.*.*\"); // returns true\n     * $state.includes(\"*.details.**\"); // returns true\n     * $state.includes(\"**.item.**\"); // returns true\n     * $state.includes(\"*.details.item.url\"); // returns true\n     * $state.includes(\"*.details.*.url\"); // returns true\n     * $state.includes(\"*.details.*\"); // returns false\n     * $state.includes(\"item.**\"); // returns false\n     * </pre>\n     *\n     * @param {string} stateOrName A partial name, relative name, or glob pattern\n     * to be searched for within the current state name.\n     * @param {object=} params A param object, e.g. `{sectionId: section.id}`,\n     * that you'd like to test against the current active state.\n     * @param {object=} options An options object.  The options are:\n     *\n     * - **`relative`** - {string|object=} -  If `stateOrName` is a relative state reference and `options.relative` is set,\n     * .includes will test relative to `options.relative` state (or name).\n     *\n     * @returns {boolean} Returns true if it does include the state\n     */\n    $state.includes = function includes(stateOrName, params, options) {\n      options = extend({ relative: $state.$current }, options || {});\n      if (isString(stateOrName) && isGlob(stateOrName)) {\n        if (!doesStateMatchGlob(stateOrName)) {\n          return false;\n        }\n        stateOrName = $state.$current.name;\n      }\n\n      var state = findState(stateOrName, options.relative);\n      if (!isDefined(state)) { return undefined; }\n      if (!isDefined($state.$current.includes[state.name])) { return false; }\n      return params ? equalForKeys(state.params.$$values(params), $stateParams, objectKeys(params)) : true;\n    };\n\n\n    /**\n     * @ngdoc function\n     * @name ui.router.state.$state#href\n     * @methodOf ui.router.state.$state\n     *\n     * @description\n     * A url generation method that returns the compiled url for the given state populated with the given params.\n     *\n     * @example\n     * <pre>\n     * expect($state.href(\"about.person\", { person: \"bob\" })).toEqual(\"/about/bob\");\n     * </pre>\n     *\n     * @param {string|object} stateOrName The state name or state object you'd like to generate a url from.\n     * @param {object=} params An object of parameter values to fill the state's required parameters.\n     * @param {object=} options Options object. The options are:\n     *\n     * - **`lossy`** - {boolean=true} -  If true, and if there is no url associated with the state provided in the\n     *    first parameter, then the constructed href url will be built from the first navigable ancestor (aka\n     *    ancestor with a valid url).\n     * - **`inherit`** - {boolean=true}, If `true` will inherit url parameters from current url.\n     * - **`relative`** - {object=$state.$current}, When transitioning with relative path (e.g '^'), \n     *    defines which state to be relative from.\n     * - **`absolute`** - {boolean=false},  If true will generate an absolute url, e.g. \"http://www.example.com/fullurl\".\n     * \n     * @returns {string} compiled state url\n     */\n    $state.href = function href(stateOrName, params, options) {\n      options = extend({\n        lossy:    true,\n        inherit:  true,\n        absolute: false,\n        relative: $state.$current\n      }, options || {});\n\n      var state = findState(stateOrName, options.relative);\n\n      if (!isDefined(state)) return null;\n      if (options.inherit) params = inheritParams($stateParams, params || {}, $state.$current, state);\n      \n      var nav = (state && options.lossy) ? state.navigable : state;\n\n      if (!nav || nav.url === undefined || nav.url === null) {\n        return null;\n      }\n      return $urlRouter.href(nav.url, filterByKeys(state.params.$$keys().concat('#'), params || {}), {\n        absolute: options.absolute\n      });\n    };\n\n    /**\n     * @ngdoc function\n     * @name ui.router.state.$state#get\n     * @methodOf ui.router.state.$state\n     *\n     * @description\n     * Returns the state configuration object for any specific state or all states.\n     *\n     * @param {string|object=} stateOrName (absolute or relative) If provided, will only get the config for\n     * the requested state. If not provided, returns an array of ALL state configs.\n     * @param {string|object=} context When stateOrName is a relative state reference, the state will be retrieved relative to context.\n     * @returns {Object|Array} State configuration object or array of all objects.\n     */\n    $state.get = function (stateOrName, context) {\n      if (arguments.length === 0) return map(objectKeys(states), function(name) { return states[name].self; });\n      var state = findState(stateOrName, context || $state.$current);\n      return (state && state.self) ? state.self : null;\n    };\n\n    function resolveState(state, params, paramsAreFiltered, inherited, dst, options) {\n      // Make a restricted $stateParams with only the parameters that apply to this state if\n      // necessary. In addition to being available to the controller and onEnter/onExit callbacks,\n      // we also need $stateParams to be available for any $injector calls we make during the\n      // dependency resolution process.\n      var $stateParams = (paramsAreFiltered) ? params : filterByKeys(state.params.$$keys(), params);\n      var locals = { $stateParams: $stateParams };\n\n      // Resolve 'global' dependencies for the state, i.e. those not specific to a view.\n      // We're also including $stateParams in this; that way the parameters are restricted\n      // to the set that should be visible to the state, and are independent of when we update\n      // the global $state and $stateParams values.\n      dst.resolve = $resolve.resolve(state.resolve, locals, dst.resolve, state);\n      var promises = [dst.resolve.then(function (globals) {\n        dst.globals = globals;\n      })];\n      if (inherited) promises.push(inherited);\n\n      function resolveViews() {\n        var viewsPromises = [];\n\n        // Resolve template and dependencies for all views.\n        forEach(state.views, function (view, name) {\n          var injectables = (view.resolve && view.resolve !== state.resolve ? view.resolve : {});\n          injectables.$template = [ function () {\n            return $view.load(name, { view: view, locals: dst.globals, params: $stateParams, notify: options.notify }) || '';\n          }];\n\n          viewsPromises.push($resolve.resolve(injectables, dst.globals, dst.resolve, state).then(function (result) {\n            // References to the controller (only instantiated at link time)\n            if (isFunction(view.controllerProvider) || isArray(view.controllerProvider)) {\n              var injectLocals = angular.extend({}, injectables, dst.globals);\n              result.$$controller = $injector.invoke(view.controllerProvider, null, injectLocals);\n            } else {\n              result.$$controller = view.controller;\n            }\n            // Provide access to the state itself for internal use\n            result.$$state = state;\n            result.$$controllerAs = view.controllerAs;\n            dst[name] = result;\n          }));\n        });\n\n        return $q.all(viewsPromises).then(function(){\n          return dst.globals;\n        });\n      }\n\n      // Wait for all the promises and then return the activation object\n      return $q.all(promises).then(resolveViews).then(function (values) {\n        return dst;\n      });\n    }\n\n    return $state;\n  }\n\n  function shouldSkipReload(to, toParams, from, fromParams, locals, options) {\n    // Return true if there are no differences in non-search (path/object) params, false if there are differences\n    function nonSearchParamsEqual(fromAndToState, fromParams, toParams) {\n      // Identify whether all the parameters that differ between `fromParams` and `toParams` were search params.\n      function notSearchParam(key) {\n        return fromAndToState.params[key].location != \"search\";\n      }\n      var nonQueryParamKeys = fromAndToState.params.$$keys().filter(notSearchParam);\n      var nonQueryParams = pick.apply({}, [fromAndToState.params].concat(nonQueryParamKeys));\n      var nonQueryParamSet = new $$UMFP.ParamSet(nonQueryParams);\n      return nonQueryParamSet.$$equals(fromParams, toParams);\n    }\n\n    // If reload was not explicitly requested\n    // and we're transitioning to the same state we're already in\n    // and    the locals didn't change\n    //     or they changed in a way that doesn't merit reloading\n    //        (reloadOnParams:false, or reloadOnSearch.false and only search params changed)\n    // Then return true.\n    if (!options.reload && to === from &&\n      (locals === from.locals || (to.self.reloadOnSearch === false && nonSearchParamsEqual(from, fromParams, toParams)))) {\n      return true;\n    }\n  }\n}\n\nangular.module('ui.router.state')\n  .value('$stateParams', {})\n  .provider('$state', $StateProvider);\n\n\n$ViewProvider.$inject = [];\nfunction $ViewProvider() {\n\n  this.$get = $get;\n  /**\n   * @ngdoc object\n   * @name ui.router.state.$view\n   *\n   * @requires ui.router.util.$templateFactory\n   * @requires $rootScope\n   *\n   * @description\n   *\n   */\n  $get.$inject = ['$rootScope', '$templateFactory'];\n  function $get(   $rootScope,   $templateFactory) {\n    return {\n      // $view.load('full.viewName', { template: ..., controller: ..., resolve: ..., async: false, params: ... })\n      /**\n       * @ngdoc function\n       * @name ui.router.state.$view#load\n       * @methodOf ui.router.state.$view\n       *\n       * @description\n       *\n       * @param {string} name name\n       * @param {object} options option object.\n       */\n      load: function load(name, options) {\n        var result, defaults = {\n          template: null, controller: null, view: null, locals: null, notify: true, async: true, params: {}\n        };\n        options = extend(defaults, options);\n\n        if (options.view) {\n          result = $templateFactory.fromConfig(options.view, options.params, options.locals);\n        }\n        if (result && options.notify) {\n        /**\n         * @ngdoc event\n         * @name ui.router.state.$state#$viewContentLoading\n         * @eventOf ui.router.state.$view\n         * @eventType broadcast on root scope\n         * @description\n         *\n         * Fired once the view **begins loading**, *before* the DOM is rendered.\n         *\n         * @param {Object} event Event object.\n         * @param {Object} viewConfig The view config properties (template, controller, etc).\n         *\n         * @example\n         *\n         * <pre>\n         * $scope.$on('$viewContentLoading',\n         * function(event, viewConfig){\n         *     // Access to all the view config properties.\n         *     // and one special property 'targetView'\n         *     // viewConfig.targetView\n         * });\n         * </pre>\n         */\n          $rootScope.$broadcast('$viewContentLoading', options);\n        }\n        return result;\n      }\n    };\n  }\n}\n\nangular.module('ui.router.state').provider('$view', $ViewProvider);\n\n/**\n * @ngdoc object\n * @name ui.router.state.$uiViewScrollProvider\n *\n * @description\n * Provider that returns the {@link ui.router.state.$uiViewScroll} service function.\n */\nfunction $ViewScrollProvider() {\n\n  var useAnchorScroll = false;\n\n  /**\n   * @ngdoc function\n   * @name ui.router.state.$uiViewScrollProvider#useAnchorScroll\n   * @methodOf ui.router.state.$uiViewScrollProvider\n   *\n   * @description\n   * Reverts back to using the core [`$anchorScroll`](http://docs.angularjs.org/api/ng.$anchorScroll) service for\n   * scrolling based on the url anchor.\n   */\n  this.useAnchorScroll = function () {\n    useAnchorScroll = true;\n  };\n\n  /**\n   * @ngdoc object\n   * @name ui.router.state.$uiViewScroll\n   *\n   * @requires $anchorScroll\n   * @requires $timeout\n   *\n   * @description\n   * When called with a jqLite element, it scrolls the element into view (after a\n   * `$timeout` so the DOM has time to refresh).\n   *\n   * If you prefer to rely on `$anchorScroll` to scroll the view to the anchor,\n   * this can be enabled by calling {@link ui.router.state.$uiViewScrollProvider#methods_useAnchorScroll `$uiViewScrollProvider.useAnchorScroll()`}.\n   */\n  this.$get = ['$anchorScroll', '$timeout', function ($anchorScroll, $timeout) {\n    if (useAnchorScroll) {\n      return $anchorScroll;\n    }\n\n    return function ($element) {\n      return $timeout(function () {\n        $element[0].scrollIntoView();\n      }, 0, false);\n    };\n  }];\n}\n\nangular.module('ui.router.state').provider('$uiViewScroll', $ViewScrollProvider);\n\n/**\n * @ngdoc directive\n * @name ui.router.state.directive:ui-view\n *\n * @requires ui.router.state.$state\n * @requires $compile\n * @requires $controller\n * @requires $injector\n * @requires ui.router.state.$uiViewScroll\n * @requires $document\n *\n * @restrict ECA\n *\n * @description\n * The ui-view directive tells $state where to place your templates.\n *\n * @param {string=} name A view name. The name should be unique amongst the other views in the\n * same state. You can have views of the same name that live in different states.\n *\n * @param {string=} autoscroll It allows you to set the scroll behavior of the browser window\n * when a view is populated. By default, $anchorScroll is overridden by ui-router's custom scroll\n * service, {@link ui.router.state.$uiViewScroll}. This custom service let's you\n * scroll ui-view elements into view when they are populated during a state activation.\n *\n * *Note: To revert back to old [`$anchorScroll`](http://docs.angularjs.org/api/ng.$anchorScroll)\n * functionality, call `$uiViewScrollProvider.useAnchorScroll()`.*\n *\n * @param {string=} onload Expression to evaluate whenever the view updates.\n * \n * @example\n * A view can be unnamed or named. \n * <pre>\n * <!-- Unnamed -->\n * <div ui-view></div> \n * \n * <!-- Named -->\n * <div ui-view=\"viewName\"></div>\n * </pre>\n *\n * You can only have one unnamed view within any template (or root html). If you are only using a \n * single view and it is unnamed then you can populate it like so:\n * <pre>\n * <div ui-view></div> \n * $stateProvider.state(\"home\", {\n *   template: \"<h1>HELLO!</h1>\"\n * })\n * </pre>\n * \n * The above is a convenient shortcut equivalent to specifying your view explicitly with the {@link ui.router.state.$stateProvider#views `views`}\n * config property, by name, in this case an empty name:\n * <pre>\n * $stateProvider.state(\"home\", {\n *   views: {\n *     \"\": {\n *       template: \"<h1>HELLO!</h1>\"\n *     }\n *   }    \n * })\n * </pre>\n * \n * But typically you'll only use the views property if you name your view or have more than one view \n * in the same template. There's not really a compelling reason to name a view if its the only one, \n * but you could if you wanted, like so:\n * <pre>\n * <div ui-view=\"main\"></div>\n * </pre> \n * <pre>\n * $stateProvider.state(\"home\", {\n *   views: {\n *     \"main\": {\n *       template: \"<h1>HELLO!</h1>\"\n *     }\n *   }    \n * })\n * </pre>\n * \n * Really though, you'll use views to set up multiple views:\n * <pre>\n * <div ui-view></div>\n * <div ui-view=\"chart\"></div> \n * <div ui-view=\"data\"></div> \n * </pre>\n * \n * <pre>\n * $stateProvider.state(\"home\", {\n *   views: {\n *     \"\": {\n *       template: \"<h1>HELLO!</h1>\"\n *     },\n *     \"chart\": {\n *       template: \"<chart_thing/>\"\n *     },\n *     \"data\": {\n *       template: \"<data_thing/>\"\n *     }\n *   }    \n * })\n * </pre>\n *\n * Examples for `autoscroll`:\n *\n * <pre>\n * <!-- If autoscroll present with no expression,\n *      then scroll ui-view into view -->\n * <ui-view autoscroll/>\n *\n * <!-- If autoscroll present with valid expression,\n *      then scroll ui-view into view if expression evaluates to true -->\n * <ui-view autoscroll='true'/>\n * <ui-view autoscroll='false'/>\n * <ui-view autoscroll='scopeVariable'/>\n * </pre>\n */\n$ViewDirective.$inject = ['$state', '$injector', '$uiViewScroll', '$interpolate'];\nfunction $ViewDirective(   $state,   $injector,   $uiViewScroll,   $interpolate) {\n\n  function getService() {\n    return ($injector.has) ? function(service) {\n      return $injector.has(service) ? $injector.get(service) : null;\n    } : function(service) {\n      try {\n        return $injector.get(service);\n      } catch (e) {\n        return null;\n      }\n    };\n  }\n\n  var service = getService(),\n      $animator = service('$animator'),\n      $animate = service('$animate');\n\n  // Returns a set of DOM manipulation functions based on which Angular version\n  // it should use\n  function getRenderer(attrs, scope) {\n    var statics = function() {\n      return {\n        enter: function (element, target, cb) { target.after(element); cb(); },\n        leave: function (element, cb) { element.remove(); cb(); }\n      };\n    };\n\n    if ($animate) {\n      return {\n        enter: function(element, target, cb) {\n          var promise = $animate.enter(element, null, target, cb);\n          if (promise && promise.then) promise.then(cb);\n        },\n        leave: function(element, cb) {\n          var promise = $animate.leave(element, cb);\n          if (promise && promise.then) promise.then(cb);\n        }\n      };\n    }\n\n    if ($animator) {\n      var animate = $animator && $animator(scope, attrs);\n\n      return {\n        enter: function(element, target, cb) {animate.enter(element, null, target); cb(); },\n        leave: function(element, cb) { animate.leave(element); cb(); }\n      };\n    }\n\n    return statics();\n  }\n\n  var directive = {\n    restrict: 'ECA',\n    terminal: true,\n    priority: 400,\n    transclude: 'element',\n    compile: function (tElement, tAttrs, $transclude) {\n      return function (scope, $element, attrs) {\n        var previousEl, currentEl, currentScope, latestLocals,\n            onloadExp     = attrs.onload || '',\n            autoScrollExp = attrs.autoscroll,\n            renderer      = getRenderer(attrs, scope);\n\n        scope.$on('$stateChangeSuccess', function() {\n          updateView(false);\n        });\n        scope.$on('$viewContentLoading', function() {\n          updateView(false);\n        });\n\n        updateView(true);\n\n        function cleanupLastView() {\n          if (previousEl) {\n            previousEl.remove();\n            previousEl = null;\n          }\n\n          if (currentScope) {\n            currentScope.$destroy();\n            currentScope = null;\n          }\n\n          if (currentEl) {\n            renderer.leave(currentEl, function() {\n              previousEl = null;\n            });\n\n            previousEl = currentEl;\n            currentEl = null;\n          }\n        }\n\n        function updateView(firstTime) {\n          var newScope,\n              name            = getUiViewName(scope, attrs, $element, $interpolate),\n              previousLocals  = name && $state.$current && $state.$current.locals[name];\n\n          if (!firstTime && previousLocals === latestLocals) return; // nothing to do\n          newScope = scope.$new();\n          latestLocals = $state.$current.locals[name];\n\n          var clone = $transclude(newScope, function(clone) {\n            renderer.enter(clone, $element, function onUiViewEnter() {\n              if(currentScope) {\n                currentScope.$emit('$viewContentAnimationEnded');\n              }\n\n              if (angular.isDefined(autoScrollExp) && !autoScrollExp || scope.$eval(autoScrollExp)) {\n                $uiViewScroll(clone);\n              }\n            });\n            cleanupLastView();\n          });\n\n          currentEl = clone;\n          currentScope = newScope;\n          /**\n           * @ngdoc event\n           * @name ui.router.state.directive:ui-view#$viewContentLoaded\n           * @eventOf ui.router.state.directive:ui-view\n           * @eventType emits on ui-view directive scope\n           * @description           *\n           * Fired once the view is **loaded**, *after* the DOM is rendered.\n           *\n           * @param {Object} event Event object.\n           */\n          currentScope.$emit('$viewContentLoaded');\n          currentScope.$eval(onloadExp);\n        }\n      };\n    }\n  };\n\n  return directive;\n}\n\n$ViewDirectiveFill.$inject = ['$compile', '$controller', '$state', '$interpolate'];\nfunction $ViewDirectiveFill (  $compile,   $controller,   $state,   $interpolate) {\n  return {\n    restrict: 'ECA',\n    priority: -400,\n    compile: function (tElement) {\n      var initial = tElement.html();\n      return function (scope, $element, attrs) {\n        var current = $state.$current,\n            name = getUiViewName(scope, attrs, $element, $interpolate),\n            locals  = current && current.locals[name];\n\n        if (! locals) {\n          return;\n        }\n\n        $element.data('$uiView', { name: name, state: locals.$$state });\n        $element.html(locals.$template ? locals.$template : initial);\n\n        var link = $compile($element.contents());\n\n        if (locals.$$controller) {\n          locals.$scope = scope;\n          locals.$element = $element;\n          var controller = $controller(locals.$$controller, locals);\n          if (locals.$$controllerAs) {\n            scope[locals.$$controllerAs] = controller;\n          }\n          $element.data('$ngControllerController', controller);\n          $element.children().data('$ngControllerController', controller);\n        }\n\n        link(scope);\n      };\n    }\n  };\n}\n\n/**\n * Shared ui-view code for both directives:\n * Given scope, element, and its attributes, return the view's name\n */\nfunction getUiViewName(scope, attrs, element, $interpolate) {\n  var name = $interpolate(attrs.uiView || attrs.name || '')(scope);\n  var inherited = element.inheritedData('$uiView');\n  return name.indexOf('@') >= 0 ?  name :  (name + '@' + (inherited ? inherited.state.name : ''));\n}\n\nangular.module('ui.router.state').directive('uiView', $ViewDirective);\nangular.module('ui.router.state').directive('uiView', $ViewDirectiveFill);\n\nfunction parseStateRef(ref, current) {\n  var preparsed = ref.match(/^\\s*({[^}]*})\\s*$/), parsed;\n  if (preparsed) ref = current + '(' + preparsed[1] + ')';\n  parsed = ref.replace(/\\n/g, \" \").match(/^([^(]+?)\\s*(\\((.*)\\))?$/);\n  if (!parsed || parsed.length !== 4) throw new Error(\"Invalid state ref '\" + ref + \"'\");\n  return { state: parsed[1], paramExpr: parsed[3] || null };\n}\n\nfunction stateContext(el) {\n  var stateData = el.parent().inheritedData('$uiView');\n\n  if (stateData && stateData.state && stateData.state.name) {\n    return stateData.state;\n  }\n}\n\n/**\n * @ngdoc directive\n * @name ui.router.state.directive:ui-sref\n *\n * @requires ui.router.state.$state\n * @requires $timeout\n *\n * @restrict A\n *\n * @description\n * A directive that binds a link (`<a>` tag) to a state. If the state has an associated \n * URL, the directive will automatically generate & update the `href` attribute via \n * the {@link ui.router.state.$state#methods_href $state.href()} method. Clicking \n * the link will trigger a state transition with optional parameters. \n *\n * Also middle-clicking, right-clicking, and ctrl-clicking on the link will be \n * handled natively by the browser.\n *\n * You can also use relative state paths within ui-sref, just like the relative \n * paths passed to `$state.go()`. You just need to be aware that the path is relative\n * to the state that the link lives in, in other words the state that loaded the \n * template containing the link.\n *\n * You can specify options to pass to {@link ui.router.state.$state#go $state.go()}\n * using the `ui-sref-opts` attribute. Options are restricted to `location`, `inherit`,\n * and `reload`.\n *\n * @example\n * Here's an example of how you'd use ui-sref and how it would compile. If you have the \n * following template:\n * <pre>\n * <a ui-sref=\"home\">Home</a> | <a ui-sref=\"about\">About</a> | <a ui-sref=\"{page: 2}\">Next page</a>\n * \n * <ul>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a ui-sref=\"contacts.detail({ id: contact.id })\">{{ contact.name }}</a>\n *     </li>\n * </ul>\n * </pre>\n * \n * Then the compiled html would be (assuming Html5Mode is off and current state is contacts):\n * <pre>\n * <a href=\"#/home\" ui-sref=\"home\">Home</a> | <a href=\"#/about\" ui-sref=\"about\">About</a> | <a href=\"#/contacts?page=2\" ui-sref=\"{page: 2}\">Next page</a>\n * \n * <ul>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a href=\"#/contacts/1\" ui-sref=\"contacts.detail({ id: contact.id })\">Joe</a>\n *     </li>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a href=\"#/contacts/2\" ui-sref=\"contacts.detail({ id: contact.id })\">Alice</a>\n *     </li>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a href=\"#/contacts/3\" ui-sref=\"contacts.detail({ id: contact.id })\">Bob</a>\n *     </li>\n * </ul>\n *\n * <a ui-sref=\"home\" ui-sref-opts=\"{reload: true}\">Home</a>\n * </pre>\n *\n * @param {string} ui-sref 'stateName' can be any valid absolute or relative state\n * @param {Object} ui-sref-opts options to pass to {@link ui.router.state.$state#go $state.go()}\n */\n$StateRefDirective.$inject = ['$state', '$timeout'];\nfunction $StateRefDirective($state, $timeout) {\n  var allowedOptions = ['location', 'inherit', 'reload', 'absolute'];\n\n  return {\n    restrict: 'A',\n    require: ['?^uiSrefActive', '?^uiSrefActiveEq'],\n    link: function(scope, element, attrs, uiSrefActive) {\n      var ref = parseStateRef(attrs.uiSref, $state.current.name);\n      var params = null, url = null, base = stateContext(element) || $state.$current;\n      // SVGAElement does not use the href attribute, but rather the 'xlinkHref' attribute.\n      var hrefKind = Object.prototype.toString.call(element.prop('href')) === '[object SVGAnimatedString]' ?\n                 'xlink:href' : 'href';\n      var newHref = null, isAnchor = element.prop(\"tagName\").toUpperCase() === \"A\";\n      var isForm = element[0].nodeName === \"FORM\";\n      var attr = isForm ? \"action\" : hrefKind, nav = true;\n\n      var options = { relative: base, inherit: true };\n      var optionsOverride = scope.$eval(attrs.uiSrefOpts) || {};\n\n      angular.forEach(allowedOptions, function(option) {\n        if (option in optionsOverride) {\n          options[option] = optionsOverride[option];\n        }\n      });\n\n      var update = function(newVal) {\n        if (newVal) params = angular.copy(newVal);\n        if (!nav) return;\n\n        newHref = $state.href(ref.state, params, options);\n\n        var activeDirective = uiSrefActive[1] || uiSrefActive[0];\n        if (activeDirective) {\n          activeDirective.$$addStateInfo(ref.state, params);\n        }\n        if (newHref === null) {\n          nav = false;\n          return false;\n        }\n        attrs.$set(attr, newHref);\n      };\n\n      if (ref.paramExpr) {\n        scope.$watch(ref.paramExpr, function(newVal, oldVal) {\n          if (newVal !== params) update(newVal);\n        }, true);\n        params = angular.copy(scope.$eval(ref.paramExpr));\n      }\n      update();\n\n      if (isForm) return;\n\n      element.bind(\"click\", function(e) {\n        var button = e.which || e.button;\n        if ( !(button > 1 || e.ctrlKey || e.metaKey || e.shiftKey || element.attr('target')) ) {\n          // HACK: This is to allow ng-clicks to be processed before the transition is initiated:\n          var transition = $timeout(function() {\n            $state.go(ref.state, params, options);\n          });\n          e.preventDefault();\n\n          // if the state has no URL, ignore one preventDefault from the <a> directive.\n          var ignorePreventDefaultCount = isAnchor && !newHref ? 1: 0;\n          e.preventDefault = function() {\n            if (ignorePreventDefaultCount-- <= 0)\n              $timeout.cancel(transition);\n          };\n        }\n      });\n    }\n  };\n}\n\n/**\n * @ngdoc directive\n * @name ui.router.state.directive:ui-sref-active\n *\n * @requires ui.router.state.$state\n * @requires ui.router.state.$stateParams\n * @requires $interpolate\n *\n * @restrict A\n *\n * @description\n * A directive working alongside ui-sref to add classes to an element when the\n * related ui-sref directive's state is active, and removing them when it is inactive.\n * The primary use-case is to simplify the special appearance of navigation menus\n * relying on `ui-sref`, by having the \"active\" state's menu button appear different,\n * distinguishing it from the inactive menu items.\n *\n * ui-sref-active can live on the same element as ui-sref or on a parent element. The first\n * ui-sref-active found at the same level or above the ui-sref will be used.\n *\n * Will activate when the ui-sref's target state or any child state is active. If you\n * need to activate only when the ui-sref target state is active and *not* any of\n * it's children, then you will use\n * {@link ui.router.state.directive:ui-sref-active-eq ui-sref-active-eq}\n *\n * @example\n * Given the following template:\n * <pre>\n * <ul>\n *   <li ui-sref-active=\"active\" class=\"item\">\n *     <a href ui-sref=\"app.user({user: 'bilbobaggins'})\">@bilbobaggins</a>\n *   </li>\n * </ul>\n * </pre>\n *\n *\n * When the app state is \"app.user\" (or any children states), and contains the state parameter \"user\" with value \"bilbobaggins\",\n * the resulting HTML will appear as (note the 'active' class):\n * <pre>\n * <ul>\n *   <li ui-sref-active=\"active\" class=\"item active\">\n *     <a ui-sref=\"app.user({user: 'bilbobaggins'})\" href=\"/users/bilbobaggins\">@bilbobaggins</a>\n *   </li>\n * </ul>\n * </pre>\n *\n * The class name is interpolated **once** during the directives link time (any further changes to the\n * interpolated value are ignored).\n *\n * Multiple classes may be specified in a space-separated format:\n * <pre>\n * <ul>\n *   <li ui-sref-active='class1 class2 class3'>\n *     <a ui-sref=\"app.user\">link</a>\n *   </li>\n * </ul>\n * </pre>\n */\n\n/**\n * @ngdoc directive\n * @name ui.router.state.directive:ui-sref-active-eq\n *\n * @requires ui.router.state.$state\n * @requires ui.router.state.$stateParams\n * @requires $interpolate\n *\n * @restrict A\n *\n * @description\n * The same as {@link ui.router.state.directive:ui-sref-active ui-sref-active} but will only activate\n * when the exact target state used in the `ui-sref` is active; no child states.\n *\n */\n$StateRefActiveDirective.$inject = ['$state', '$stateParams', '$interpolate'];\nfunction $StateRefActiveDirective($state, $stateParams, $interpolate) {\n  return  {\n    restrict: \"A\",\n    controller: ['$scope', '$element', '$attrs', function ($scope, $element, $attrs) {\n      var states = [], activeClass;\n\n      // There probably isn't much point in $observing this\n      // uiSrefActive and uiSrefActiveEq share the same directive object with some\n      // slight difference in logic routing\n      activeClass = $interpolate($attrs.uiSrefActiveEq || $attrs.uiSrefActive || '', false)($scope);\n\n      // Allow uiSref to communicate with uiSrefActive[Equals]\n      this.$$addStateInfo = function (newState, newParams) {\n        var state = $state.get(newState, stateContext($element));\n\n        states.push({\n          state: state || { name: newState },\n          params: newParams\n        });\n\n        update();\n      };\n\n      $scope.$on('$stateChangeSuccess', update);\n\n      // Update route state\n      function update() {\n        if (anyMatch()) {\n          $element.addClass(activeClass);\n        } else {\n          $element.removeClass(activeClass);\n        }\n      }\n\n      function anyMatch() {\n        for (var i = 0; i < states.length; i++) {\n          if (isMatch(states[i].state, states[i].params)) {\n            return true;\n          }\n        }\n        return false;\n      }\n\n      function isMatch(state, params) {\n        if (typeof $attrs.uiSrefActiveEq !== 'undefined') {\n          return $state.is(state.name, params);\n        } else {\n          return $state.includes(state.name, params);\n        }\n      }\n    }]\n  };\n}\n\nangular.module('ui.router.state')\n  .directive('uiSref', $StateRefDirective)\n  .directive('uiSrefActive', $StateRefActiveDirective)\n  .directive('uiSrefActiveEq', $StateRefActiveDirective);\n\n/**\n * @ngdoc filter\n * @name ui.router.state.filter:isState\n *\n * @requires ui.router.state.$state\n *\n * @description\n * Translates to {@link ui.router.state.$state#methods_is $state.is(\"stateName\")}.\n */\n$IsStateFilter.$inject = ['$state'];\nfunction $IsStateFilter($state) {\n  var isFilter = function (state) {\n    return $state.is(state);\n  };\n  isFilter.$stateful = true;\n  return isFilter;\n}\n\n/**\n * @ngdoc filter\n * @name ui.router.state.filter:includedByState\n *\n * @requires ui.router.state.$state\n *\n * @description\n * Translates to {@link ui.router.state.$state#methods_includes $state.includes('fullOrPartialStateName')}.\n */\n$IncludedByStateFilter.$inject = ['$state'];\nfunction $IncludedByStateFilter($state) {\n  var includesFilter = function (state) {\n    return $state.includes(state);\n  };\n  includesFilter.$stateful = true;\n  return  includesFilter;\n}\n\nangular.module('ui.router.state')\n  .filter('isState', $IsStateFilter)\n  .filter('includedByState', $IncludedByStateFilter);\n})(window, window.angular);","/*\n * angular-ui-bootstrap\n * http://angular-ui.github.io/bootstrap/\n\n * Version: 0.14.3 - 2015-10-23\n * License: MIT\n */\nangular.module(\"ui.bootstrap\", [\"ui.bootstrap.collapse\",\"ui.bootstrap.accordion\",\"ui.bootstrap.alert\",\"ui.bootstrap.buttons\",\"ui.bootstrap.carousel\",\"ui.bootstrap.dateparser\",\"ui.bootstrap.position\",\"ui.bootstrap.datepicker\",\"ui.bootstrap.dropdown\",\"ui.bootstrap.stackedMap\",\"ui.bootstrap.modal\",\"ui.bootstrap.pagination\",\"ui.bootstrap.tooltip\",\"ui.bootstrap.popover\",\"ui.bootstrap.progressbar\",\"ui.bootstrap.rating\",\"ui.bootstrap.tabs\",\"ui.bootstrap.timepicker\",\"ui.bootstrap.typeahead\"]);\nangular.module('ui.bootstrap.collapse', [])\n\n  .directive('uibCollapse', ['$animate', '$injector', function($animate, $injector) {\n    var $animateCss = $injector.has('$animateCss') ? $injector.get('$animateCss') : null;\n    return {\n      link: function(scope, element, attrs) {\n        function expand() {\n          element.removeClass('collapse')\n            .addClass('collapsing')\n            .attr('aria-expanded', true)\n            .attr('aria-hidden', false);\n\n          if ($animateCss) {\n            $animateCss(element, {\n              addClass: 'in',\n              easing: 'ease',\n              to: { height: element[0].scrollHeight + 'px' }\n            }).start().finally(expandDone);\n          } else {\n            $animate.addClass(element, 'in', {\n              to: { height: element[0].scrollHeight + 'px' }\n            }).then(expandDone);\n          }\n        }\n\n        function expandDone() {\n          element.removeClass('collapsing')\n            .addClass('collapse')\n            .css({height: 'auto'});\n        }\n\n        function collapse() {\n          if (!element.hasClass('collapse') && !element.hasClass('in')) {\n            return collapseDone();\n          }\n\n          element\n            // IMPORTANT: The height must be set before adding \"collapsing\" class.\n            // Otherwise, the browser attempts to animate from height 0 (in\n            // collapsing class) to the given height here.\n            .css({height: element[0].scrollHeight + 'px'})\n            // initially all panel collapse have the collapse class, this removal\n            // prevents the animation from jumping to collapsed state\n            .removeClass('collapse')\n            .addClass('collapsing')\n            .attr('aria-expanded', false)\n            .attr('aria-hidden', true);\n\n          if ($animateCss) {\n            $animateCss(element, {\n              removeClass: 'in',\n              to: {height: '0'}\n            }).start().finally(collapseDone);\n          } else {\n            $animate.removeClass(element, 'in', {\n              to: {height: '0'}\n            }).then(collapseDone);\n          }\n        }\n\n        function collapseDone() {\n          element.css({height: '0'}); // Required so that collapse works when animation is disabled\n          element.removeClass('collapsing')\n            .addClass('collapse');\n        }\n\n        scope.$watch(attrs.uibCollapse, function(shouldCollapse) {\n          if (shouldCollapse) {\n            collapse();\n          } else {\n            expand();\n          }\n        });\n      }\n    };\n  }]);\n\n/* Deprecated collapse below */\n\nangular.module('ui.bootstrap.collapse')\n\n  .value('$collapseSuppressWarning', false)\n\n  .directive('collapse', ['$animate', '$injector', '$log', '$collapseSuppressWarning', function($animate, $injector, $log, $collapseSuppressWarning) {\n    var $animateCss = $injector.has('$animateCss') ? $injector.get('$animateCss') : null;\n    return {\n      link: function(scope, element, attrs) {\n        if (!$collapseSuppressWarning) {\n          $log.warn('collapse is now deprecated. Use uib-collapse instead.');\n        }\n\n        function expand() {\n          element.removeClass('collapse')\n            .addClass('collapsing')\n            .attr('aria-expanded', true)\n            .attr('aria-hidden', false);\n\n          if ($animateCss) {\n            $animateCss(element, {\n              easing: 'ease',\n              to: { height: element[0].scrollHeight + 'px' }\n            }).start().done(expandDone);\n          } else {\n            $animate.animate(element, {}, {\n              height: element[0].scrollHeight + 'px'\n            }).then(expandDone);\n          }\n        }\n\n        function expandDone() {\n          element.removeClass('collapsing')\n            .addClass('collapse in')\n            .css({height: 'auto'});\n        }\n\n        function collapse() {\n          if (!element.hasClass('collapse') && !element.hasClass('in')) {\n            return collapseDone();\n          }\n\n          element\n            // IMPORTANT: The height must be set before adding \"collapsing\" class.\n            // Otherwise, the browser attempts to animate from height 0 (in\n            // collapsing class) to the given height here.\n            .css({height: element[0].scrollHeight + 'px'})\n            // initially all panel collapse have the collapse class, this removal\n            // prevents the animation from jumping to collapsed state\n            .removeClass('collapse in')\n            .addClass('collapsing')\n            .attr('aria-expanded', false)\n            .attr('aria-hidden', true);\n\n          if ($animateCss) {\n            $animateCss(element, {\n              to: {height: '0'}\n            }).start().done(collapseDone);\n          } else {\n            $animate.animate(element, {}, {\n              height: '0'\n            }).then(collapseDone);\n          }\n        }\n\n        function collapseDone() {\n          element.css({height: '0'}); // Required so that collapse works when animation is disabled\n          element.removeClass('collapsing')\n            .addClass('collapse');\n        }\n\n        scope.$watch(attrs.collapse, function(shouldCollapse) {\n          if (shouldCollapse) {\n            collapse();\n          } else {\n            expand();\n          }\n        });\n      }\n    };\n  }]);\n\nangular.module('ui.bootstrap.accordion', ['ui.bootstrap.collapse'])\n\n.constant('uibAccordionConfig', {\n  closeOthers: true\n})\n\n.controller('UibAccordionController', ['$scope', '$attrs', 'uibAccordionConfig', function($scope, $attrs, accordionConfig) {\n  // This array keeps track of the accordion groups\n  this.groups = [];\n\n  // Ensure that all the groups in this accordion are closed, unless close-others explicitly says not to\n  this.closeOthers = function(openGroup) {\n    var closeOthers = angular.isDefined($attrs.closeOthers) ?\n      $scope.$eval($attrs.closeOthers) : accordionConfig.closeOthers;\n    if (closeOthers) {\n      angular.forEach(this.groups, function(group) {\n        if (group !== openGroup) {\n          group.isOpen = false;\n        }\n      });\n    }\n  };\n\n  // This is called from the accordion-group directive to add itself to the accordion\n  this.addGroup = function(groupScope) {\n    var that = this;\n    this.groups.push(groupScope);\n\n    groupScope.$on('$destroy', function(event) {\n      that.removeGroup(groupScope);\n    });\n  };\n\n  // This is called from the accordion-group directive when to remove itself\n  this.removeGroup = function(group) {\n    var index = this.groups.indexOf(group);\n    if (index !== -1) {\n      this.groups.splice(index, 1);\n    }\n  };\n\n}])\n\n// The accordion directive simply sets up the directive controller\n// and adds an accordion CSS class to itself element.\n.directive('uibAccordion', function() {\n  return {\n    controller: 'UibAccordionController',\n    controllerAs: 'accordion',\n    transclude: true,\n    templateUrl: function(element, attrs) {\n      return attrs.templateUrl || 'template/accordion/accordion.html';\n    }\n  };\n})\n\n// The accordion-group directive indicates a block of html that will expand and collapse in an accordion\n.directive('uibAccordionGroup', function() {\n  return {\n    require: '^uibAccordion',         // We need this directive to be inside an accordion\n    transclude: true,              // It transcludes the contents of the directive into the template\n    replace: true,                // The element containing the directive will be replaced with the template\n    templateUrl: function(element, attrs) {\n      return attrs.templateUrl || 'template/accordion/accordion-group.html';\n    },\n    scope: {\n      heading: '@',               // Interpolate the heading attribute onto this scope\n      isOpen: '=?',\n      isDisabled: '=?'\n    },\n    controller: function() {\n      this.setHeading = function(element) {\n        this.heading = element;\n      };\n    },\n    link: function(scope, element, attrs, accordionCtrl) {\n      accordionCtrl.addGroup(scope);\n\n      scope.openClass = attrs.openClass || 'panel-open';\n      scope.panelClass = attrs.panelClass;\n      scope.$watch('isOpen', function(value) {\n        element.toggleClass(scope.openClass, !!value);\n        if (value) {\n          accordionCtrl.closeOthers(scope);\n        }\n      });\n\n      scope.toggleOpen = function($event) {\n        if (!scope.isDisabled) {\n          if (!$event || $event.which === 32) {\n            scope.isOpen = !scope.isOpen;\n          }\n        }\n      };\n    }\n  };\n})\n\n// Use accordion-heading below an accordion-group to provide a heading containing HTML\n.directive('uibAccordionHeading', function() {\n  return {\n    transclude: true,   // Grab the contents to be used as the heading\n    template: '',       // In effect remove this element!\n    replace: true,\n    require: '^uibAccordionGroup',\n    link: function(scope, element, attrs, accordionGroupCtrl, transclude) {\n      // Pass the heading to the accordion-group controller\n      // so that it can be transcluded into the right place in the template\n      // [The second parameter to transclude causes the elements to be cloned so that they work in ng-repeat]\n      accordionGroupCtrl.setHeading(transclude(scope, angular.noop));\n    }\n  };\n})\n\n// Use in the accordion-group template to indicate where you want the heading to be transcluded\n// You must provide the property on the accordion-group controller that will hold the transcluded element\n.directive('uibAccordionTransclude', function() {\n  return {\n    require: ['?^uibAccordionGroup', '?^accordionGroup'],\n    link: function(scope, element, attrs, controller) {\n      controller = controller[0] ? controller[0] : controller[1]; // Delete after we remove deprecation\n      scope.$watch(function() { return controller[attrs.uibAccordionTransclude]; }, function(heading) {\n        if (heading) {\n          element.find('span').html('');\n          element.find('span').append(heading);\n        }\n      });\n    }\n  };\n});\n\n/* Deprecated accordion below */\n\nangular.module('ui.bootstrap.accordion')\n\n  .value('$accordionSuppressWarning', false)\n\n  .controller('AccordionController', ['$scope', '$attrs', '$controller', '$log', '$accordionSuppressWarning', function($scope, $attrs, $controller, $log, $accordionSuppressWarning) {\n    if (!$accordionSuppressWarning) {\n      $log.warn('AccordionController is now deprecated. Use UibAccordionController instead.');\n    }\n\n    angular.extend(this, $controller('UibAccordionController', {\n      $scope: $scope,\n      $attrs: $attrs\n    }));\n  }])\n\n  .directive('accordion', ['$log', '$accordionSuppressWarning', function($log, $accordionSuppressWarning) {\n    return {\n      restrict: 'EA',\n      controller: 'AccordionController',\n      controllerAs: 'accordion',\n      transclude: true,\n      replace: false,\n      templateUrl: function(element, attrs) {\n        return attrs.templateUrl || 'template/accordion/accordion.html';\n      },\n      link: function() {\n        if (!$accordionSuppressWarning) {\n          $log.warn('accordion is now deprecated. Use uib-accordion instead.');\n        }\n      }\n    };\n  }])\n\n  .directive('accordionGroup', ['$log', '$accordionSuppressWarning', function($log, $accordionSuppressWarning) {\n    return {\n      require: '^accordion',         // We need this directive to be inside an accordion\n      restrict: 'EA',\n      transclude: true,              // It transcludes the contents of the directive into the template\n      replace: true,                // The element containing the directive will be replaced with the template\n      templateUrl: function(element, attrs) {\n        return attrs.templateUrl || 'template/accordion/accordion-group.html';\n      },\n      scope: {\n        heading: '@',               // Interpolate the heading attribute onto this scope\n        isOpen: '=?',\n        isDisabled: '=?'\n      },\n      controller: function() {\n        this.setHeading = function(element) {\n          this.heading = element;\n        };\n      },\n      link: function(scope, element, attrs, accordionCtrl) {\n        if (!$accordionSuppressWarning) {\n          $log.warn('accordion-group is now deprecated. Use uib-accordion-group instead.');\n        }\n\n        accordionCtrl.addGroup(scope);\n\n        scope.openClass = attrs.openClass || 'panel-open';\n        scope.panelClass = attrs.panelClass;\n        scope.$watch('isOpen', function(value) {\n          element.toggleClass(scope.openClass, !!value);\n          if (value) {\n            accordionCtrl.closeOthers(scope);\n          }\n        });\n\n        scope.toggleOpen = function($event) {\n          if (!scope.isDisabled) {\n            if (!$event || $event.which === 32) {\n              scope.isOpen = !scope.isOpen;\n            }\n          }\n        };\n      }\n    };\n  }])\n\n  .directive('accordionHeading', ['$log', '$accordionSuppressWarning', function($log, $accordionSuppressWarning) {\n    return {\n      restrict: 'EA',\n      transclude: true,   // Grab the contents to be used as the heading\n      template: '',       // In effect remove this element!\n      replace: true,\n      require: '^accordionGroup',\n      link: function(scope, element, attr, accordionGroupCtrl, transclude) {\n        if (!$accordionSuppressWarning) {\n          $log.warn('accordion-heading is now deprecated. Use uib-accordion-heading instead.');\n        }\n        // Pass the heading to the accordion-group controller\n        // so that it can be transcluded into the right place in the template\n        // [The second parameter to transclude causes the elements to be cloned so that they work in ng-repeat]\n        accordionGroupCtrl.setHeading(transclude(scope, angular.noop));\n      }\n    };\n  }])\n\n  .directive('accordionTransclude', ['$log', '$accordionSuppressWarning', function($log, $accordionSuppressWarning) {\n    return {\n      require: '^accordionGroup',\n      link: function(scope, element, attr, controller) {\n        if (!$accordionSuppressWarning) {\n          $log.warn('accordion-transclude is now deprecated. Use uib-accordion-transclude instead.');\n        }\n\n        scope.$watch(function() { return controller[attr.accordionTransclude]; }, function(heading) {\n          if (heading) {\n            element.find('span').html('');\n            element.find('span').append(heading);\n          }\n        });\n      }\n    };\n  }]);\n\n\nangular.module('ui.bootstrap.alert', [])\n\n.controller('UibAlertController', ['$scope', '$attrs', '$interpolate', '$timeout', function($scope, $attrs, $interpolate, $timeout) {\n  $scope.closeable = !!$attrs.close;\n\n  var dismissOnTimeout = angular.isDefined($attrs.dismissOnTimeout) ?\n    $interpolate($attrs.dismissOnTimeout)($scope.$parent) : null;\n\n  if (dismissOnTimeout) {\n    $timeout(function() {\n      $scope.close();\n    }, parseInt(dismissOnTimeout, 10));\n  }\n}])\n\n.directive('uibAlert', function() {\n  return {\n    controller: 'UibAlertController',\n    controllerAs: 'alert',\n    templateUrl: function(element, attrs) {\n      return attrs.templateUrl || 'template/alert/alert.html';\n    },\n    transclude: true,\n    replace: true,\n    scope: {\n      type: '@',\n      close: '&'\n    }\n  };\n});\n\n/* Deprecated alert below */\n\nangular.module('ui.bootstrap.alert')\n\n  .value('$alertSuppressWarning', false)\n\n  .controller('AlertController', ['$scope', '$attrs', '$controller', '$log', '$alertSuppressWarning', function($scope, $attrs, $controller, $log, $alertSuppressWarning) {\n    if (!$alertSuppressWarning) {\n      $log.warn('AlertController is now deprecated. Use UibAlertController instead.');\n    }\n\n    angular.extend(this, $controller('UibAlertController', {\n      $scope: $scope,\n      $attrs: $attrs\n    }));\n  }])\n\n  .directive('alert', ['$log', '$alertSuppressWarning', function($log, $alertSuppressWarning) {\n    return {\n      controller: 'AlertController',\n      controllerAs: 'alert',\n      templateUrl: function(element, attrs) {\n        return attrs.templateUrl || 'template/alert/alert.html';\n      },\n      transclude: true,\n      replace: true,\n      scope: {\n        type: '@',\n        close: '&'\n      },\n      link: function() {\n        if (!$alertSuppressWarning) {\n          $log.warn('alert is now deprecated. Use uib-alert instead.');\n        }\n      }\n    };\n  }]);\n\nangular.module('ui.bootstrap.buttons', [])\n\n.constant('uibButtonConfig', {\n  activeClass: 'active',\n  toggleEvent: 'click'\n})\n\n.controller('UibButtonsController', ['uibButtonConfig', function(buttonConfig) {\n  this.activeClass = buttonConfig.activeClass || 'active';\n  this.toggleEvent = buttonConfig.toggleEvent || 'click';\n}])\n\n.directive('uibBtnRadio', function() {\n  return {\n    require: ['uibBtnRadio', 'ngModel'],\n    controller: 'UibButtonsController',\n    controllerAs: 'buttons',\n    link: function(scope, element, attrs, ctrls) {\n      var buttonsCtrl = ctrls[0], ngModelCtrl = ctrls[1];\n\n      element.find('input').css({display: 'none'});\n\n      //model -> UI\n      ngModelCtrl.$render = function() {\n        element.toggleClass(buttonsCtrl.activeClass, angular.equals(ngModelCtrl.$modelValue, scope.$eval(attrs.uibBtnRadio)));\n      };\n\n      //ui->model\n      element.on(buttonsCtrl.toggleEvent, function() {\n        if (attrs.disabled) {\n          return;\n        }\n\n        var isActive = element.hasClass(buttonsCtrl.activeClass);\n\n        if (!isActive || angular.isDefined(attrs.uncheckable)) {\n          scope.$apply(function() {\n            ngModelCtrl.$setViewValue(isActive ? null : scope.$eval(attrs.uibBtnRadio));\n            ngModelCtrl.$render();\n          });\n        }\n      });\n    }\n  };\n})\n\n.directive('uibBtnCheckbox', function() {\n  return {\n    require: ['uibBtnCheckbox', 'ngModel'],\n    controller: 'UibButtonsController',\n    controllerAs: 'button',\n    link: function(scope, element, attrs, ctrls) {\n      var buttonsCtrl = ctrls[0], ngModelCtrl = ctrls[1];\n\n      element.find('input').css({display: 'none'});\n\n      function getTrueValue() {\n        return getCheckboxValue(attrs.btnCheckboxTrue, true);\n      }\n\n      function getFalseValue() {\n        return getCheckboxValue(attrs.btnCheckboxFalse, false);\n      }\n\n      function getCheckboxValue(attribute, defaultValue) {\n        return angular.isDefined(attribute) ? scope.$eval(attribute) : defaultValue;\n      }\n\n      //model -> UI\n      ngModelCtrl.$render = function() {\n        element.toggleClass(buttonsCtrl.activeClass, angular.equals(ngModelCtrl.$modelValue, getTrueValue()));\n      };\n\n      //ui->model\n      element.on(buttonsCtrl.toggleEvent, function() {\n        if (attrs.disabled) {\n          return;\n        }\n\n        scope.$apply(function() {\n          ngModelCtrl.$setViewValue(element.hasClass(buttonsCtrl.activeClass) ? getFalseValue() : getTrueValue());\n          ngModelCtrl.$render();\n        });\n      });\n    }\n  };\n});\n\n/* Deprecated buttons below */\n\nangular.module('ui.bootstrap.buttons')\n\n  .value('$buttonsSuppressWarning', false)\n\n  .controller('ButtonsController', ['$controller', '$log', '$buttonsSuppressWarning', function($controller, $log, $buttonsSuppressWarning) {\n    if (!$buttonsSuppressWarning) {\n      $log.warn('ButtonsController is now deprecated. Use UibButtonsController instead.');\n    }\n\n    angular.extend(this, $controller('UibButtonsController'));\n  }])\n\n  .directive('btnRadio', ['$log', '$buttonsSuppressWarning', function($log, $buttonsSuppressWarning) {\n    return {\n      require: ['btnRadio', 'ngModel'],\n      controller: 'ButtonsController',\n      controllerAs: 'buttons',\n      link: function(scope, element, attrs, ctrls) {\n        if (!$buttonsSuppressWarning) {\n          $log.warn('btn-radio is now deprecated. Use uib-btn-radio instead.');\n        }\n\n        var buttonsCtrl = ctrls[0], ngModelCtrl = ctrls[1];\n\n        element.find('input').css({display: 'none'});\n\n        //model -> UI\n        ngModelCtrl.$render = function() {\n          element.toggleClass(buttonsCtrl.activeClass, angular.equals(ngModelCtrl.$modelValue, scope.$eval(attrs.btnRadio)));\n        };\n\n        //ui->model\n        element.bind(buttonsCtrl.toggleEvent, function() {\n          if (attrs.disabled) {\n            return;\n          }\n\n          var isActive = element.hasClass(buttonsCtrl.activeClass);\n\n          if (!isActive || angular.isDefined(attrs.uncheckable)) {\n            scope.$apply(function() {\n              ngModelCtrl.$setViewValue(isActive ? null : scope.$eval(attrs.btnRadio));\n              ngModelCtrl.$render();\n            });\n          }\n        });\n      }\n    };\n  }])\n\n  .directive('btnCheckbox', ['$document', '$log', '$buttonsSuppressWarning', function($document, $log, $buttonsSuppressWarning) {\n    return {\n      require: ['btnCheckbox', 'ngModel'],\n      controller: 'ButtonsController',\n      controllerAs: 'button',\n      link: function(scope, element, attrs, ctrls) {\n        if (!$buttonsSuppressWarning) {\n          $log.warn('btn-checkbox is now deprecated. Use uib-btn-checkbox instead.');\n        }\n\n        var buttonsCtrl = ctrls[0], ngModelCtrl = ctrls[1];\n\n        element.find('input').css({display: 'none'});\n\n        function getTrueValue() {\n          return getCheckboxValue(attrs.btnCheckboxTrue, true);\n        }\n\n        function getFalseValue() {\n          return getCheckboxValue(attrs.btnCheckboxFalse, false);\n        }\n\n        function getCheckboxValue(attributeValue, defaultValue) {\n          var val = scope.$eval(attributeValue);\n          return angular.isDefined(val) ? val : defaultValue;\n        }\n\n        //model -> UI\n        ngModelCtrl.$render = function() {\n          element.toggleClass(buttonsCtrl.activeClass, angular.equals(ngModelCtrl.$modelValue, getTrueValue()));\n        };\n\n        //ui->model\n        element.bind(buttonsCtrl.toggleEvent, function() {\n          if (attrs.disabled) {\n            return;\n          }\n\n          scope.$apply(function() {\n            ngModelCtrl.$setViewValue(element.hasClass(buttonsCtrl.activeClass) ? getFalseValue() : getTrueValue());\n            ngModelCtrl.$render();\n          });\n        });\n\n        //accessibility\n        element.on('keypress', function(e) {\n          if (attrs.disabled || e.which !== 32 || $document[0].activeElement !== element[0]) {\n            return;\n          }\n\n          scope.$apply(function() {\n            ngModelCtrl.$setViewValue(element.hasClass(buttonsCtrl.activeClass) ? getFalseValue() : getTrueValue());\n            ngModelCtrl.$render();\n          });\n        });\n      }\n    };\n  }]);\n\n\n/**\n * @ngdoc overview\n * @name ui.bootstrap.carousel\n *\n * @description\n * AngularJS version of an image carousel.\n *\n */\nangular.module('ui.bootstrap.carousel', [])\n\n.controller('UibCarouselController', ['$scope', '$element', '$interval', '$animate', function($scope, $element, $interval, $animate) {\n  var self = this,\n    slides = self.slides = $scope.slides = [],\n    NEW_ANIMATE = angular.version.minor >= 4,\n    NO_TRANSITION = 'uib-noTransition',\n    SLIDE_DIRECTION = 'uib-slideDirection',\n    currentIndex = -1,\n    currentInterval, isPlaying;\n  self.currentSlide = null;\n\n  var destroyed = false;\n  /* direction: \"prev\" or \"next\" */\n  self.select = $scope.select = function(nextSlide, direction) {\n    var nextIndex = $scope.indexOfSlide(nextSlide);\n    //Decide direction if it's not given\n    if (direction === undefined) {\n      direction = nextIndex > self.getCurrentIndex() ? 'next' : 'prev';\n    }\n    //Prevent this user-triggered transition from occurring if there is already one in progress\n    if (nextSlide && nextSlide !== self.currentSlide && !$scope.$currentTransition) {\n      goNext(nextSlide, nextIndex, direction);\n    }\n  };\n\n  function goNext(slide, index, direction) {\n    // Scope has been destroyed, stop here.\n    if (destroyed) { return; }\n\n    angular.extend(slide, {direction: direction, active: true});\n    angular.extend(self.currentSlide || {}, {direction: direction, active: false});\n    if ($animate.enabled() && !$scope.noTransition && !$scope.$currentTransition &&\n      slide.$element && self.slides.length > 1) {\n      slide.$element.data(SLIDE_DIRECTION, slide.direction);\n      if (self.currentSlide && self.currentSlide.$element) {\n        self.currentSlide.$element.data(SLIDE_DIRECTION, slide.direction);\n      }\n\n      $scope.$currentTransition = true;\n      if (NEW_ANIMATE) {\n        $animate.on('addClass', slide.$element, function(element, phase) {\n          if (phase === 'close') {\n            $scope.$currentTransition = null;\n            $animate.off('addClass', element);\n          }\n        });\n      } else {\n        slide.$element.one('$animate:close', function closeFn() {\n          $scope.$currentTransition = null;\n        });\n      }\n    }\n\n    self.currentSlide = slide;\n    currentIndex = index;\n\n    //every time you change slides, reset the timer\n    restartTimer();\n  }\n\n  $scope.$on('$destroy', function() {\n    destroyed = true;\n  });\n\n  function getSlideByIndex(index) {\n    if (angular.isUndefined(slides[index].index)) {\n      return slides[index];\n    }\n    var i, len = slides.length;\n    for (i = 0; i < slides.length; ++i) {\n      if (slides[i].index == index) {\n        return slides[i];\n      }\n    }\n  }\n\n  self.getCurrentIndex = function() {\n    if (self.currentSlide && angular.isDefined(self.currentSlide.index)) {\n      return +self.currentSlide.index;\n    }\n    return currentIndex;\n  };\n\n  /* Allow outside people to call indexOf on slides array */\n  $scope.indexOfSlide = function(slide) {\n    return angular.isDefined(slide.index) ? +slide.index : slides.indexOf(slide);\n  };\n\n  $scope.next = function() {\n    var newIndex = (self.getCurrentIndex() + 1) % slides.length;\n\n    if (newIndex === 0 && $scope.noWrap()) {\n      $scope.pause();\n      return;\n    }\n\n    return self.select(getSlideByIndex(newIndex), 'next');\n  };\n\n  $scope.prev = function() {\n    var newIndex = self.getCurrentIndex() - 1 < 0 ? slides.length - 1 : self.getCurrentIndex() - 1;\n\n    if ($scope.noWrap() && newIndex === slides.length - 1) {\n      $scope.pause();\n      return;\n    }\n\n    return self.select(getSlideByIndex(newIndex), 'prev');\n  };\n\n  $scope.isActive = function(slide) {\n     return self.currentSlide === slide;\n  };\n\n  $scope.$watch('interval', restartTimer);\n  $scope.$watchCollection('slides', resetTransition);\n  $scope.$on('$destroy', resetTimer);\n\n  function restartTimer() {\n    resetTimer();\n    var interval = +$scope.interval;\n    if (!isNaN(interval) && interval > 0) {\n      currentInterval = $interval(timerFn, interval);\n    }\n  }\n\n  function resetTimer() {\n    if (currentInterval) {\n      $interval.cancel(currentInterval);\n      currentInterval = null;\n    }\n  }\n\n  function timerFn() {\n    var interval = +$scope.interval;\n    if (isPlaying && !isNaN(interval) && interval > 0 && slides.length) {\n      $scope.next();\n    } else {\n      $scope.pause();\n    }\n  }\n\n  function resetTransition(slides) {\n    if (!slides.length) {\n      $scope.$currentTransition = null;\n    }\n  }\n\n  $scope.play = function() {\n    if (!isPlaying) {\n      isPlaying = true;\n      restartTimer();\n    }\n  };\n  $scope.pause = function() {\n    if (!$scope.noPause) {\n      isPlaying = false;\n      resetTimer();\n    }\n  };\n\n  self.addSlide = function(slide, element) {\n    slide.$element = element;\n    slides.push(slide);\n    //if this is the first slide or the slide is set to active, select it\n    if (slides.length === 1 || slide.active) {\n      self.select(slides[slides.length - 1]);\n      if (slides.length === 1) {\n        $scope.play();\n      }\n    } else {\n      slide.active = false;\n    }\n  };\n\n  self.removeSlide = function(slide) {\n    if (angular.isDefined(slide.index)) {\n      slides.sort(function(a, b) {\n        return +a.index > +b.index;\n      });\n    }\n    //get the index of the slide inside the carousel\n    var index = slides.indexOf(slide);\n    slides.splice(index, 1);\n    if (slides.length > 0 && slide.active) {\n      if (index >= slides.length) {\n        self.select(slides[index - 1]);\n      } else {\n        self.select(slides[index]);\n      }\n    } else if (currentIndex > index) {\n      currentIndex--;\n    }\n\n    //clean the currentSlide when no more slide\n    if (slides.length === 0) {\n      self.currentSlide = null;\n    }\n  };\n\n  $scope.$watch('noTransition', function(noTransition) {\n    $element.data(NO_TRANSITION, noTransition);\n  });\n\n}])\n\n/**\n * @ngdoc directive\n * @name ui.bootstrap.carousel.directive:carousel\n * @restrict EA\n *\n * @description\n * Carousel is the outer container for a set of image 'slides' to showcase.\n *\n * @param {number=} interval The time, in milliseconds, that it will take the carousel to go to the next slide.\n * @param {boolean=} noTransition Whether to disable transitions on the carousel.\n * @param {boolean=} noPause Whether to disable pausing on the carousel (by default, the carousel interval pauses on hover).\n *\n * @example\n<example module=\"ui.bootstrap\">\n  <file name=\"index.html\">\n    <uib-carousel>\n      <uib-slide>\n        <img src=\"http://placekitten.com/150/150\" style=\"margin:auto;\">\n        <div class=\"carousel-caption\">\n          <p>Beautiful!</p>\n        </div>\n      </uib-slide>\n      <uib-slide>\n        <img src=\"http://placekitten.com/100/150\" style=\"margin:auto;\">\n        <div class=\"carousel-caption\">\n          <p>D'aww!</p>\n        </div>\n      </uib-slide>\n    </uib-carousel>\n  </file>\n  <file name=\"demo.css\">\n    .carousel-indicators {\n      top: auto;\n      bottom: 15px;\n    }\n  </file>\n</example>\n */\n.directive('uibCarousel', [function() {\n  return {\n    transclude: true,\n    replace: true,\n    controller: 'UibCarouselController',\n    controllerAs: 'carousel',\n    require: 'carousel',\n    templateUrl: function(element, attrs) {\n      return attrs.templateUrl || 'template/carousel/carousel.html';\n    },\n    scope: {\n      interval: '=',\n      noTransition: '=',\n      noPause: '=',\n      noWrap: '&'\n    }\n  };\n}])\n\n/**\n * @ngdoc directive\n * @name ui.bootstrap.carousel.directive:slide\n * @restrict EA\n *\n * @description\n * Creates a slide inside a {@link ui.bootstrap.carousel.directive:carousel carousel}.  Must be placed as a child of a carousel element.\n *\n * @param {boolean=} active Model binding, whether or not this slide is currently active.\n * @param {number=} index The index of the slide. The slides will be sorted by this parameter.\n *\n * @example\n<example module=\"ui.bootstrap\">\n  <file name=\"index.html\">\n<div ng-controller=\"CarouselDemoCtrl\">\n  <uib-carousel>\n    <uib-slide ng-repeat=\"slide in slides\" active=\"slide.active\" index=\"$index\">\n      <img ng-src=\"{{slide.image}}\" style=\"margin:auto;\">\n      <div class=\"carousel-caption\">\n        <h4>Slide {{$index}}</h4>\n        <p>{{slide.text}}</p>\n      </div>\n    </uib-slide>\n  </uib-carousel>\n  Interval, in milliseconds: <input type=\"number\" ng-model=\"myInterval\">\n  <br />Enter a negative number to stop the interval.\n</div>\n  </file>\n  <file name=\"script.js\">\nfunction CarouselDemoCtrl($scope) {\n  $scope.myInterval = 5000;\n}\n  </file>\n  <file name=\"demo.css\">\n    .carousel-indicators {\n      top: auto;\n      bottom: 15px;\n    }\n  </file>\n</example>\n*/\n\n.directive('uibSlide', function() {\n  return {\n    require: '^uibCarousel',\n    restrict: 'EA',\n    transclude: true,\n    replace: true,\n    templateUrl: function(element, attrs) {\n      return attrs.templateUrl || 'template/carousel/slide.html';\n    },\n    scope: {\n      active: '=?',\n      actual: '=?',\n      index: '=?'\n    },\n    link: function (scope, element, attrs, carouselCtrl) {\n      carouselCtrl.addSlide(scope, element);\n      //when the scope is destroyed then remove the slide from the current slides array\n      scope.$on('$destroy', function() {\n        carouselCtrl.removeSlide(scope);\n      });\n\n      scope.$watch('active', function(active) {\n        if (active) {\n          carouselCtrl.select(scope);\n        }\n      });\n    }\n  };\n})\n\n.animation('.item', [\n         '$injector', '$animate',\nfunction ($injector, $animate) {\n  var NO_TRANSITION = 'uib-noTransition',\n    SLIDE_DIRECTION = 'uib-slideDirection',\n    $animateCss = null;\n\n  if ($injector.has('$animateCss')) {\n    $animateCss = $injector.get('$animateCss');\n  }\n\n  function removeClass(element, className, callback) {\n    element.removeClass(className);\n    if (callback) {\n      callback();\n    }\n  }\n\n  return {\n    beforeAddClass: function(element, className, done) {\n      // Due to transclusion, noTransition property is on parent's scope\n      if (className == 'active' && element.parent() && element.parent().parent() &&\n          !element.parent().parent().data(NO_TRANSITION)) {\n        var stopped = false;\n        var direction = element.data(SLIDE_DIRECTION);\n        var directionClass = direction == 'next' ? 'left' : 'right';\n        var removeClassFn = removeClass.bind(this, element,\n          directionClass + ' ' + direction, done);\n        element.addClass(direction);\n\n        if ($animateCss) {\n          $animateCss(element, {addClass: directionClass})\n            .start()\n            .done(removeClassFn);\n        } else {\n          $animate.addClass(element, directionClass).then(function () {\n            if (!stopped) {\n              removeClassFn();\n            }\n            done();\n          });\n        }\n\n        return function () {\n          stopped = true;\n        };\n      }\n      done();\n    },\n    beforeRemoveClass: function (element, className, done) {\n      // Due to transclusion, noTransition property is on parent's scope\n      if (className === 'active' && element.parent() && element.parent().parent() &&\n          !element.parent().parent().data(NO_TRANSITION)) {\n        var stopped = false;\n        var direction = element.data(SLIDE_DIRECTION);\n        var directionClass = direction == 'next' ? 'left' : 'right';\n        var removeClassFn = removeClass.bind(this, element, directionClass, done);\n\n        if ($animateCss) {\n          $animateCss(element, {addClass: directionClass})\n            .start()\n            .done(removeClassFn);\n        } else {\n          $animate.addClass(element, directionClass).then(function() {\n            if (!stopped) {\n              removeClassFn();\n            }\n            done();\n          });\n        }\n        return function() {\n          stopped = true;\n        };\n      }\n      done();\n    }\n  };\n}]);\n\n/* deprecated carousel below */\n\nangular.module('ui.bootstrap.carousel')\n\n.value('$carouselSuppressWarning', false)\n\n.controller('CarouselController', ['$scope', '$element', '$controller', '$log', '$carouselSuppressWarning', function($scope, $element, $controller, $log, $carouselSuppressWarning) {\n  if (!$carouselSuppressWarning) {\n    $log.warn('CarouselController is now deprecated. Use UibCarouselController instead.');\n  }\n\n  angular.extend(this, $controller('UibCarouselController', {\n    $scope: $scope,\n    $element: $element\n  }));\n}])\n\n.directive('carousel', ['$log', '$carouselSuppressWarning', function($log, $carouselSuppressWarning) {\n  return {\n    transclude: true,\n    replace: true,\n    controller: 'CarouselController',\n    controllerAs: 'carousel',\n    require: 'carousel',\n    templateUrl: function(element, attrs) {\n      return attrs.templateUrl || 'template/carousel/carousel.html';\n    },\n    scope: {\n      interval: '=',\n      noTransition: '=',\n      noPause: '=',\n      noWrap: '&'\n    },\n    link: function() {\n      if (!$carouselSuppressWarning) {\n        $log.warn('carousel is now deprecated. Use uib-carousel instead.');\n      }\n    }\n  };\n}])\n\n.directive('slide', ['$log', '$carouselSuppressWarning', function($log, $carouselSuppressWarning) {\n  return {\n    require: '^carousel',\n    transclude: true,\n    replace: true,\n    templateUrl: function(element, attrs) {\n      return attrs.templateUrl || 'template/carousel/slide.html';\n    },\n    scope: {\n      active: '=?',\n      actual: '=?',\n      index: '=?'\n    },\n    link: function (scope, element, attrs, carouselCtrl) {\n      if (!$carouselSuppressWarning) {\n        $log.warn('slide is now deprecated. Use uib-slide instead.');\n      }\n\n      carouselCtrl.addSlide(scope, element);\n      //when the scope is destroyed then remove the slide from the current slides array\n      scope.$on('$destroy', function() {\n        carouselCtrl.removeSlide(scope);\n      });\n\n      scope.$watch('active', function(active) {\n        if (active) {\n          carouselCtrl.select(scope);\n        }\n      });\n    }\n  };\n}]);\n\nangular.module('ui.bootstrap.dateparser', [])\n\n.service('uibDateParser', ['$log', '$locale', 'orderByFilter', function($log, $locale, orderByFilter) {\n  // Pulled from https://github.com/mbostock/d3/blob/master/src/format/requote.js\n  var SPECIAL_CHARACTERS_REGEXP = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\n  var localeId;\n  var formatCodeToRegex;\n\n  this.init = function() {\n    localeId = $locale.id;\n\n    this.parsers = {};\n\n    formatCodeToRegex = {\n      'yyyy': {\n        regex: '\\\\d{4}',\n        apply: function(value) { this.year = +value; }\n      },\n      'yy': {\n        regex: '\\\\d{2}',\n        apply: function(value) { this.year = +value + 2000; }\n      },\n      'y': {\n        regex: '\\\\d{1,4}',\n        apply: function(value) { this.year = +value; }\n      },\n      'MMMM': {\n        regex: $locale.DATETIME_FORMATS.MONTH.join('|'),\n        apply: function(value) { this.month = $locale.DATETIME_FORMATS.MONTH.indexOf(value); }\n      },\n      'MMM': {\n        regex: $locale.DATETIME_FORMATS.SHORTMONTH.join('|'),\n        apply: function(value) { this.month = $locale.DATETIME_FORMATS.SHORTMONTH.indexOf(value); }\n      },\n      'MM': {\n        regex: '0[1-9]|1[0-2]',\n        apply: function(value) { this.month = value - 1; }\n      },\n      'M': {\n        regex: '[1-9]|1[0-2]',\n        apply: function(value) { this.month = value - 1; }\n      },\n      'dd': {\n        regex: '[0-2][0-9]{1}|3[0-1]{1}',\n        apply: function(value) { this.date = +value; }\n      },\n      'd': {\n        regex: '[1-2]?[0-9]{1}|3[0-1]{1}',\n        apply: function(value) { this.date = +value; }\n      },\n      'EEEE': {\n        regex: $locale.DATETIME_FORMATS.DAY.join('|')\n      },\n      'EEE': {\n        regex: $locale.DATETIME_FORMATS.SHORTDAY.join('|')\n      },\n      'HH': {\n        regex: '(?:0|1)[0-9]|2[0-3]',\n        apply: function(value) { this.hours = +value; }\n      },\n      'hh': {\n        regex: '0[0-9]|1[0-2]',\n        apply: function(value) { this.hours = +value; }\n      },\n      'H': {\n        regex: '1?[0-9]|2[0-3]',\n        apply: function(value) { this.hours = +value; }\n      },\n      'h': {\n        regex: '[0-9]|1[0-2]',\n        apply: function(value) { this.hours = +value; }\n      },\n      'mm': {\n        regex: '[0-5][0-9]',\n        apply: function(value) { this.minutes = +value; }\n      },\n      'm': {\n        regex: '[0-9]|[1-5][0-9]',\n        apply: function(value) { this.minutes = +value; }\n      },\n      'sss': {\n        regex: '[0-9][0-9][0-9]',\n        apply: function(value) { this.milliseconds = +value; }\n      },\n      'ss': {\n        regex: '[0-5][0-9]',\n        apply: function(value) { this.seconds = +value; }\n      },\n      's': {\n        regex: '[0-9]|[1-5][0-9]',\n        apply: function(value) { this.seconds = +value; }\n      },\n      'a': {\n        regex: $locale.DATETIME_FORMATS.AMPMS.join('|'),\n        apply: function(value) {\n          if (this.hours === 12) {\n            this.hours = 0;\n          }\n\n          if (value === 'PM') {\n            this.hours += 12;\n          }\n        }\n      }\n    };\n  };\n\n  this.init();\n\n  function createParser(format) {\n    var map = [], regex = format.split('');\n\n    angular.forEach(formatCodeToRegex, function(data, code) {\n      var index = format.indexOf(code);\n\n      if (index > -1) {\n        format = format.split('');\n\n        regex[index] = '(' + data.regex + ')';\n        format[index] = '$'; // Custom symbol to define consumed part of format\n        for (var i = index + 1, n = index + code.length; i < n; i++) {\n          regex[i] = '';\n          format[i] = '$';\n        }\n        format = format.join('');\n\n        map.push({ index: index, apply: data.apply });\n      }\n    });\n\n    return {\n      regex: new RegExp('^' + regex.join('') + '$'),\n      map: orderByFilter(map, 'index')\n    };\n  }\n\n  this.parse = function(input, format, baseDate) {\n    if (!angular.isString(input) || !format) {\n      return input;\n    }\n\n    format = $locale.DATETIME_FORMATS[format] || format;\n    format = format.replace(SPECIAL_CHARACTERS_REGEXP, '\\\\$&');\n\n    if ($locale.id !== localeId) {\n      this.init();\n    }\n\n    if (!this.parsers[format]) {\n      this.parsers[format] = createParser(format);\n    }\n\n    var parser = this.parsers[format],\n        regex = parser.regex,\n        map = parser.map,\n        results = input.match(regex);\n\n    if (results && results.length) {\n      var fields, dt;\n      if (angular.isDate(baseDate) && !isNaN(baseDate.getTime())) {\n        fields = {\n          year: baseDate.getFullYear(),\n          month: baseDate.getMonth(),\n          date: baseDate.getDate(),\n          hours: baseDate.getHours(),\n          minutes: baseDate.getMinutes(),\n          seconds: baseDate.getSeconds(),\n          milliseconds: baseDate.getMilliseconds()\n        };\n      } else {\n        if (baseDate) {\n          $log.warn('dateparser:', 'baseDate is not a valid date');\n        }\n        fields = { year: 1900, month: 0, date: 1, hours: 0, minutes: 0, seconds: 0, milliseconds: 0 };\n      }\n\n      for (var i = 1, n = results.length; i < n; i++) {\n        var mapper = map[i-1];\n        if (mapper.apply) {\n          mapper.apply.call(fields, results[i]);\n        }\n      }\n\n      if (isValid(fields.year, fields.month, fields.date)) {\n        if (angular.isDate(baseDate) && !isNaN(baseDate.getTime())) {\n          dt = new Date(baseDate);\n          dt.setFullYear(fields.year, fields.month, fields.date,\n            fields.hours, fields.minutes, fields.seconds,\n            fields.milliseconds || 0);\n        } else {\n          dt = new Date(fields.year, fields.month, fields.date,\n            fields.hours, fields.minutes, fields.seconds,\n            fields.milliseconds || 0);\n        }\n      }\n\n      return dt;\n    }\n  };\n\n  // Check if date is valid for specific month (and year for February).\n  // Month: 0 = Jan, 1 = Feb, etc\n  function isValid(year, month, date) {\n    if (date < 1) {\n      return false;\n    }\n\n    if (month === 1 && date > 28) {\n      return date === 29 && ((year % 4 === 0 && year % 100 !== 0) || year % 400 === 0);\n    }\n\n    if (month === 3 || month === 5 || month === 8 || month === 10) {\n      return date < 31;\n    }\n\n    return true;\n  }\n}]);\n\n/* Deprecated dateparser below */\n\nangular.module('ui.bootstrap.dateparser')\n\n.value('$dateParserSuppressWarning', false)\n\n.service('dateParser', ['$log', '$dateParserSuppressWarning', 'uibDateParser', function($log, $dateParserSuppressWarning, uibDateParser) {\n  if (!$dateParserSuppressWarning) {\n    $log.warn('dateParser is now deprecated. Use uibDateParser instead.');\n  }\n\n  angular.extend(this, uibDateParser);\n}]);\n\nangular.module('ui.bootstrap.position', [])\n\n/**\n * A set of utility methods that can be use to retrieve position of DOM elements.\n * It is meant to be used where we need to absolute-position DOM elements in\n * relation to other, existing elements (this is the case for tooltips, popovers,\n * typeahead suggestions etc.).\n */\n  .factory('$uibPosition', ['$document', '$window', function($document, $window) {\n    function getStyle(el, cssprop) {\n      if (el.currentStyle) { //IE\n        return el.currentStyle[cssprop];\n      } else if ($window.getComputedStyle) {\n        return $window.getComputedStyle(el)[cssprop];\n      }\n      // finally try and get inline style\n      return el.style[cssprop];\n    }\n\n    /**\n     * Checks if a given element is statically positioned\n     * @param element - raw DOM element\n     */\n    function isStaticPositioned(element) {\n      return (getStyle(element, 'position') || 'static' ) === 'static';\n    }\n\n    /**\n     * returns the closest, non-statically positioned parentOffset of a given element\n     * @param element\n     */\n    var parentOffsetEl = function(element) {\n      var docDomEl = $document[0];\n      var offsetParent = element.offsetParent || docDomEl;\n      while (offsetParent && offsetParent !== docDomEl && isStaticPositioned(offsetParent) ) {\n        offsetParent = offsetParent.offsetParent;\n      }\n      return offsetParent || docDomEl;\n    };\n\n    return {\n      /**\n       * Provides read-only equivalent of jQuery's position function:\n       * http://api.jquery.com/position/\n       */\n      position: function(element) {\n        var elBCR = this.offset(element);\n        var offsetParentBCR = { top: 0, left: 0 };\n        var offsetParentEl = parentOffsetEl(element[0]);\n        if (offsetParentEl != $document[0]) {\n          offsetParentBCR = this.offset(angular.element(offsetParentEl));\n          offsetParentBCR.top += offsetParentEl.clientTop - offsetParentEl.scrollTop;\n          offsetParentBCR.left += offsetParentEl.clientLeft - offsetParentEl.scrollLeft;\n        }\n\n        var boundingClientRect = element[0].getBoundingClientRect();\n        return {\n          width: boundingClientRect.width || element.prop('offsetWidth'),\n          height: boundingClientRect.height || element.prop('offsetHeight'),\n          top: elBCR.top - offsetParentBCR.top,\n          left: elBCR.left - offsetParentBCR.left\n        };\n      },\n\n      /**\n       * Provides read-only equivalent of jQuery's offset function:\n       * http://api.jquery.com/offset/\n       */\n      offset: function(element) {\n        var boundingClientRect = element[0].getBoundingClientRect();\n        return {\n          width: boundingClientRect.width || element.prop('offsetWidth'),\n          height: boundingClientRect.height || element.prop('offsetHeight'),\n          top: boundingClientRect.top + ($window.pageYOffset || $document[0].documentElement.scrollTop),\n          left: boundingClientRect.left + ($window.pageXOffset || $document[0].documentElement.scrollLeft)\n        };\n      },\n\n      /**\n       * Provides coordinates for the targetEl in relation to hostEl\n       */\n      positionElements: function(hostEl, targetEl, positionStr, appendToBody) {\n        var positionStrParts = positionStr.split('-');\n        var pos0 = positionStrParts[0], pos1 = positionStrParts[1] || 'center';\n\n        var hostElPos,\n          targetElWidth,\n          targetElHeight,\n          targetElPos;\n\n        hostElPos = appendToBody ? this.offset(hostEl) : this.position(hostEl);\n\n        targetElWidth = targetEl.prop('offsetWidth');\n        targetElHeight = targetEl.prop('offsetHeight');\n\n        var shiftWidth = {\n          center: function() {\n            return hostElPos.left + hostElPos.width / 2 - targetElWidth / 2;\n          },\n          left: function() {\n            return hostElPos.left;\n          },\n          right: function() {\n            return hostElPos.left + hostElPos.width;\n          }\n        };\n\n        var shiftHeight = {\n          center: function() {\n            return hostElPos.top + hostElPos.height / 2 - targetElHeight / 2;\n          },\n          top: function() {\n            return hostElPos.top;\n          },\n          bottom: function() {\n            return hostElPos.top + hostElPos.height;\n          }\n        };\n\n        switch (pos0) {\n          case 'right':\n            targetElPos = {\n              top: shiftHeight[pos1](),\n              left: shiftWidth[pos0]()\n            };\n            break;\n          case 'left':\n            targetElPos = {\n              top: shiftHeight[pos1](),\n              left: hostElPos.left - targetElWidth\n            };\n            break;\n          case 'bottom':\n            targetElPos = {\n              top: shiftHeight[pos0](),\n              left: shiftWidth[pos1]()\n            };\n            break;\n          default:\n            targetElPos = {\n              top: hostElPos.top - targetElHeight,\n              left: shiftWidth[pos1]()\n            };\n            break;\n        }\n\n        return targetElPos;\n      }\n    };\n  }]);\n\n/* Deprecated position below */\n\nangular.module('ui.bootstrap.position')\n\n.value('$positionSuppressWarning', false)\n\n.service('$position', ['$log', '$positionSuppressWarning', '$uibPosition', function($log, $positionSuppressWarning, $uibPosition) {\n  if (!$positionSuppressWarning) {\n    $log.warn('$position is now deprecated. Use $uibPosition instead.');\n  }\n\n  angular.extend(this, $uibPosition);\n}]);\n\nangular.module('ui.bootstrap.datepicker', ['ui.bootstrap.dateparser', 'ui.bootstrap.position'])\n\n.value('$datepickerSuppressError', false)\n\n.constant('uibDatepickerConfig', {\n  formatDay: 'dd',\n  formatMonth: 'MMMM',\n  formatYear: 'yyyy',\n  formatDayHeader: 'EEE',\n  formatDayTitle: 'MMMM yyyy',\n  formatMonthTitle: 'yyyy',\n  datepickerMode: 'day',\n  minMode: 'day',\n  maxMode: 'year',\n  showWeeks: true,\n  startingDay: 0,\n  yearRange: 20,\n  minDate: null,\n  maxDate: null,\n  shortcutPropagation: false\n})\n\n.controller('UibDatepickerController', ['$scope', '$attrs', '$parse', '$interpolate', '$log', 'dateFilter', 'uibDatepickerConfig', '$datepickerSuppressError', function($scope, $attrs, $parse, $interpolate, $log, dateFilter, datepickerConfig, $datepickerSuppressError) {\n  var self = this,\n      ngModelCtrl = { $setViewValue: angular.noop }; // nullModelCtrl;\n\n  // Modes chain\n  this.modes = ['day', 'month', 'year'];\n\n  // Configuration attributes\n  angular.forEach(['formatDay', 'formatMonth', 'formatYear', 'formatDayHeader', 'formatDayTitle', 'formatMonthTitle',\n                   'showWeeks', 'startingDay', 'yearRange', 'shortcutPropagation'], function(key, index) {\n    self[key] = angular.isDefined($attrs[key]) ? (index < 6 ? $interpolate($attrs[key])($scope.$parent) : $scope.$parent.$eval($attrs[key])) : datepickerConfig[key];\n  });\n\n  // Watchable date attributes\n  angular.forEach(['minDate', 'maxDate'], function(key) {\n    if ($attrs[key]) {\n      $scope.$parent.$watch($parse($attrs[key]), function(value) {\n        self[key] = value ? new Date(value) : null;\n        self.refreshView();\n      });\n    } else {\n      self[key] = datepickerConfig[key] ? new Date(datepickerConfig[key]) : null;\n    }\n  });\n\n  angular.forEach(['minMode', 'maxMode'], function(key) {\n    if ($attrs[key]) {\n      $scope.$parent.$watch($parse($attrs[key]), function(value) {\n        self[key] = angular.isDefined(value) ? value : $attrs[key];\n        $scope[key] = self[key];\n        if ((key == 'minMode' && self.modes.indexOf($scope.datepickerMode) < self.modes.indexOf(self[key])) || (key == 'maxMode' && self.modes.indexOf($scope.datepickerMode) > self.modes.indexOf(self[key]))) {\n          $scope.datepickerMode = self[key];\n        }\n      });\n    } else {\n      self[key] = datepickerConfig[key] || null;\n      $scope[key] = self[key];\n    }\n  });\n\n  $scope.datepickerMode = $scope.datepickerMode || datepickerConfig.datepickerMode;\n  $scope.uniqueId = 'datepicker-' + $scope.$id + '-' + Math.floor(Math.random() * 10000);\n\n  if (angular.isDefined($attrs.initDate)) {\n    this.activeDate = $scope.$parent.$eval($attrs.initDate) || new Date();\n    $scope.$parent.$watch($attrs.initDate, function(initDate) {\n      if (initDate && (ngModelCtrl.$isEmpty(ngModelCtrl.$modelValue) || ngModelCtrl.$invalid)) {\n        self.activeDate = initDate;\n        self.refreshView();\n      }\n    });\n  } else {\n    this.activeDate = new Date();\n  }\n\n  $scope.isActive = function(dateObject) {\n    if (self.compare(dateObject.date, self.activeDate) === 0) {\n      $scope.activeDateId = dateObject.uid;\n      return true;\n    }\n    return false;\n  };\n\n  this.init = function(ngModelCtrl_) {\n    ngModelCtrl = ngModelCtrl_;\n\n    ngModelCtrl.$render = function() {\n      self.render();\n    };\n  };\n\n  this.render = function() {\n    if (ngModelCtrl.$viewValue) {\n      var date = new Date(ngModelCtrl.$viewValue),\n          isValid = !isNaN(date);\n\n      if (isValid) {\n        this.activeDate = date;\n      } else if (!$datepickerSuppressError) {\n        $log.error('Datepicker directive: \"ng-model\" value must be a Date object, a number of milliseconds since 01.01.1970 or a string representing an RFC2822 or ISO 8601 date.');\n      }\n    }\n    this.refreshView();\n  };\n\n  this.refreshView = function() {\n    if (this.element) {\n      this._refreshView();\n\n      var date = ngModelCtrl.$viewValue ? new Date(ngModelCtrl.$viewValue) : null;\n      ngModelCtrl.$setValidity('dateDisabled', !date || (this.element && !this.isDisabled(date)));\n    }\n  };\n\n  this.createDateObject = function(date, format) {\n    var model = ngModelCtrl.$viewValue ? new Date(ngModelCtrl.$viewValue) : null;\n    return {\n      date: date,\n      label: dateFilter(date, format),\n      selected: model && this.compare(date, model) === 0,\n      disabled: this.isDisabled(date),\n      current: this.compare(date, new Date()) === 0,\n      customClass: this.customClass(date)\n    };\n  };\n\n  this.isDisabled = function(date) {\n    return ((this.minDate && this.compare(date, this.minDate) < 0) || (this.maxDate && this.compare(date, this.maxDate) > 0) || ($attrs.dateDisabled && $scope.dateDisabled({date: date, mode: $scope.datepickerMode})));\n  };\n\n  this.customClass = function(date) {\n    return $scope.customClass({date: date, mode: $scope.datepickerMode});\n  };\n\n  // Split array into smaller arrays\n  this.split = function(arr, size) {\n    var arrays = [];\n    while (arr.length > 0) {\n      arrays.push(arr.splice(0, size));\n    }\n    return arrays;\n  };\n\n  $scope.select = function(date) {\n    if ($scope.datepickerMode === self.minMode) {\n      var dt = ngModelCtrl.$viewValue ? new Date(ngModelCtrl.$viewValue) : new Date(0, 0, 0, 0, 0, 0, 0);\n      dt.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n      ngModelCtrl.$setViewValue(dt);\n      ngModelCtrl.$render();\n    } else {\n      self.activeDate = date;\n      $scope.datepickerMode = self.modes[self.modes.indexOf($scope.datepickerMode) - 1];\n    }\n  };\n\n  $scope.move = function(direction) {\n    var year = self.activeDate.getFullYear() + direction * (self.step.years || 0),\n        month = self.activeDate.getMonth() + direction * (self.step.months || 0);\n    self.activeDate.setFullYear(year, month, 1);\n    self.refreshView();\n  };\n\n  $scope.toggleMode = function(direction) {\n    direction = direction || 1;\n\n    if (($scope.datepickerMode === self.maxMode && direction === 1) || ($scope.datepickerMode === self.minMode && direction === -1)) {\n      return;\n    }\n\n    $scope.datepickerMode = self.modes[self.modes.indexOf($scope.datepickerMode) + direction];\n  };\n\n  // Key event mapper\n  $scope.keys = { 13: 'enter', 32: 'space', 33: 'pageup', 34: 'pagedown', 35: 'end', 36: 'home', 37: 'left', 38: 'up', 39: 'right', 40: 'down' };\n\n  var focusElement = function() {\n    self.element[0].focus();\n  };\n\n  // Listen for focus requests from popup directive\n  $scope.$on('uib:datepicker.focus', focusElement);\n\n  $scope.keydown = function(evt) {\n    var key = $scope.keys[evt.which];\n\n    if (!key || evt.shiftKey || evt.altKey) {\n      return;\n    }\n\n    evt.preventDefault();\n    if (!self.shortcutPropagation) {\n      evt.stopPropagation();\n    }\n\n    if (key === 'enter' || key === 'space') {\n      if (self.isDisabled(self.activeDate)) {\n        return; // do nothing\n      }\n      $scope.select(self.activeDate);\n    } else if (evt.ctrlKey && (key === 'up' || key === 'down')) {\n      $scope.toggleMode(key === 'up' ? 1 : -1);\n    } else {\n      self.handleKeyDown(key, evt);\n      self.refreshView();\n    }\n  };\n}])\n\n.controller('UibDaypickerController', ['$scope', '$element', 'dateFilter', function(scope, $element, dateFilter) {\n  var DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n  this.step = { months: 1 };\n  this.element = $element;\n  function getDaysInMonth(year, month) {\n    return ((month === 1) && (year % 4 === 0) && ((year % 100 !== 0) || (year % 400 === 0))) ? 29 : DAYS_IN_MONTH[month];\n  }\n\n  this.init = function(ctrl) {\n    angular.extend(ctrl, this);\n    scope.showWeeks = ctrl.showWeeks;\n    ctrl.refreshView();\n  };\n\n  this.getDates = function(startDate, n) {\n    var dates = new Array(n), current = new Date(startDate), i = 0, date;\n    while (i < n) {\n      date = new Date(current);\n      dates[i++] = date;\n      current.setDate(current.getDate() + 1);\n    }\n    return dates;\n  };\n\n  this._refreshView = function() {\n    var year = this.activeDate.getFullYear(),\n      month = this.activeDate.getMonth(),\n      firstDayOfMonth = new Date(this.activeDate);\n\n    firstDayOfMonth.setFullYear(year, month, 1);\n\n    var difference = this.startingDay - firstDayOfMonth.getDay(),\n      numDisplayedFromPreviousMonth = (difference > 0) ? 7 - difference : - difference,\n      firstDate = new Date(firstDayOfMonth);\n\n    if (numDisplayedFromPreviousMonth > 0) {\n      firstDate.setDate(-numDisplayedFromPreviousMonth + 1);\n    }\n\n    // 42 is the number of days on a six-month calendar\n    var days = this.getDates(firstDate, 42);\n    for (var i = 0; i < 42; i ++) {\n      days[i] = angular.extend(this.createDateObject(days[i], this.formatDay), {\n        secondary: days[i].getMonth() !== month,\n        uid: scope.uniqueId + '-' + i\n      });\n    }\n\n    scope.labels = new Array(7);\n    for (var j = 0; j < 7; j++) {\n      scope.labels[j] = {\n        abbr: dateFilter(days[j].date, this.formatDayHeader),\n        full: dateFilter(days[j].date, 'EEEE')\n      };\n    }\n\n    scope.title = dateFilter(this.activeDate, this.formatDayTitle);\n    scope.rows = this.split(days, 7);\n\n    if (scope.showWeeks) {\n      scope.weekNumbers = [];\n      var thursdayIndex = (4 + 7 - this.startingDay) % 7,\n          numWeeks = scope.rows.length;\n      for (var curWeek = 0; curWeek < numWeeks; curWeek++) {\n        scope.weekNumbers.push(\n          getISO8601WeekNumber(scope.rows[curWeek][thursdayIndex].date));\n      }\n    }\n  };\n\n  this.compare = function(date1, date2) {\n    return (new Date(date1.getFullYear(), date1.getMonth(), date1.getDate()) - new Date(date2.getFullYear(), date2.getMonth(), date2.getDate()));\n  };\n\n  function getISO8601WeekNumber(date) {\n    var checkDate = new Date(date);\n    checkDate.setDate(checkDate.getDate() + 4 - (checkDate.getDay() || 7)); // Thursday\n    var time = checkDate.getTime();\n    checkDate.setMonth(0); // Compare with Jan 1\n    checkDate.setDate(1);\n    return Math.floor(Math.round((time - checkDate) / 86400000) / 7) + 1;\n  }\n\n  this.handleKeyDown = function(key, evt) {\n    var date = this.activeDate.getDate();\n\n    if (key === 'left') {\n      date = date - 1;   // up\n    } else if (key === 'up') {\n      date = date - 7;   // down\n    } else if (key === 'right') {\n      date = date + 1;   // down\n    } else if (key === 'down') {\n      date = date + 7;\n    } else if (key === 'pageup' || key === 'pagedown') {\n      var month = this.activeDate.getMonth() + (key === 'pageup' ? - 1 : 1);\n      this.activeDate.setMonth(month, 1);\n      date = Math.min(getDaysInMonth(this.activeDate.getFullYear(), this.activeDate.getMonth()), date);\n    } else if (key === 'home') {\n      date = 1;\n    } else if (key === 'end') {\n      date = getDaysInMonth(this.activeDate.getFullYear(), this.activeDate.getMonth());\n    }\n    this.activeDate.setDate(date);\n  };\n}])\n\n.controller('UibMonthpickerController', ['$scope', '$element', 'dateFilter', function(scope, $element, dateFilter) {\n  this.step = { years: 1 };\n  this.element = $element;\n\n  this.init = function(ctrl) {\n    angular.extend(ctrl, this);\n    ctrl.refreshView();\n  };\n\n  this._refreshView = function() {\n    var months = new Array(12),\n        year = this.activeDate.getFullYear(),\n        date;\n\n    for (var i = 0; i < 12; i++) {\n      date = new Date(this.activeDate);\n      date.setFullYear(year, i, 1);\n      months[i] = angular.extend(this.createDateObject(date, this.formatMonth), {\n        uid: scope.uniqueId + '-' + i\n      });\n    }\n\n    scope.title = dateFilter(this.activeDate, this.formatMonthTitle);\n    scope.rows = this.split(months, 3);\n  };\n\n  this.compare = function(date1, date2) {\n    return new Date(date1.getFullYear(), date1.getMonth()) - new Date(date2.getFullYear(), date2.getMonth());\n  };\n\n  this.handleKeyDown = function(key, evt) {\n    var date = this.activeDate.getMonth();\n\n    if (key === 'left') {\n      date = date - 1;   // up\n    } else if (key === 'up') {\n      date = date - 3;   // down\n    } else if (key === 'right') {\n      date = date + 1;   // down\n    } else if (key === 'down') {\n      date = date + 3;\n    } else if (key === 'pageup' || key === 'pagedown') {\n      var year = this.activeDate.getFullYear() + (key === 'pageup' ? - 1 : 1);\n      this.activeDate.setFullYear(year);\n    } else if (key === 'home') {\n      date = 0;\n    } else if (key === 'end') {\n      date = 11;\n    }\n    this.activeDate.setMonth(date);\n  };\n}])\n\n.controller('UibYearpickerController', ['$scope', '$element', 'dateFilter', function(scope, $element, dateFilter) {\n  var range;\n  this.element = $element;\n\n  function getStartingYear(year) {\n    return parseInt((year - 1) / range, 10) * range + 1;\n  }\n\n  this.yearpickerInit = function() {\n    range = this.yearRange;\n    this.step = { years: range };\n  };\n\n  this._refreshView = function() {\n    var years = new Array(range), date;\n\n    for (var i = 0, start = getStartingYear(this.activeDate.getFullYear()); i < range; i++) {\n      date = new Date(this.activeDate);\n      date.setFullYear(start + i, 0, 1);\n      years[i] = angular.extend(this.createDateObject(date, this.formatYear), {\n        uid: scope.uniqueId + '-' + i\n      });\n    }\n\n    scope.title = [years[0].label, years[range - 1].label].join(' - ');\n    scope.rows = this.split(years, 5);\n  };\n\n  this.compare = function(date1, date2) {\n    return date1.getFullYear() - date2.getFullYear();\n  };\n\n  this.handleKeyDown = function(key, evt) {\n    var date = this.activeDate.getFullYear();\n\n    if (key === 'left') {\n      date = date - 1;   // up\n    } else if (key === 'up') {\n      date = date - 5;   // down\n    } else if (key === 'right') {\n      date = date + 1;   // down\n    } else if (key === 'down') {\n      date = date + 5;\n    } else if (key === 'pageup' || key === 'pagedown') {\n      date += (key === 'pageup' ? - 1 : 1) * this.step.years;\n    } else if (key === 'home') {\n      date = getStartingYear(this.activeDate.getFullYear());\n    } else if (key === 'end') {\n      date = getStartingYear(this.activeDate.getFullYear()) + range - 1;\n    }\n    this.activeDate.setFullYear(date);\n  };\n}])\n\n.directive('uibDatepicker', function() {\n  return {\n    replace: true,\n    templateUrl: function(element, attrs) {\n      return attrs.templateUrl || 'template/datepicker/datepicker.html';\n    },\n    scope: {\n      datepickerMode: '=?',\n      dateDisabled: '&',\n      customClass: '&',\n      shortcutPropagation: '&?'\n    },\n    require: ['uibDatepicker', '^ngModel'],\n    controller: 'UibDatepickerController',\n    controllerAs: 'datepicker',\n    link: function(scope, element, attrs, ctrls) {\n      var datepickerCtrl = ctrls[0], ngModelCtrl = ctrls[1];\n\n      datepickerCtrl.init(ngModelCtrl);\n    }\n  };\n})\n\n.directive('uibDaypicker', function() {\n  return {\n    replace: true,\n    templateUrl: function(element, attrs) {\n      return attrs.templateUrl || 'template/datepicker/day.html';\n    },\n    require: ['^?uibDatepicker', 'uibDaypicker', '^?datepicker'],\n    controller: 'UibDaypickerController',\n    link: function(scope, element, attrs, ctrls) {\n      var datepickerCtrl = ctrls[0] || ctrls[2],\n        daypickerCtrl = ctrls[1];\n\n      daypickerCtrl.init(datepickerCtrl);\n    }\n  };\n})\n\n.directive('uibMonthpicker', function() {\n  return {\n    replace: true,\n    templateUrl: function(element, attrs) {\n      return attrs.templateUrl || 'template/datepicker/month.html';\n    },\n    require: ['^?uibDatepicker', 'uibMonthpicker', '^?datepicker'],\n    controller: 'UibMonthpickerController',\n    link: function(scope, element, attrs, ctrls) {\n      var datepickerCtrl = ctrls[0] || ctrls[2],\n        monthpickerCtrl = ctrls[1];\n\n      monthpickerCtrl.init(datepickerCtrl);\n    }\n  };\n})\n\n.directive('uibYearpicker', function() {\n  return {\n    replace: true,\n    templateUrl: function(element, attrs) {\n      return attrs.templateUrl || 'template/datepicker/year.html';\n    },\n    require: ['^?uibDatepicker', 'uibYearpicker', '^?datepicker'],\n    controller: 'UibYearpickerController',\n    link: function(scope, element, attrs, ctrls) {\n      var ctrl = ctrls[0] || ctrls[2];\n      angular.extend(ctrl, ctrls[1]);\n      ctrl.yearpickerInit();\n\n      ctrl.refreshView();\n    }\n  };\n})\n\n.constant('uibDatepickerPopupConfig', {\n  datepickerPopup: 'yyyy-MM-dd',\n  datepickerPopupTemplateUrl: 'template/datepicker/popup.html',\n  datepickerTemplateUrl: 'template/datepicker/datepicker.html',\n  html5Types: {\n    date: 'yyyy-MM-dd',\n    'datetime-local': 'yyyy-MM-ddTHH:mm:ss.sss',\n    'month': 'yyyy-MM'\n  },\n  currentText: 'Today',\n  clearText: 'Clear',\n  closeText: 'Done',\n  closeOnDateSelection: true,\n  appendToBody: false,\n  showButtonBar: true,\n  onOpenFocus: true\n})\n\n.controller('UibDatepickerPopupController', ['$scope', '$element', '$attrs', '$compile', '$parse', '$document', '$rootScope', '$uibPosition', 'dateFilter', 'uibDateParser', 'uibDatepickerPopupConfig', '$timeout',\nfunction(scope, element, attrs, $compile, $parse, $document, $rootScope, $position, dateFilter, dateParser, datepickerPopupConfig, $timeout) {\n  var self = this;\n  var cache = {},\n    isHtml5DateInput = false;\n  var dateFormat, closeOnDateSelection, appendToBody, onOpenFocus,\n    datepickerPopupTemplateUrl, datepickerTemplateUrl, popupEl, datepickerEl,\n    ngModel, $popup;\n\n  scope.watchData = {};\n\n  this.init = function(_ngModel_) {\n    ngModel = _ngModel_;\n    closeOnDateSelection = angular.isDefined(attrs.closeOnDateSelection) ? scope.$parent.$eval(attrs.closeOnDateSelection) : datepickerPopupConfig.closeOnDateSelection;\n    appendToBody = angular.isDefined(attrs.datepickerAppendToBody) ? scope.$parent.$eval(attrs.datepickerAppendToBody) : datepickerPopupConfig.appendToBody;\n    onOpenFocus = angular.isDefined(attrs.onOpenFocus) ? scope.$parent.$eval(attrs.onOpenFocus) : datepickerPopupConfig.onOpenFocus;\n    datepickerPopupTemplateUrl = angular.isDefined(attrs.datepickerPopupTemplateUrl) ? attrs.datepickerPopupTemplateUrl : datepickerPopupConfig.datepickerPopupTemplateUrl;\n    datepickerTemplateUrl = angular.isDefined(attrs.datepickerTemplateUrl) ? attrs.datepickerTemplateUrl : datepickerPopupConfig.datepickerTemplateUrl;\n\n    scope.showButtonBar = angular.isDefined(attrs.showButtonBar) ? scope.$parent.$eval(attrs.showButtonBar) : datepickerPopupConfig.showButtonBar;\n\n    if (datepickerPopupConfig.html5Types[attrs.type]) {\n      dateFormat = datepickerPopupConfig.html5Types[attrs.type];\n      isHtml5DateInput = true;\n    } else {\n      dateFormat = attrs.datepickerPopup || attrs.uibDatepickerPopup || datepickerPopupConfig.datepickerPopup;\n      attrs.$observe('uibDatepickerPopup', function(value, oldValue) {\n          var newDateFormat = value || datepickerPopupConfig.datepickerPopup;\n          // Invalidate the $modelValue to ensure that formatters re-run\n          // FIXME: Refactor when PR is merged: https://github.com/angular/angular.js/pull/10764\n          if (newDateFormat !== dateFormat) {\n            dateFormat = newDateFormat;\n            ngModel.$modelValue = null;\n\n            if (!dateFormat) {\n              throw new Error('uibDatepickerPopup must have a date format specified.');\n            }\n          }\n      });\n    }\n\n    if (!dateFormat) {\n      throw new Error('uibDatepickerPopup must have a date format specified.');\n    }\n\n    if (isHtml5DateInput && attrs.datepickerPopup) {\n      throw new Error('HTML5 date input types do not support custom formats.');\n    }\n\n    // popup element used to display calendar\n    popupEl = angular.element('<div uib-datepicker-popup-wrap><div uib-datepicker></div></div>');\n    popupEl.attr({\n      'ng-model': 'date',\n      'ng-change': 'dateSelection(date)',\n      'template-url': datepickerPopupTemplateUrl\n    });\n\n    // datepicker element\n    datepickerEl = angular.element(popupEl.children()[0]);\n    datepickerEl.attr('template-url', datepickerTemplateUrl);\n\n    if (isHtml5DateInput) {\n      if (attrs.type === 'month') {\n        datepickerEl.attr('datepicker-mode', '\"month\"');\n        datepickerEl.attr('min-mode', 'month');\n      }\n    }\n\n    if (attrs.datepickerOptions) {\n      var options = scope.$parent.$eval(attrs.datepickerOptions);\n      if (options && options.initDate) {\n        scope.initDate = options.initDate;\n        datepickerEl.attr('init-date', 'initDate');\n        delete options.initDate;\n      }\n      angular.forEach(options, function(value, option) {\n        datepickerEl.attr(cameltoDash(option), value);\n      });\n    }\n\n    angular.forEach(['minMode', 'maxMode', 'minDate', 'maxDate', 'datepickerMode', 'initDate', 'shortcutPropagation'], function(key) {\n      if (attrs[key]) {\n        var getAttribute = $parse(attrs[key]);\n        scope.$parent.$watch(getAttribute, function(value) {\n          scope.watchData[key] = value;\n          if (key === 'minDate' || key === 'maxDate') {\n            cache[key] = new Date(value);\n          }\n        });\n        datepickerEl.attr(cameltoDash(key), 'watchData.' + key);\n\n        // Propagate changes from datepicker to outside\n        if (key === 'datepickerMode') {\n          var setAttribute = getAttribute.assign;\n          scope.$watch('watchData.' + key, function(value, oldvalue) {\n            if (angular.isFunction(setAttribute) && value !== oldvalue) {\n              setAttribute(scope.$parent, value);\n            }\n          });\n        }\n      }\n    });\n    if (attrs.dateDisabled) {\n      datepickerEl.attr('date-disabled', 'dateDisabled({ date: date, mode: mode })');\n    }\n\n    if (attrs.showWeeks) {\n      datepickerEl.attr('show-weeks', attrs.showWeeks);\n    }\n\n    if (attrs.customClass) {\n      datepickerEl.attr('custom-class', 'customClass({ date: date, mode: mode })');\n    }\n\n    if (!isHtml5DateInput) {\n      // Internal API to maintain the correct ng-invalid-[key] class\n      ngModel.$$parserName = 'date';\n      ngModel.$validators.date = validator;\n      ngModel.$parsers.unshift(parseDate);\n      ngModel.$formatters.push(function(value) {\n        scope.date = value;\n        return ngModel.$isEmpty(value) ? value : dateFilter(value, dateFormat);\n      });\n    } else {\n      ngModel.$formatters.push(function(value) {\n        scope.date = value;\n        return value;\n      });\n    }\n\n    // Detect changes in the view from the text box\n    ngModel.$viewChangeListeners.push(function() {\n      scope.date = dateParser.parse(ngModel.$viewValue, dateFormat, scope.date);\n    });\n\n    element.bind('keydown', inputKeydownBind);\n\n    $popup = $compile(popupEl)(scope);\n    // Prevent jQuery cache memory leak (template is now redundant after linking)\n    popupEl.remove();\n\n    if (appendToBody) {\n      $document.find('body').append($popup);\n    } else {\n      element.after($popup);\n    }\n\n    scope.$on('$destroy', function() {\n      if (scope.isOpen === true) {\n        if (!$rootScope.$$phase) {\n          scope.$apply(function() {\n            scope.isOpen = false;\n          });\n        }\n      }\n\n      $popup.remove();\n      element.unbind('keydown', inputKeydownBind);\n      $document.unbind('click', documentClickBind);\n    });\n  };\n\n  scope.getText = function(key) {\n    return scope[key + 'Text'] || datepickerPopupConfig[key + 'Text'];\n  };\n\n  scope.isDisabled = function(date) {\n    if (date === 'today') {\n      date = new Date();\n    }\n\n    return ((scope.watchData.minDate && scope.compare(date, cache.minDate) < 0) ||\n      (scope.watchData.maxDate && scope.compare(date, cache.maxDate) > 0));\n  };\n\n  scope.compare = function(date1, date2) {\n    return (new Date(date1.getFullYear(), date1.getMonth(), date1.getDate()) - new Date(date2.getFullYear(), date2.getMonth(), date2.getDate()));\n  };\n\n  // Inner change\n  scope.dateSelection = function(dt) {\n    if (angular.isDefined(dt)) {\n      scope.date = dt;\n    }\n    var date = scope.date ? dateFilter(scope.date, dateFormat) : null; // Setting to NULL is necessary for form validators to function\n    element.val(date);\n    ngModel.$setViewValue(date);\n\n    if (closeOnDateSelection) {\n      scope.isOpen = false;\n      element[0].focus();\n    }\n  };\n\n  scope.keydown = function(evt) {\n    if (evt.which === 27) {\n      scope.isOpen = false;\n      element[0].focus();\n    }\n  };\n\n  scope.select = function(date) {\n    if (date === 'today') {\n      var today = new Date();\n      if (angular.isDate(scope.date)) {\n        date = new Date(scope.date);\n        date.setFullYear(today.getFullYear(), today.getMonth(), today.getDate());\n      } else {\n        date = new Date(today.setHours(0, 0, 0, 0));\n      }\n    }\n    scope.dateSelection(date);\n  };\n\n  scope.close = function() {\n    scope.isOpen = false;\n    element[0].focus();\n  };\n\n  scope.$watch('isOpen', function(value) {\n    if (value) {\n      scope.position = appendToBody ? $position.offset(element) : $position.position(element);\n      scope.position.top = scope.position.top + element.prop('offsetHeight');\n\n      $timeout(function() {\n        if (onOpenFocus) {\n          scope.$broadcast('uib:datepicker.focus');\n        }\n        $document.bind('click', documentClickBind);\n      }, 0, false);\n    } else {\n      $document.unbind('click', documentClickBind);\n    }\n  });\n\n  function cameltoDash(string) {\n    return string.replace(/([A-Z])/g, function($1) { return '-' + $1.toLowerCase(); });\n  }\n\n  function parseDate(viewValue) {\n    if (angular.isNumber(viewValue)) {\n      // presumably timestamp to date object\n      viewValue = new Date(viewValue);\n    }\n\n    if (!viewValue) {\n      return null;\n    } else if (angular.isDate(viewValue) && !isNaN(viewValue)) {\n      return viewValue;\n    } else if (angular.isString(viewValue)) {\n      var date = dateParser.parse(viewValue, dateFormat, scope.date);\n      if (isNaN(date)) {\n        return undefined;\n      } else {\n        return date;\n      }\n    } else {\n      return undefined;\n    }\n  }\n\n  function validator(modelValue, viewValue) {\n    var value = modelValue || viewValue;\n\n    if (!attrs.ngRequired && !value) {\n      return true;\n    }\n\n    if (angular.isNumber(value)) {\n      value = new Date(value);\n    }\n    if (!value) {\n      return true;\n    } else if (angular.isDate(value) && !isNaN(value)) {\n      return true;\n    } else if (angular.isString(value)) {\n      var date = dateParser.parse(value, dateFormat);\n      return !isNaN(date);\n    } else {\n      return false;\n    }\n  }\n\n  function documentClickBind(event) {\n    var popup = $popup[0];\n    var dpContainsTarget = element[0].contains(event.target);\n    // The popup node may not be an element node\n    // In some browsers (IE) only element nodes have the 'contains' function\n    var popupContainsTarget = popup.contains !== undefined && popup.contains(event.target);\n    if (scope.isOpen && !(dpContainsTarget || popupContainsTarget)) {\n      scope.$apply(function() {\n        scope.isOpen = false;\n      });\n    }\n  }\n\n  function inputKeydownBind(evt) {\n    if (evt.which === 27 && scope.isOpen) {\n      evt.preventDefault();\n      evt.stopPropagation();\n      scope.$apply(function() {\n        scope.isOpen = false;\n      });\n      element[0].focus();\n    } else if (evt.which === 40 && !scope.isOpen) {\n      evt.preventDefault();\n      evt.stopPropagation();\n      scope.$apply(function() {\n        scope.isOpen = true;\n      });\n    }\n  }\n}])\n\n.directive('uibDatepickerPopup', function() {\n  return {\n    require: ['ngModel', 'uibDatepickerPopup'],\n    controller: 'UibDatepickerPopupController',\n    scope: {\n      isOpen: '=?',\n      currentText: '@',\n      clearText: '@',\n      closeText: '@',\n      dateDisabled: '&',\n      customClass: '&'\n    },\n    link: function(scope, element, attrs, ctrls) {\n      var ngModel = ctrls[0],\n        ctrl = ctrls[1];\n\n      ctrl.init(ngModel);\n    }\n  };\n})\n\n.directive('uibDatepickerPopupWrap', function() {\n  return {\n    replace: true,\n    transclude: true,\n    templateUrl: function(element, attrs) {\n      return attrs.templateUrl || 'template/datepicker/popup.html';\n    }\n  };\n});\n\n/* Deprecated datepicker below */\n\nangular.module('ui.bootstrap.datepicker')\n\n.value('$datepickerSuppressWarning', false)\n\n.controller('DatepickerController', ['$scope', '$attrs', '$parse', '$interpolate', '$log', 'dateFilter', 'uibDatepickerConfig', '$datepickerSuppressError', '$datepickerSuppressWarning', function($scope, $attrs, $parse, $interpolate, $log, dateFilter, datepickerConfig, $datepickerSuppressError, $datepickerSuppressWarning) {\n  if (!$datepickerSuppressWarning) {\n    $log.warn('DatepickerController is now deprecated. Use UibDatepickerController instead.');\n  }\n\n  var self = this,\n    ngModelCtrl = { $setViewValue: angular.noop }; // nullModelCtrl;\n\n  this.modes = ['day', 'month', 'year'];\n\n  angular.forEach(['formatDay', 'formatMonth', 'formatYear', 'formatDayHeader', 'formatDayTitle', 'formatMonthTitle',\n    'showWeeks', 'startingDay', 'yearRange', 'shortcutPropagation'], function(key, index) {\n    self[key] = angular.isDefined($attrs[key]) ? (index < 6 ? $interpolate($attrs[key])($scope.$parent) : $scope.$parent.$eval($attrs[key])) : datepickerConfig[key];\n  });\n\n  angular.forEach(['minDate', 'maxDate'], function(key) {\n    if ($attrs[key]) {\n      $scope.$parent.$watch($parse($attrs[key]), function(value) {\n        self[key] = value ? new Date(value) : null;\n        self.refreshView();\n      });\n    } else {\n      self[key] = datepickerConfig[key] ? new Date(datepickerConfig[key]) : null;\n    }\n  });\n\n  angular.forEach(['minMode', 'maxMode'], function(key) {\n    if ($attrs[key]) {\n      $scope.$parent.$watch($parse($attrs[key]), function(value) {\n        self[key] = angular.isDefined(value) ? value : $attrs[key];\n        $scope[key] = self[key];\n        if ((key == 'minMode' && self.modes.indexOf($scope.datepickerMode) < self.modes.indexOf(self[key])) || (key == 'maxMode' && self.modes.indexOf($scope.datepickerMode) > self.modes.indexOf(self[key]))) {\n          $scope.datepickerMode = self[key];\n        }\n      });\n    } else {\n      self[key] = datepickerConfig[key] || null;\n      $scope[key] = self[key];\n    }\n  });\n\n  $scope.datepickerMode = $scope.datepickerMode || datepickerConfig.datepickerMode;\n  $scope.uniqueId = 'datepicker-' + $scope.$id + '-' + Math.floor(Math.random() * 10000);\n\n  if (angular.isDefined($attrs.initDate)) {\n    this.activeDate = $scope.$parent.$eval($attrs.initDate) || new Date();\n    $scope.$parent.$watch($attrs.initDate, function(initDate) {\n      if (initDate && (ngModelCtrl.$isEmpty(ngModelCtrl.$modelValue) || ngModelCtrl.$invalid)) {\n        self.activeDate = initDate;\n        self.refreshView();\n      }\n    });\n  } else {\n    this.activeDate = new Date();\n  }\n\n  $scope.isActive = function(dateObject) {\n    if (self.compare(dateObject.date, self.activeDate) === 0) {\n      $scope.activeDateId = dateObject.uid;\n      return true;\n    }\n    return false;\n  };\n\n  this.init = function(ngModelCtrl_) {\n    ngModelCtrl = ngModelCtrl_;\n\n    ngModelCtrl.$render = function() {\n      self.render();\n    };\n  };\n\n  this.render = function() {\n    if (ngModelCtrl.$viewValue) {\n      var date = new Date(ngModelCtrl.$viewValue),\n        isValid = !isNaN(date);\n\n      if (isValid) {\n        this.activeDate = date;\n      } else if (!$datepickerSuppressError) {\n        $log.error('Datepicker directive: \"ng-model\" value must be a Date object, a number of milliseconds since 01.01.1970 or a string representing an RFC2822 or ISO 8601 date.');\n      }\n    }\n    this.refreshView();\n  };\n\n  this.refreshView = function() {\n    if (this.element) {\n      this._refreshView();\n\n      var date = ngModelCtrl.$viewValue ? new Date(ngModelCtrl.$viewValue) : null;\n      ngModelCtrl.$setValidity('dateDisabled', !date || (this.element && !this.isDisabled(date)));\n    }\n  };\n\n  this.createDateObject = function(date, format) {\n    var model = ngModelCtrl.$viewValue ? new Date(ngModelCtrl.$viewValue) : null;\n    return {\n      date: date,\n      label: dateFilter(date, format),\n      selected: model && this.compare(date, model) === 0,\n      disabled: this.isDisabled(date),\n      current: this.compare(date, new Date()) === 0,\n      customClass: this.customClass(date)\n    };\n  };\n\n  this.isDisabled = function(date) {\n    return ((this.minDate && this.compare(date, this.minDate) < 0) || (this.maxDate && this.compare(date, this.maxDate) > 0) || ($attrs.dateDisabled && $scope.dateDisabled({date: date, mode: $scope.datepickerMode})));\n  };\n\n  this.customClass = function(date) {\n    return $scope.customClass({date: date, mode: $scope.datepickerMode});\n  };\n\n  // Split array into smaller arrays\n  this.split = function(arr, size) {\n    var arrays = [];\n    while (arr.length > 0) {\n      arrays.push(arr.splice(0, size));\n    }\n    return arrays;\n  };\n\n  this.fixTimeZone = function(date) {\n    var hours = date.getHours();\n    date.setHours(hours === 23 ? hours + 2 : 0);\n  };\n\n  $scope.select = function(date) {\n    if ($scope.datepickerMode === self.minMode) {\n      var dt = ngModelCtrl.$viewValue ? new Date(ngModelCtrl.$viewValue) : new Date(0, 0, 0, 0, 0, 0, 0);\n      dt.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n      ngModelCtrl.$setViewValue(dt);\n      ngModelCtrl.$render();\n    } else {\n      self.activeDate = date;\n      $scope.datepickerMode = self.modes[self.modes.indexOf($scope.datepickerMode) - 1];\n    }\n  };\n\n  $scope.move = function(direction) {\n    var year = self.activeDate.getFullYear() + direction * (self.step.years || 0),\n      month = self.activeDate.getMonth() + direction * (self.step.months || 0);\n    self.activeDate.setFullYear(year, month, 1);\n    self.refreshView();\n  };\n\n  $scope.toggleMode = function(direction) {\n    direction = direction || 1;\n\n    if (($scope.datepickerMode === self.maxMode && direction === 1) || ($scope.datepickerMode === self.minMode && direction === -1)) {\n      return;\n    }\n\n    $scope.datepickerMode = self.modes[self.modes.indexOf($scope.datepickerMode) + direction];\n  };\n\n  // Key event mapper\n  $scope.keys = { 13: 'enter', 32: 'space', 33: 'pageup', 34: 'pagedown', 35: 'end', 36: 'home', 37: 'left', 38: 'up', 39: 'right', 40: 'down' };\n\n  var focusElement = function() {\n    self.element[0].focus();\n  };\n\n  $scope.$on('uib:datepicker.focus', focusElement);\n\n  $scope.keydown = function(evt) {\n    var key = $scope.keys[evt.which];\n\n    if (!key || evt.shiftKey || evt.altKey) {\n      return;\n    }\n\n    evt.preventDefault();\n    if (!self.shortcutPropagation) {\n      evt.stopPropagation();\n    }\n\n    if (key === 'enter' || key === 'space') {\n      if (self.isDisabled(self.activeDate)) {\n        return; // do nothing\n      }\n      $scope.select(self.activeDate);\n    } else if (evt.ctrlKey && (key === 'up' || key === 'down')) {\n      $scope.toggleMode(key === 'up' ? 1 : -1);\n    } else {\n      self.handleKeyDown(key, evt);\n      self.refreshView();\n    }\n  };\n}])\n\n.directive('datepicker', ['$log', '$datepickerSuppressWarning', function($log, $datepickerSuppressWarning) {\n  return {\n    replace: true,\n    templateUrl: function(element, attrs) {\n      return attrs.templateUrl || 'template/datepicker/datepicker.html';\n    },\n    scope: {\n      datepickerMode: '=?',\n      dateDisabled: '&',\n      customClass: '&',\n      shortcutPropagation: '&?'\n    },\n    require: ['datepicker', '^ngModel'],\n    controller: 'DatepickerController',\n    controllerAs: 'datepicker',\n    link: function(scope, element, attrs, ctrls) {\n      if (!$datepickerSuppressWarning) {\n        $log.warn('datepicker is now deprecated. Use uib-datepicker instead.');\n      }\n\n      var datepickerCtrl = ctrls[0], ngModelCtrl = ctrls[1];\n\n      datepickerCtrl.init(ngModelCtrl);\n    }\n  };\n}])\n\n.directive('daypicker', ['$log', '$datepickerSuppressWarning', function($log, $datepickerSuppressWarning) {\n  return {\n    replace: true,\n    templateUrl: 'template/datepicker/day.html',\n    require: ['^datepicker', 'daypicker'],\n    controller: 'UibDaypickerController',\n    link: function(scope, element, attrs, ctrls) {\n      if (!$datepickerSuppressWarning) {\n        $log.warn('daypicker is now deprecated. Use uib-daypicker instead.');\n      }\n\n      var datepickerCtrl = ctrls[0],\n        daypickerCtrl = ctrls[1];\n\n      daypickerCtrl.init(datepickerCtrl);\n    }\n  };\n}])\n\n.directive('monthpicker', ['$log', '$datepickerSuppressWarning', function($log, $datepickerSuppressWarning) {\n  return {\n    replace: true,\n    templateUrl: 'template/datepicker/month.html',\n    require: ['^datepicker', 'monthpicker'],\n    controller: 'UibMonthpickerController',\n    link: function(scope, element, attrs, ctrls) {\n      if (!$datepickerSuppressWarning) {\n        $log.warn('monthpicker is now deprecated. Use uib-monthpicker instead.');\n      }\n\n      var datepickerCtrl = ctrls[0],\n        monthpickerCtrl = ctrls[1];\n\n      monthpickerCtrl.init(datepickerCtrl);\n    }\n  };\n}])\n\n.directive('yearpicker', ['$log', '$datepickerSuppressWarning', function($log, $datepickerSuppressWarning) {\n  return {\n    replace: true,\n    templateUrl: 'template/datepicker/year.html',\n    require: ['^datepicker', 'yearpicker'],\n    controller: 'UibYearpickerController',\n    link: function(scope, element, attrs, ctrls) {\n      if (!$datepickerSuppressWarning) {\n        $log.warn('yearpicker is now deprecated. Use uib-yearpicker instead.');\n      }\n\n      var ctrl = ctrls[0];\n      angular.extend(ctrl, ctrls[1]);\n      ctrl.yearpickerInit();\n\n      ctrl.refreshView();\n    }\n  };\n}])\n\n.directive('datepickerPopup', ['$log', '$datepickerSuppressWarning', function($log, $datepickerSuppressWarning) {\n  return {\n    require: ['ngModel', 'datepickerPopup'],\n    controller: 'UibDatepickerPopupController',\n    scope: {\n      isOpen: '=?',\n      currentText: '@',\n      clearText: '@',\n      closeText: '@',\n      dateDisabled: '&',\n      customClass: '&'\n    },\n    link: function(scope, element, attrs, ctrls) {\n      if (!$datepickerSuppressWarning) {\n        $log.warn('datepicker-popup is now deprecated. Use uib-datepicker-popup instead.');\n      }\n\n      var ngModel = ctrls[0],\n        ctrl = ctrls[1];\n\n      ctrl.init(ngModel);\n    }\n  };\n}])\n\n.directive('datepickerPopupWrap', ['$log', '$datepickerSuppressWarning', function($log, $datepickerSuppressWarning) {\n  return {\n    replace: true,\n    transclude: true,\n    templateUrl: function(element, attrs) {\n      return attrs.templateUrl || 'template/datepicker/popup.html';\n    },\n    link: function() {\n      if (!$datepickerSuppressWarning) {\n        $log.warn('datepicker-popup-wrap is now deprecated. Use uib-datepicker-popup-wrap instead.');\n      }\n    }\n  };\n}]);\n\nangular.module('ui.bootstrap.dropdown', ['ui.bootstrap.position'])\n\n.constant('uibDropdownConfig', {\n  openClass: 'open'\n})\n\n.service('uibDropdownService', ['$document', '$rootScope', function($document, $rootScope) {\n  var openScope = null;\n\n  this.open = function(dropdownScope) {\n    if (!openScope) {\n      $document.bind('click', closeDropdown);\n      $document.bind('keydown', keybindFilter);\n    }\n\n    if (openScope && openScope !== dropdownScope) {\n      openScope.isOpen = false;\n    }\n\n    openScope = dropdownScope;\n  };\n\n  this.close = function(dropdownScope) {\n    if (openScope === dropdownScope) {\n      openScope = null;\n      $document.unbind('click', closeDropdown);\n      $document.unbind('keydown', keybindFilter);\n    }\n  };\n\n  var closeDropdown = function(evt) {\n    // This method may still be called during the same mouse event that\n    // unbound this event handler. So check openScope before proceeding.\n    if (!openScope) { return; }\n\n    if (evt && openScope.getAutoClose() === 'disabled')  { return ; }\n\n    var toggleElement = openScope.getToggleElement();\n    if (evt && toggleElement && toggleElement[0].contains(evt.target)) {\n      return;\n    }\n\n    var dropdownElement = openScope.getDropdownElement();\n    if (evt && openScope.getAutoClose() === 'outsideClick' &&\n      dropdownElement && dropdownElement[0].contains(evt.target)) {\n      return;\n    }\n\n    openScope.isOpen = false;\n\n    if (!$rootScope.$$phase) {\n      openScope.$apply();\n    }\n  };\n\n  var keybindFilter = function(evt) {\n    if (evt.which === 27) {\n      openScope.focusToggleElement();\n      closeDropdown();\n    } else if (openScope.isKeynavEnabled() && /(38|40)/.test(evt.which) && openScope.isOpen) {\n      evt.preventDefault();\n      evt.stopPropagation();\n      openScope.focusDropdownEntry(evt.which);\n    }\n  };\n}])\n\n.controller('UibDropdownController', ['$scope', '$element', '$attrs', '$parse', 'uibDropdownConfig', 'uibDropdownService', '$animate', '$uibPosition', '$document', '$compile', '$templateRequest', function($scope, $element, $attrs, $parse, dropdownConfig, uibDropdownService, $animate, $position, $document, $compile, $templateRequest) {\n  var self = this,\n    scope = $scope.$new(), // create a child scope so we are not polluting original one\n    templateScope,\n    openClass = dropdownConfig.openClass,\n    getIsOpen,\n    setIsOpen = angular.noop,\n    toggleInvoker = $attrs.onToggle ? $parse($attrs.onToggle) : angular.noop,\n    appendToBody = false,\n    keynavEnabled =false,\n    selectedOption = null;\n\n\n  $element.addClass('dropdown');\n\n  this.init = function() {\n    if ($attrs.isOpen) {\n      getIsOpen = $parse($attrs.isOpen);\n      setIsOpen = getIsOpen.assign;\n\n      $scope.$watch(getIsOpen, function(value) {\n        scope.isOpen = !!value;\n      });\n    }\n\n    appendToBody = angular.isDefined($attrs.dropdownAppendToBody);\n    keynavEnabled = angular.isDefined($attrs.uibKeyboardNav);\n\n    if (appendToBody && self.dropdownMenu) {\n      $document.find('body').append(self.dropdownMenu);\n      $element.on('$destroy', function handleDestroyEvent() {\n        self.dropdownMenu.remove();\n      });\n    }\n  };\n\n  this.toggle = function(open) {\n    return scope.isOpen = arguments.length ? !!open : !scope.isOpen;\n  };\n\n  // Allow other directives to watch status\n  this.isOpen = function() {\n    return scope.isOpen;\n  };\n\n  scope.getToggleElement = function() {\n    return self.toggleElement;\n  };\n\n  scope.getAutoClose = function() {\n    return $attrs.autoClose || 'always'; //or 'outsideClick' or 'disabled'\n  };\n\n  scope.getElement = function() {\n    return $element;\n  };\n\n  scope.isKeynavEnabled = function() {\n    return keynavEnabled;\n  };\n\n  scope.focusDropdownEntry = function(keyCode) {\n    var elems = self.dropdownMenu ? //If append to body is used.\n      (angular.element(self.dropdownMenu).find('a')) :\n      (angular.element($element).find('ul').eq(0).find('a'));\n\n    switch (keyCode) {\n      case (40): {\n        if (!angular.isNumber(self.selectedOption)) {\n          self.selectedOption = 0;\n        } else {\n          self.selectedOption = (self.selectedOption === elems.length - 1 ?\n            self.selectedOption :\n            self.selectedOption + 1);\n        }\n        break;\n      }\n      case (38): {\n        if (!angular.isNumber(self.selectedOption)) {\n          self.selectedOption = elems.length - 1;\n        } else {\n          self.selectedOption = self.selectedOption === 0 ?\n            0 : self.selectedOption - 1;\n        }\n        break;\n      }\n    }\n    elems[self.selectedOption].focus();\n  };\n\n  scope.getDropdownElement = function() {\n    return self.dropdownMenu;\n  };\n\n  scope.focusToggleElement = function() {\n    if (self.toggleElement) {\n      self.toggleElement[0].focus();\n    }\n  };\n\n  scope.$watch('isOpen', function(isOpen, wasOpen) {\n    if (appendToBody && self.dropdownMenu) {\n      var pos = $position.positionElements($element, self.dropdownMenu, 'bottom-left', true);\n      var css = {\n        top: pos.top + 'px',\n        display: isOpen ? 'block' : 'none'\n      };\n\n      var rightalign = self.dropdownMenu.hasClass('dropdown-menu-right');\n      if (!rightalign) {\n        css.left = pos.left + 'px';\n        css.right = 'auto';\n      } else {\n        css.left = 'auto';\n        css.right = (window.innerWidth - (pos.left + $element.prop('offsetWidth'))) + 'px';\n      }\n\n      self.dropdownMenu.css(css);\n    }\n\n    $animate[isOpen ? 'addClass' : 'removeClass']($element, openClass).then(function() {\n      if (angular.isDefined(isOpen) && isOpen !== wasOpen) {\n        toggleInvoker($scope, { open: !!isOpen });\n      }\n    });\n\n    if (isOpen) {\n      if (self.dropdownMenuTemplateUrl) {\n        $templateRequest(self.dropdownMenuTemplateUrl).then(function(tplContent) {\n          templateScope = scope.$new();\n          $compile(tplContent.trim())(templateScope, function(dropdownElement) {\n            var newEl = dropdownElement;\n            self.dropdownMenu.replaceWith(newEl);\n            self.dropdownMenu = newEl;\n          });\n        });\n      }\n\n      scope.focusToggleElement();\n      uibDropdownService.open(scope);\n    } else {\n      if (self.dropdownMenuTemplateUrl) {\n        if (templateScope) {\n          templateScope.$destroy();\n        }\n        var newEl = angular.element('<ul class=\"dropdown-menu\"></ul>');\n        self.dropdownMenu.replaceWith(newEl);\n        self.dropdownMenu = newEl;\n      }\n\n      uibDropdownService.close(scope);\n      self.selectedOption = null;\n    }\n\n    if (angular.isFunction(setIsOpen)) {\n      setIsOpen($scope, isOpen);\n    }\n  });\n\n  $scope.$on('$locationChangeSuccess', function() {\n    if (scope.getAutoClose() !== 'disabled') {\n      scope.isOpen = false;\n    }\n  });\n\n  var offDestroy = $scope.$on('$destroy', function() {\n    scope.$destroy();\n  });\n  scope.$on('$destroy', offDestroy);\n}])\n\n.directive('uibDropdown', function() {\n  return {\n    controller: 'UibDropdownController',\n    link: function(scope, element, attrs, dropdownCtrl) {\n      dropdownCtrl.init();\n    }\n  };\n})\n\n.directive('uibDropdownMenu', function() {\n  return {\n    restrict: 'AC',\n    require: '?^uibDropdown',\n    link: function(scope, element, attrs, dropdownCtrl) {\n      if (!dropdownCtrl || angular.isDefined(attrs.dropdownNested)) {\n        return;\n      }\n\n      element.addClass('dropdown-menu');\n\n      var tplUrl = attrs.templateUrl;\n      if (tplUrl) {\n        dropdownCtrl.dropdownMenuTemplateUrl = tplUrl;\n      }\n\n      if (!dropdownCtrl.dropdownMenu) {\n        dropdownCtrl.dropdownMenu = element;\n      }\n    }\n  };\n})\n\n.directive('uibKeyboardNav', function() {\n  return {\n    restrict: 'A',\n    require: '?^uibDropdown',\n    link: function(scope, element, attrs, dropdownCtrl) {\n      element.bind('keydown', function(e) {\n        if ([38, 40].indexOf(e.which) !== -1) {\n          e.preventDefault();\n          e.stopPropagation();\n\n          var elems = dropdownCtrl.dropdownMenu.find('a');\n\n          switch (e.which) {\n            case (40): { // Down\n              if (!angular.isNumber(dropdownCtrl.selectedOption)) {\n                dropdownCtrl.selectedOption = 0;\n              } else {\n                dropdownCtrl.selectedOption = dropdownCtrl.selectedOption === elems.length -1 ?\n                  dropdownCtrl.selectedOption : dropdownCtrl.selectedOption + 1;\n              }\n              break;\n            }\n            case (38): { // Up\n              if (!angular.isNumber(dropdownCtrl.selectedOption)) {\n                dropdownCtrl.selectedOption = elems.length - 1;\n              } else {\n                dropdownCtrl.selectedOption = dropdownCtrl.selectedOption === 0 ?\n                  0 : dropdownCtrl.selectedOption - 1;\n              }\n              break;\n            }\n          }\n          elems[dropdownCtrl.selectedOption].focus();\n        }\n      });\n    }\n  };\n})\n\n.directive('uibDropdownToggle', function() {\n  return {\n    require: '?^uibDropdown',\n    link: function(scope, element, attrs, dropdownCtrl) {\n      if (!dropdownCtrl) {\n        return;\n      }\n\n      element.addClass('dropdown-toggle');\n\n      dropdownCtrl.toggleElement = element;\n\n      var toggleDropdown = function(event) {\n        event.preventDefault();\n\n        if (!element.hasClass('disabled') && !attrs.disabled) {\n          scope.$apply(function() {\n            dropdownCtrl.toggle();\n          });\n        }\n      };\n\n      element.bind('click', toggleDropdown);\n\n      // WAI-ARIA\n      element.attr({ 'aria-haspopup': true, 'aria-expanded': false });\n      scope.$watch(dropdownCtrl.isOpen, function(isOpen) {\n        element.attr('aria-expanded', !!isOpen);\n      });\n\n      scope.$on('$destroy', function() {\n        element.unbind('click', toggleDropdown);\n      });\n    }\n  };\n});\n\n/* Deprecated dropdown below */\n\nangular.module('ui.bootstrap.dropdown')\n\n.value('$dropdownSuppressWarning', false)\n\n.service('dropdownService', ['$log', '$dropdownSuppressWarning', 'uibDropdownService', function($log, $dropdownSuppressWarning, uibDropdownService) {\n  if (!$dropdownSuppressWarning) {\n    $log.warn('dropdownService is now deprecated. Use uibDropdownService instead.');\n  }\n\n  angular.extend(this, uibDropdownService);\n}])\n\n.controller('DropdownController', ['$scope', '$element', '$attrs', '$parse', 'uibDropdownConfig', 'uibDropdownService', '$animate', '$uibPosition', '$document', '$compile', '$templateRequest', '$log', '$dropdownSuppressWarning', function($scope, $element, $attrs, $parse, dropdownConfig, uibDropdownService, $animate, $position, $document, $compile, $templateRequest, $log, $dropdownSuppressWarning) {\n  if (!$dropdownSuppressWarning) {\n    $log.warn('DropdownController is now deprecated. Use UibDropdownController instead.');\n  }\n\n  var self = this,\n    scope = $scope.$new(), // create a child scope so we are not polluting original one\n    templateScope,\n    openClass = dropdownConfig.openClass,\n    getIsOpen,\n    setIsOpen = angular.noop,\n    toggleInvoker = $attrs.onToggle ? $parse($attrs.onToggle) : angular.noop,\n    appendToBody = false,\n    keynavEnabled =false,\n    selectedOption = null;\n\n\n  $element.addClass('dropdown');\n\n  this.init = function() {\n    if ($attrs.isOpen) {\n      getIsOpen = $parse($attrs.isOpen);\n      setIsOpen = getIsOpen.assign;\n\n      $scope.$watch(getIsOpen, function(value) {\n        scope.isOpen = !!value;\n      });\n    }\n\n    appendToBody = angular.isDefined($attrs.dropdownAppendToBody);\n    keynavEnabled = angular.isDefined($attrs.uibKeyboardNav);\n\n    if (appendToBody && self.dropdownMenu) {\n      $document.find('body').append(self.dropdownMenu);\n      $element.on('$destroy', function handleDestroyEvent() {\n        self.dropdownMenu.remove();\n      });\n    }\n  };\n\n  this.toggle = function(open) {\n    return scope.isOpen = arguments.length ? !!open : !scope.isOpen;\n  };\n\n  // Allow other directives to watch status\n  this.isOpen = function() {\n    return scope.isOpen;\n  };\n\n  scope.getToggleElement = function() {\n    return self.toggleElement;\n  };\n\n  scope.getAutoClose = function() {\n    return $attrs.autoClose || 'always'; //or 'outsideClick' or 'disabled'\n  };\n\n  scope.getElement = function() {\n    return $element;\n  };\n\n  scope.isKeynavEnabled = function() {\n    return keynavEnabled;\n  };\n\n  scope.focusDropdownEntry = function(keyCode) {\n    var elems = self.dropdownMenu ? //If append to body is used.\n      (angular.element(self.dropdownMenu).find('a')) :\n      (angular.element($element).find('ul').eq(0).find('a'));\n\n    switch (keyCode) {\n      case (40): {\n        if (!angular.isNumber(self.selectedOption)) {\n          self.selectedOption = 0;\n        } else {\n          self.selectedOption = (self.selectedOption === elems.length -1 ?\n            self.selectedOption :\n          self.selectedOption + 1);\n        }\n        break;\n      }\n      case (38): {\n        if (!angular.isNumber(self.selectedOption)) {\n          self.selectedOption = elems.length - 1;\n        } else {\n          self.selectedOption = self.selectedOption === 0 ?\n            0 : self.selectedOption - 1;\n        }\n        break;\n      }\n    }\n    elems[self.selectedOption].focus();\n  };\n\n  scope.getDropdownElement = function() {\n    return self.dropdownMenu;\n  };\n\n  scope.focusToggleElement = function() {\n    if (self.toggleElement) {\n      self.toggleElement[0].focus();\n    }\n  };\n\n  scope.$watch('isOpen', function(isOpen, wasOpen) {\n    if (appendToBody && self.dropdownMenu) {\n      var pos = $position.positionElements($element, self.dropdownMenu, 'bottom-left', true);\n      var css = {\n        top: pos.top + 'px',\n        display: isOpen ? 'block' : 'none'\n      };\n\n      var rightalign = self.dropdownMenu.hasClass('dropdown-menu-right');\n      if (!rightalign) {\n        css.left = pos.left + 'px';\n        css.right = 'auto';\n      } else {\n        css.left = 'auto';\n        css.right = (window.innerWidth - (pos.left + $element.prop('offsetWidth'))) + 'px';\n      }\n\n      self.dropdownMenu.css(css);\n    }\n\n    $animate[isOpen ? 'addClass' : 'removeClass']($element, openClass).then(function() {\n      if (angular.isDefined(isOpen) && isOpen !== wasOpen) {\n        toggleInvoker($scope, { open: !!isOpen });\n      }\n    });\n\n    if (isOpen) {\n      if (self.dropdownMenuTemplateUrl) {\n        $templateRequest(self.dropdownMenuTemplateUrl).then(function(tplContent) {\n          templateScope = scope.$new();\n          $compile(tplContent.trim())(templateScope, function(dropdownElement) {\n            var newEl = dropdownElement;\n            self.dropdownMenu.replaceWith(newEl);\n            self.dropdownMenu = newEl;\n          });\n        });\n      }\n\n      scope.focusToggleElement();\n      uibDropdownService.open(scope);\n    } else {\n      if (self.dropdownMenuTemplateUrl) {\n        if (templateScope) {\n          templateScope.$destroy();\n        }\n        var newEl = angular.element('<ul class=\"dropdown-menu\"></ul>');\n        self.dropdownMenu.replaceWith(newEl);\n        self.dropdownMenu = newEl;\n      }\n\n      uibDropdownService.close(scope);\n      self.selectedOption = null;\n    }\n\n    if (angular.isFunction(setIsOpen)) {\n      setIsOpen($scope, isOpen);\n    }\n  });\n\n  $scope.$on('$locationChangeSuccess', function() {\n    if (scope.getAutoClose() !== 'disabled') {\n      scope.isOpen = false;\n    }\n  });\n\n  var offDestroy = $scope.$on('$destroy', function() {\n    scope.$destroy();\n  });\n  scope.$on('$destroy', offDestroy);\n}])\n\n.directive('dropdown', ['$log', '$dropdownSuppressWarning', function($log, $dropdownSuppressWarning) {\n  return {\n    controller: 'DropdownController',\n    link: function(scope, element, attrs, dropdownCtrl) {\n      if (!$dropdownSuppressWarning) {\n        $log.warn('dropdown is now deprecated. Use uib-dropdown instead.');\n      }\n\n      dropdownCtrl.init();\n    }\n  };\n}])\n\n.directive('dropdownMenu', ['$log', '$dropdownSuppressWarning', function($log, $dropdownSuppressWarning) {\n  return {\n    restrict: 'AC',\n    require: '?^dropdown',\n    link: function(scope, element, attrs, dropdownCtrl) {\n      if (!dropdownCtrl || angular.isDefined(attrs.dropdownNested)) {\n        return;\n      }\n\n      if (!$dropdownSuppressWarning) {\n        $log.warn('dropdown-menu is now deprecated. Use uib-dropdown-menu instead.');\n      }\n\n      element.addClass('dropdown-menu');\n\n      var tplUrl = attrs.templateUrl;\n      if (tplUrl) {\n        dropdownCtrl.dropdownMenuTemplateUrl = tplUrl;\n      }\n\n      if (!dropdownCtrl.dropdownMenu) {\n        dropdownCtrl.dropdownMenu = element;\n      }\n    }\n  };\n}])\n\n.directive('keyboardNav', ['$log', '$dropdownSuppressWarning', function($log, $dropdownSuppressWarning) {\n  return {\n    restrict: 'A',\n    require: '?^dropdown',\n    link: function(scope, element, attrs, dropdownCtrl) {\n      if (!$dropdownSuppressWarning) {\n        $log.warn('keyboard-nav is now deprecated. Use uib-keyboard-nav instead.');\n      }\n\n      element.bind('keydown', function(e) {\n        if ([38, 40].indexOf(e.which) !== -1) {\n          e.preventDefault();\n          e.stopPropagation();\n\n          var elems = dropdownCtrl.dropdownMenu.find('a');\n\n          switch (e.which) {\n            case (40): { // Down\n              if (!angular.isNumber(dropdownCtrl.selectedOption)) {\n                dropdownCtrl.selectedOption = 0;\n              } else {\n                dropdownCtrl.selectedOption = dropdownCtrl.selectedOption === elems.length -1 ?\n                  dropdownCtrl.selectedOption : dropdownCtrl.selectedOption + 1;\n              }\n              break;\n            }\n            case (38): { // Up\n              if (!angular.isNumber(dropdownCtrl.selectedOption)) {\n                dropdownCtrl.selectedOption = elems.length - 1;\n              } else {\n                dropdownCtrl.selectedOption = dropdownCtrl.selectedOption === 0 ?\n                  0 : dropdownCtrl.selectedOption - 1;\n              }\n              break;\n            }\n          }\n          elems[dropdownCtrl.selectedOption].focus();\n        }\n      });\n    }\n  };\n}])\n\n.directive('dropdownToggle', ['$log', '$dropdownSuppressWarning', function($log, $dropdownSuppressWarning) {\n  return {\n    require: '?^dropdown',\n    link: function(scope, element, attrs, dropdownCtrl) {\n      if (!$dropdownSuppressWarning) {\n        $log.warn('dropdown-toggle is now deprecated. Use uib-dropdown-toggle instead.');\n      }\n\n      if (!dropdownCtrl) {\n        return;\n      }\n\n      element.addClass('dropdown-toggle');\n\n      dropdownCtrl.toggleElement = element;\n\n      var toggleDropdown = function(event) {\n        event.preventDefault();\n\n        if (!element.hasClass('disabled') && !attrs.disabled) {\n          scope.$apply(function() {\n            dropdownCtrl.toggle();\n          });\n        }\n      };\n\n      element.bind('click', toggleDropdown);\n\n      // WAI-ARIA\n      element.attr({ 'aria-haspopup': true, 'aria-expanded': false });\n      scope.$watch(dropdownCtrl.isOpen, function(isOpen) {\n        element.attr('aria-expanded', !!isOpen);\n      });\n\n      scope.$on('$destroy', function() {\n        element.unbind('click', toggleDropdown);\n      });\n    }\n  };\n}]);\n\nangular.module('ui.bootstrap.stackedMap', [])\n/**\n * A helper, internal data structure that acts as a map but also allows getting / removing\n * elements in the LIFO order\n */\n  .factory('$$stackedMap', function() {\n    return {\n      createNew: function() {\n        var stack = [];\n\n        return {\n          add: function(key, value) {\n            stack.push({\n              key: key,\n              value: value\n            });\n          },\n          get: function(key) {\n            for (var i = 0; i < stack.length; i++) {\n              if (key == stack[i].key) {\n                return stack[i];\n              }\n            }\n          },\n          keys: function() {\n            var keys = [];\n            for (var i = 0; i < stack.length; i++) {\n              keys.push(stack[i].key);\n            }\n            return keys;\n          },\n          top: function() {\n            return stack[stack.length - 1];\n          },\n          remove: function(key) {\n            var idx = -1;\n            for (var i = 0; i < stack.length; i++) {\n              if (key == stack[i].key) {\n                idx = i;\n                break;\n              }\n            }\n            return stack.splice(idx, 1)[0];\n          },\n          removeTop: function() {\n            return stack.splice(stack.length - 1, 1)[0];\n          },\n          length: function() {\n            return stack.length;\n          }\n        };\n      }\n    };\n  });\nangular.module('ui.bootstrap.modal', ['ui.bootstrap.stackedMap'])\n/**\n * A helper, internal data structure that stores all references attached to key\n */\n  .factory('$$multiMap', function() {\n    return {\n      createNew: function() {\n        var map = {};\n\n        return {\n          entries: function() {\n            return Object.keys(map).map(function(key) {\n              return {\n                key: key,\n                value: map[key]\n              };\n            });\n          },\n          get: function(key) {\n            return map[key];\n          },\n          hasKey: function(key) {\n            return !!map[key];\n          },\n          keys: function() {\n            return Object.keys(map);\n          },\n          put: function(key, value) {\n            if (!map[key]) {\n              map[key] = [];\n            }\n\n            map[key].push(value);\n          },\n          remove: function(key, value) {\n            var values = map[key];\n\n            if (!values) {\n              return;\n            }\n\n            var idx = values.indexOf(value);\n\n            if (idx !== -1) {\n              values.splice(idx, 1);\n            }\n\n            if (!values.length) {\n              delete map[key];\n            }\n          }\n        };\n      }\n    };\n  })\n\n/**\n * A helper directive for the $modal service. It creates a backdrop element.\n */\n  .directive('uibModalBackdrop', [\n           '$animate', '$injector', '$uibModalStack',\n  function($animate ,  $injector,   $modalStack) {\n    var $animateCss = null;\n\n    if ($injector.has('$animateCss')) {\n      $animateCss = $injector.get('$animateCss');\n    }\n\n    return {\n      replace: true,\n      templateUrl: 'template/modal/backdrop.html',\n      compile: function(tElement, tAttrs) {\n        tElement.addClass(tAttrs.backdropClass);\n        return linkFn;\n      }\n    };\n\n    function linkFn(scope, element, attrs) {\n      // Temporary fix for prefixing\n      element.addClass('modal-backdrop');\n\n      if (attrs.modalInClass) {\n        if ($animateCss) {\n          $animateCss(element, {\n            addClass: attrs.modalInClass\n          }).start();\n        } else {\n          $animate.addClass(element, attrs.modalInClass);\n        }\n\n        scope.$on($modalStack.NOW_CLOSING_EVENT, function(e, setIsAsync) {\n          var done = setIsAsync();\n          if ($animateCss) {\n            $animateCss(element, {\n              removeClass: attrs.modalInClass\n            }).start().then(done);\n          } else {\n            $animate.removeClass(element, attrs.modalInClass).then(done);\n          }\n        });\n      }\n    }\n  }])\n\n  .directive('uibModalWindow', [\n           '$uibModalStack', '$q', '$animate', '$injector',\n  function($modalStack ,  $q ,  $animate,   $injector) {\n    var $animateCss = null;\n\n    if ($injector.has('$animateCss')) {\n      $animateCss = $injector.get('$animateCss');\n    }\n\n    return {\n      scope: {\n        index: '@'\n      },\n      replace: true,\n      transclude: true,\n      templateUrl: function(tElement, tAttrs) {\n        return tAttrs.templateUrl || 'template/modal/window.html';\n      },\n      link: function(scope, element, attrs) {\n        element.addClass(attrs.windowClass || '');\n        element.addClass(attrs.windowTopClass || '');\n        scope.size = attrs.size;\n\n        scope.close = function(evt) {\n          var modal = $modalStack.getTop();\n          if (modal && modal.value.backdrop && modal.value.backdrop !== 'static' && (evt.target === evt.currentTarget)) {\n            evt.preventDefault();\n            evt.stopPropagation();\n            $modalStack.dismiss(modal.key, 'backdrop click');\n          }\n        };\n\n        // moved from template to fix issue #2280\n        element.on('click', scope.close);\n\n        // This property is only added to the scope for the purpose of detecting when this directive is rendered.\n        // We can detect that by using this property in the template associated with this directive and then use\n        // {@link Attribute#$observe} on it. For more details please see {@link TableColumnResize}.\n        scope.$isRendered = true;\n\n        // Deferred object that will be resolved when this modal is render.\n        var modalRenderDeferObj = $q.defer();\n        // Observe function will be called on next digest cycle after compilation, ensuring that the DOM is ready.\n        // In order to use this way of finding whether DOM is ready, we need to observe a scope property used in modal's template.\n        attrs.$observe('modalRender', function(value) {\n          if (value == 'true') {\n            modalRenderDeferObj.resolve();\n          }\n        });\n\n        modalRenderDeferObj.promise.then(function() {\n          var animationPromise = null;\n\n          if (attrs.modalInClass) {\n            if ($animateCss) {\n              animationPromise = $animateCss(element, {\n                addClass: attrs.modalInClass\n              }).start();\n            } else {\n              animationPromise = $animate.addClass(element, attrs.modalInClass);\n            }\n\n            scope.$on($modalStack.NOW_CLOSING_EVENT, function(e, setIsAsync) {\n              var done = setIsAsync();\n              if ($animateCss) {\n                $animateCss(element, {\n                  removeClass: attrs.modalInClass\n                }).start().then(done);\n              } else {\n                $animate.removeClass(element, attrs.modalInClass).then(done);\n              }\n            });\n          }\n\n\n          $q.when(animationPromise).then(function() {\n            var inputWithAutofocus = element[0].querySelector('[autofocus]');\n            /**\n             * Auto-focusing of a freshly-opened modal element causes any child elements\n             * with the autofocus attribute to lose focus. This is an issue on touch\n             * based devices which will show and then hide the onscreen keyboard.\n             * Attempts to refocus the autofocus element via JavaScript will not reopen\n             * the onscreen keyboard. Fixed by updated the focusing logic to only autofocus\n             * the modal element if the modal does not contain an autofocus element.\n             */\n            if (inputWithAutofocus) {\n              inputWithAutofocus.focus();\n            } else {\n              element[0].focus();\n            }\n          });\n\n          // Notify {@link $modalStack} that modal is rendered.\n          var modal = $modalStack.getTop();\n          if (modal) {\n            $modalStack.modalRendered(modal.key);\n          }\n        });\n      }\n    };\n  }])\n\n  .directive('uibModalAnimationClass', function() {\n    return {\n      compile: function(tElement, tAttrs) {\n        if (tAttrs.modalAnimation) {\n          tElement.addClass(tAttrs.uibModalAnimationClass);\n        }\n      }\n    };\n  })\n\n  .directive('uibModalTransclude', function() {\n    return {\n      link: function($scope, $element, $attrs, controller, $transclude) {\n        $transclude($scope.$parent, function(clone) {\n          $element.empty();\n          $element.append(clone);\n        });\n      }\n    };\n  })\n\n  .factory('$uibModalStack', [\n             '$animate', '$timeout', '$document', '$compile', '$rootScope',\n             '$q',\n             '$injector',\n             '$$multiMap',\n             '$$stackedMap',\n    function($animate ,  $timeout ,  $document ,  $compile ,  $rootScope ,\n              $q,\n              $injector,\n              $$multiMap,\n              $$stackedMap) {\n      var $animateCss = null;\n\n      if ($injector.has('$animateCss')) {\n        $animateCss = $injector.get('$animateCss');\n      }\n\n      var OPENED_MODAL_CLASS = 'modal-open';\n\n      var backdropDomEl, backdropScope;\n      var openedWindows = $$stackedMap.createNew();\n      var openedClasses = $$multiMap.createNew();\n      var $modalStack = {\n        NOW_CLOSING_EVENT: 'modal.stack.now-closing'\n      };\n\n      //Modal focus behavior\n      var focusableElementList;\n      var focusIndex = 0;\n      var tababbleSelector = 'a[href], area[href], input:not([disabled]), ' +\n        'button:not([disabled]),select:not([disabled]), textarea:not([disabled]), ' +\n        'iframe, object, embed, *[tabindex], *[contenteditable=true]';\n\n      function backdropIndex() {\n        var topBackdropIndex = -1;\n        var opened = openedWindows.keys();\n        for (var i = 0; i < opened.length; i++) {\n          if (openedWindows.get(opened[i]).value.backdrop) {\n            topBackdropIndex = i;\n          }\n        }\n        return topBackdropIndex;\n      }\n\n      $rootScope.$watch(backdropIndex, function(newBackdropIndex) {\n        if (backdropScope) {\n          backdropScope.index = newBackdropIndex;\n        }\n      });\n\n      function removeModalWindow(modalInstance, elementToReceiveFocus) {\n        var body = $document.find('body').eq(0);\n        var modalWindow = openedWindows.get(modalInstance).value;\n\n        //clean up the stack\n        openedWindows.remove(modalInstance);\n\n        removeAfterAnimate(modalWindow.modalDomEl, modalWindow.modalScope, function() {\n          var modalBodyClass = modalWindow.openedClass || OPENED_MODAL_CLASS;\n          openedClasses.remove(modalBodyClass, modalInstance);\n          body.toggleClass(modalBodyClass, openedClasses.hasKey(modalBodyClass));\n          toggleTopWindowClass(true);\n        });\n        checkRemoveBackdrop();\n\n        //move focus to specified element if available, or else to body\n        if (elementToReceiveFocus && elementToReceiveFocus.focus) {\n          elementToReceiveFocus.focus();\n        } else {\n          body.focus();\n        }\n      }\n\n      // Add or remove \"windowTopClass\" from the top window in the stack\n      function toggleTopWindowClass(toggleSwitch) {\n        var modalWindow;\n\n        if (openedWindows.length() > 0) {\n          modalWindow = openedWindows.top().value;\n          modalWindow.modalDomEl.toggleClass(modalWindow.windowTopClass || '', toggleSwitch);\n        }\n      }\n\n      function checkRemoveBackdrop() {\n        //remove backdrop if no longer needed\n        if (backdropDomEl && backdropIndex() == -1) {\n          var backdropScopeRef = backdropScope;\n          removeAfterAnimate(backdropDomEl, backdropScope, function() {\n            backdropScopeRef = null;\n          });\n          backdropDomEl = undefined;\n          backdropScope = undefined;\n        }\n      }\n\n      function removeAfterAnimate(domEl, scope, done) {\n        var asyncDeferred;\n        var asyncPromise = null;\n        var setIsAsync = function() {\n          if (!asyncDeferred) {\n            asyncDeferred = $q.defer();\n            asyncPromise = asyncDeferred.promise;\n          }\n\n          return function asyncDone() {\n            asyncDeferred.resolve();\n          };\n        };\n        scope.$broadcast($modalStack.NOW_CLOSING_EVENT, setIsAsync);\n\n        // Note that it's intentional that asyncPromise might be null.\n        // That's when setIsAsync has not been called during the\n        // NOW_CLOSING_EVENT broadcast.\n        return $q.when(asyncPromise).then(afterAnimating);\n\n        function afterAnimating() {\n          if (afterAnimating.done) {\n            return;\n          }\n          afterAnimating.done = true;\n\n          if ($animateCss) {\n            $animateCss(domEl, {\n              event: 'leave'\n            }).start().then(function() {\n              domEl.remove();\n            });\n          } else {\n            $animate.leave(domEl);\n          }\n          scope.$destroy();\n          if (done) {\n            done();\n          }\n        }\n      }\n\n      $document.bind('keydown', function(evt) {\n        if (evt.isDefaultPrevented()) {\n          return evt;\n        }\n\n        var modal = openedWindows.top();\n        if (modal && modal.value.keyboard) {\n          switch (evt.which) {\n            case 27: {\n              evt.preventDefault();\n              $rootScope.$apply(function() {\n                $modalStack.dismiss(modal.key, 'escape key press');\n              });\n              break;\n            }\n            case 9: {\n              $modalStack.loadFocusElementList(modal);\n              var focusChanged = false;\n              if (evt.shiftKey) {\n                if ($modalStack.isFocusInFirstItem(evt)) {\n                  focusChanged = $modalStack.focusLastFocusableElement();\n                }\n              } else {\n                if ($modalStack.isFocusInLastItem(evt)) {\n                  focusChanged = $modalStack.focusFirstFocusableElement();\n                }\n              }\n\n              if (focusChanged) {\n                evt.preventDefault();\n                evt.stopPropagation();\n              }\n              break;\n            }\n          }\n        }\n      });\n\n      $modalStack.open = function(modalInstance, modal) {\n        var modalOpener = $document[0].activeElement,\n          modalBodyClass = modal.openedClass || OPENED_MODAL_CLASS;\n\n        toggleTopWindowClass(false);\n\n        openedWindows.add(modalInstance, {\n          deferred: modal.deferred,\n          renderDeferred: modal.renderDeferred,\n          modalScope: modal.scope,\n          backdrop: modal.backdrop,\n          keyboard: modal.keyboard,\n          openedClass: modal.openedClass,\n          windowTopClass: modal.windowTopClass\n        });\n\n        openedClasses.put(modalBodyClass, modalInstance);\n\n        var body = $document.find('body').eq(0),\n            currBackdropIndex = backdropIndex();\n\n        if (currBackdropIndex >= 0 && !backdropDomEl) {\n          backdropScope = $rootScope.$new(true);\n          backdropScope.index = currBackdropIndex;\n          var angularBackgroundDomEl = angular.element('<div uib-modal-backdrop=\"modal-backdrop\"></div>');\n          angularBackgroundDomEl.attr('backdrop-class', modal.backdropClass);\n          if (modal.animation) {\n            angularBackgroundDomEl.attr('modal-animation', 'true');\n          }\n          backdropDomEl = $compile(angularBackgroundDomEl)(backdropScope);\n          body.append(backdropDomEl);\n        }\n\n        var angularDomEl = angular.element('<div uib-modal-window=\"modal-window\"></div>');\n        angularDomEl.attr({\n          'template-url': modal.windowTemplateUrl,\n          'window-class': modal.windowClass,\n          'window-top-class': modal.windowTopClass,\n          'size': modal.size,\n          'index': openedWindows.length() - 1,\n          'animate': 'animate'\n        }).html(modal.content);\n        if (modal.animation) {\n          angularDomEl.attr('modal-animation', 'true');\n        }\n\n        var modalDomEl = $compile(angularDomEl)(modal.scope);\n        openedWindows.top().value.modalDomEl = modalDomEl;\n        openedWindows.top().value.modalOpener = modalOpener;\n        body.append(modalDomEl);\n        body.addClass(modalBodyClass);\n\n        $modalStack.clearFocusListCache();\n      };\n\n      function broadcastClosing(modalWindow, resultOrReason, closing) {\n        return !modalWindow.value.modalScope.$broadcast('modal.closing', resultOrReason, closing).defaultPrevented;\n      }\n\n      $modalStack.close = function(modalInstance, result) {\n        var modalWindow = openedWindows.get(modalInstance);\n        if (modalWindow && broadcastClosing(modalWindow, result, true)) {\n          modalWindow.value.modalScope.$$uibDestructionScheduled = true;\n          modalWindow.value.deferred.resolve(result);\n          removeModalWindow(modalInstance, modalWindow.value.modalOpener);\n          return true;\n        }\n        return !modalWindow;\n      };\n\n      $modalStack.dismiss = function(modalInstance, reason) {\n        var modalWindow = openedWindows.get(modalInstance);\n        if (modalWindow && broadcastClosing(modalWindow, reason, false)) {\n          modalWindow.value.modalScope.$$uibDestructionScheduled = true;\n          modalWindow.value.deferred.reject(reason);\n          removeModalWindow(modalInstance, modalWindow.value.modalOpener);\n          return true;\n        }\n        return !modalWindow;\n      };\n\n      $modalStack.dismissAll = function(reason) {\n        var topModal = this.getTop();\n        while (topModal && this.dismiss(topModal.key, reason)) {\n          topModal = this.getTop();\n        }\n      };\n\n      $modalStack.getTop = function() {\n        return openedWindows.top();\n      };\n\n      $modalStack.modalRendered = function(modalInstance) {\n        var modalWindow = openedWindows.get(modalInstance);\n        if (modalWindow) {\n          modalWindow.value.renderDeferred.resolve();\n        }\n      };\n\n      $modalStack.focusFirstFocusableElement = function() {\n        if (focusableElementList.length > 0) {\n          focusableElementList[0].focus();\n          return true;\n        }\n        return false;\n      };\n      $modalStack.focusLastFocusableElement = function() {\n        if (focusableElementList.length > 0) {\n          focusableElementList[focusableElementList.length - 1].focus();\n          return true;\n        }\n        return false;\n      };\n\n      $modalStack.isFocusInFirstItem = function(evt) {\n        if (focusableElementList.length > 0) {\n          return (evt.target || evt.srcElement) == focusableElementList[0];\n        }\n        return false;\n      };\n\n      $modalStack.isFocusInLastItem = function(evt) {\n        if (focusableElementList.length > 0) {\n          return (evt.target || evt.srcElement) == focusableElementList[focusableElementList.length - 1];\n        }\n        return false;\n      };\n\n      $modalStack.clearFocusListCache = function() {\n        focusableElementList = [];\n        focusIndex = 0;\n      };\n\n      $modalStack.loadFocusElementList = function(modalWindow) {\n        if (focusableElementList === undefined || !focusableElementList.length) {\n          if (modalWindow) {\n            var modalDomE1 = modalWindow.value.modalDomEl;\n            if (modalDomE1 && modalDomE1.length) {\n              focusableElementList = modalDomE1[0].querySelectorAll(tababbleSelector);\n            }\n          }\n        }\n      };\n\n      return $modalStack;\n    }])\n\n  .provider('$uibModal', function() {\n    var $modalProvider = {\n      options: {\n        animation: true,\n        backdrop: true, //can also be false or 'static'\n        keyboard: true\n      },\n      $get: ['$injector', '$rootScope', '$q', '$templateRequest', '$controller', '$uibModalStack', '$modalSuppressWarning', '$log',\n        function ($injector, $rootScope, $q, $templateRequest, $controller, $modalStack, $modalSuppressWarning, $log) {\n          var $modal = {};\n\n          function getTemplatePromise(options) {\n            return options.template ? $q.when(options.template) :\n              $templateRequest(angular.isFunction(options.templateUrl) ? (options.templateUrl)() : options.templateUrl);\n          }\n\n          function getResolvePromises(resolves) {\n            var promisesArr = [];\n            angular.forEach(resolves, function(value) {\n              if (angular.isFunction(value) || angular.isArray(value)) {\n                promisesArr.push($q.when($injector.invoke(value)));\n              } else if (angular.isString(value)) {\n                promisesArr.push($q.when($injector.get(value)));\n              } else {\n                promisesArr.push($q.when(value));\n              }\n            });\n            return promisesArr;\n          }\n\n          var promiseChain = null;\n          $modal.getPromiseChain = function() {\n            return promiseChain;\n          };\n\n          $modal.open = function(modalOptions) {\n            var modalResultDeferred = $q.defer();\n            var modalOpenedDeferred = $q.defer();\n            var modalRenderDeferred = $q.defer();\n\n            //prepare an instance of a modal to be injected into controllers and returned to a caller\n            var modalInstance = {\n              result: modalResultDeferred.promise,\n              opened: modalOpenedDeferred.promise,\n              rendered: modalRenderDeferred.promise,\n              close: function (result) {\n                return $modalStack.close(modalInstance, result);\n              },\n              dismiss: function (reason) {\n                return $modalStack.dismiss(modalInstance, reason);\n              }\n            };\n\n            //merge and clean up options\n            modalOptions = angular.extend({}, $modalProvider.options, modalOptions);\n            modalOptions.resolve = modalOptions.resolve || {};\n\n            //verify options\n            if (!modalOptions.template && !modalOptions.templateUrl) {\n              throw new Error('One of template or templateUrl options is required.');\n            }\n\n            var templateAndResolvePromise =\n              $q.all([getTemplatePromise(modalOptions)].concat(getResolvePromises(modalOptions.resolve)));\n\n            function resolveWithTemplate() {\n              return templateAndResolvePromise;\n            }\n\n            // Wait for the resolution of the existing promise chain.\n            // Then switch to our own combined promise dependency (regardless of how the previous modal fared).\n            // Then add to $modalStack and resolve opened.\n            // Finally clean up the chain variable if no subsequent modal has overwritten it.\n            var samePromise;\n            samePromise = promiseChain = $q.all([promiseChain])\n              .then(resolveWithTemplate, resolveWithTemplate)\n              .then(function resolveSuccess(tplAndVars) {\n\n                var modalScope = (modalOptions.scope || $rootScope).$new();\n                modalScope.$close = modalInstance.close;\n                modalScope.$dismiss = modalInstance.dismiss;\n\n                modalScope.$on('$destroy', function() {\n                  if (!modalScope.$$uibDestructionScheduled) {\n                    modalScope.$dismiss('$uibUnscheduledDestruction');\n                  }\n                });\n\n                var ctrlInstance, ctrlLocals = {};\n                var resolveIter = 1;\n\n                //controllers\n                if (modalOptions.controller) {\n                  ctrlLocals.$scope = modalScope;\n                  ctrlLocals.$uibModalInstance = modalInstance;\n                  Object.defineProperty(ctrlLocals, '$modalInstance', {\n                    get: function() {\n                      if (!$modalSuppressWarning) {\n                        $log.warn('$modalInstance is now deprecated. Use $uibModalInstance instead.');\n                      }\n\n                      return modalInstance;\n                    }\n                  });\n                  angular.forEach(modalOptions.resolve, function(value, key) {\n                    ctrlLocals[key] = tplAndVars[resolveIter++];\n                  });\n\n                  ctrlInstance = $controller(modalOptions.controller, ctrlLocals);\n                  if (modalOptions.controllerAs) {\n                    if (modalOptions.bindToController) {\n                      angular.extend(ctrlInstance, modalScope);\n                    }\n\n                    modalScope[modalOptions.controllerAs] = ctrlInstance;\n                  }\n                }\n\n                $modalStack.open(modalInstance, {\n                  scope: modalScope,\n                  deferred: modalResultDeferred,\n                  renderDeferred: modalRenderDeferred,\n                  content: tplAndVars[0],\n                  animation: modalOptions.animation,\n                  backdrop: modalOptions.backdrop,\n                  keyboard: modalOptions.keyboard,\n                  backdropClass: modalOptions.backdropClass,\n                  windowTopClass: modalOptions.windowTopClass,\n                  windowClass: modalOptions.windowClass,\n                  windowTemplateUrl: modalOptions.windowTemplateUrl,\n                  size: modalOptions.size,\n                  openedClass: modalOptions.openedClass\n                });\n                modalOpenedDeferred.resolve(true);\n\n            }, function resolveError(reason) {\n              modalOpenedDeferred.reject(reason);\n              modalResultDeferred.reject(reason);\n            })\n            .finally(function() {\n              if (promiseChain === samePromise) {\n                promiseChain = null;\n              }\n            });\n\n            return modalInstance;\n          };\n\n          return $modal;\n        }\n      ]\n    };\n\n    return $modalProvider;\n  });\n\n/* deprecated modal below */\n\nangular.module('ui.bootstrap.modal')\n\n  .value('$modalSuppressWarning', false)\n\n  /**\n   * A helper directive for the $modal service. It creates a backdrop element.\n   */\n  .directive('modalBackdrop', [\n    '$animate', '$injector', '$modalStack', '$log', '$modalSuppressWarning',\n    function($animate ,  $injector,   $modalStack, $log, $modalSuppressWarning) {\n      var $animateCss = null;\n\n      if ($injector.has('$animateCss')) {\n        $animateCss = $injector.get('$animateCss');\n      }\n\n      return {\n        replace: true,\n        templateUrl: 'template/modal/backdrop.html',\n        compile: function(tElement, tAttrs) {\n          tElement.addClass(tAttrs.backdropClass);\n          return linkFn;\n        }\n      };\n\n      function linkFn(scope, element, attrs) {\n        if (!$modalSuppressWarning) {\n          $log.warn('modal-backdrop is now deprecated. Use uib-modal-backdrop instead.');\n        }\n        element.addClass('modal-backdrop');\n\n        if (attrs.modalInClass) {\n          if ($animateCss) {\n            $animateCss(element, {\n              addClass: attrs.modalInClass\n            }).start();\n          } else {\n            $animate.addClass(element, attrs.modalInClass);\n          }\n\n          scope.$on($modalStack.NOW_CLOSING_EVENT, function(e, setIsAsync) {\n            var done = setIsAsync();\n            if ($animateCss) {\n              $animateCss(element, {\n                removeClass: attrs.modalInClass\n              }).start().then(done);\n            } else {\n              $animate.removeClass(element, attrs.modalInClass).then(done);\n            }\n          });\n        }\n      }\n    }])\n\n  .directive('modalWindow', [\n    '$modalStack', '$q', '$animate', '$injector', '$log', '$modalSuppressWarning',\n    function($modalStack ,  $q ,  $animate,   $injector, $log, $modalSuppressWarning) {\n      var $animateCss = null;\n\n      if ($injector.has('$animateCss')) {\n        $animateCss = $injector.get('$animateCss');\n      }\n\n      return {\n        scope: {\n          index: '@'\n        },\n        replace: true,\n        transclude: true,\n        templateUrl: function(tElement, tAttrs) {\n          return tAttrs.templateUrl || 'template/modal/window.html';\n        },\n        link: function(scope, element, attrs) {\n          if (!$modalSuppressWarning) {\n            $log.warn('modal-window is now deprecated. Use uib-modal-window instead.');\n          }\n          element.addClass(attrs.windowClass || '');\n          element.addClass(attrs.windowTopClass || '');\n          scope.size = attrs.size;\n\n          scope.close = function(evt) {\n            var modal = $modalStack.getTop();\n            if (modal && modal.value.backdrop && modal.value.backdrop !== 'static' && (evt.target === evt.currentTarget)) {\n              evt.preventDefault();\n              evt.stopPropagation();\n              $modalStack.dismiss(modal.key, 'backdrop click');\n            }\n          };\n\n          // moved from template to fix issue #2280\n          element.on('click', scope.close);\n\n          // This property is only added to the scope for the purpose of detecting when this directive is rendered.\n          // We can detect that by using this property in the template associated with this directive and then use\n          // {@link Attribute#$observe} on it. For more details please see {@link TableColumnResize}.\n          scope.$isRendered = true;\n\n          // Deferred object that will be resolved when this modal is render.\n          var modalRenderDeferObj = $q.defer();\n          // Observe function will be called on next digest cycle after compilation, ensuring that the DOM is ready.\n          // In order to use this way of finding whether DOM is ready, we need to observe a scope property used in modal's template.\n          attrs.$observe('modalRender', function(value) {\n            if (value == 'true') {\n              modalRenderDeferObj.resolve();\n            }\n          });\n\n          modalRenderDeferObj.promise.then(function() {\n            var animationPromise = null;\n\n            if (attrs.modalInClass) {\n              if ($animateCss) {\n                animationPromise = $animateCss(element, {\n                  addClass: attrs.modalInClass\n                }).start();\n              } else {\n                animationPromise = $animate.addClass(element, attrs.modalInClass);\n              }\n\n              scope.$on($modalStack.NOW_CLOSING_EVENT, function(e, setIsAsync) {\n                var done = setIsAsync();\n                if ($animateCss) {\n                  $animateCss(element, {\n                    removeClass: attrs.modalInClass\n                  }).start().then(done);\n                } else {\n                  $animate.removeClass(element, attrs.modalInClass).then(done);\n                }\n              });\n            }\n\n\n            $q.when(animationPromise).then(function() {\n              var inputWithAutofocus = element[0].querySelector('[autofocus]');\n              /**\n               * Auto-focusing of a freshly-opened modal element causes any child elements\n               * with the autofocus attribute to lose focus. This is an issue on touch\n               * based devices which will show and then hide the onscreen keyboard.\n               * Attempts to refocus the autofocus element via JavaScript will not reopen\n               * the onscreen keyboard. Fixed by updated the focusing logic to only autofocus\n               * the modal element if the modal does not contain an autofocus element.\n               */\n              if (inputWithAutofocus) {\n                inputWithAutofocus.focus();\n              } else {\n                element[0].focus();\n              }\n            });\n\n            // Notify {@link $modalStack} that modal is rendered.\n            var modal = $modalStack.getTop();\n            if (modal) {\n              $modalStack.modalRendered(modal.key);\n            }\n          });\n        }\n      };\n    }])\n\n  .directive('modalAnimationClass', [\n    '$log', '$modalSuppressWarning',\n    function ($log, $modalSuppressWarning) {\n      return {\n        compile: function(tElement, tAttrs) {\n          if (!$modalSuppressWarning) {\n            $log.warn('modal-animation-class is now deprecated. Use uib-modal-animation-class instead.');\n          }\n          if (tAttrs.modalAnimation) {\n            tElement.addClass(tAttrs.modalAnimationClass);\n          }\n        }\n      };\n    }])\n\n  .directive('modalTransclude', [\n    '$log', '$modalSuppressWarning',\n    function ($log, $modalSuppressWarning) {\n    return {\n      link: function($scope, $element, $attrs, controller, $transclude) {\n        if (!$modalSuppressWarning) {\n          $log.warn('modal-transclude is now deprecated. Use uib-modal-transclude instead.');\n        }\n        $transclude($scope.$parent, function(clone) {\n          $element.empty();\n          $element.append(clone);\n        });\n      }\n    };\n  }])\n\n  .service('$modalStack', [\n    '$animate', '$timeout', '$document', '$compile', '$rootScope',\n    '$q',\n    '$injector',\n    '$$multiMap',\n    '$$stackedMap',\n    '$uibModalStack',\n    '$log',\n    '$modalSuppressWarning',\n    function($animate ,  $timeout ,  $document ,  $compile ,  $rootScope ,\n             $q,\n             $injector,\n             $$multiMap,\n             $$stackedMap,\n             $uibModalStack,\n             $log,\n             $modalSuppressWarning) {\n      if (!$modalSuppressWarning) {\n        $log.warn('$modalStack is now deprecated. Use $uibModalStack instead.');\n      }\n\n      angular.extend(this, $uibModalStack);\n    }])\n\n  .provider('$modal', ['$uibModalProvider', function($uibModalProvider) {\n    angular.extend(this, $uibModalProvider);\n\n    this.$get = ['$injector', '$log', '$modalSuppressWarning',\n      function ($injector, $log, $modalSuppressWarning) {\n        if (!$modalSuppressWarning) {\n          $log.warn('$modal is now deprecated. Use $uibModal instead.');\n        }\n\n        return $injector.invoke($uibModalProvider.$get);\n      }];\n  }]);\n\nangular.module('ui.bootstrap.pagination', [])\n.controller('UibPaginationController', ['$scope', '$attrs', '$parse', function($scope, $attrs, $parse) {\n  var self = this,\n      ngModelCtrl = { $setViewValue: angular.noop }, // nullModelCtrl\n      setNumPages = $attrs.numPages ? $parse($attrs.numPages).assign : angular.noop;\n\n  this.init = function(ngModelCtrl_, config) {\n    ngModelCtrl = ngModelCtrl_;\n    this.config = config;\n\n    ngModelCtrl.$render = function() {\n      self.render();\n    };\n\n    if ($attrs.itemsPerPage) {\n      $scope.$parent.$watch($parse($attrs.itemsPerPage), function(value) {\n        self.itemsPerPage = parseInt(value, 10);\n        $scope.totalPages = self.calculateTotalPages();\n      });\n    } else {\n      this.itemsPerPage = config.itemsPerPage;\n    }\n\n    $scope.$watch('totalItems', function() {\n      $scope.totalPages = self.calculateTotalPages();\n    });\n\n    $scope.$watch('totalPages', function(value) {\n      setNumPages($scope.$parent, value); // Readonly variable\n\n      if ( $scope.page > value ) {\n        $scope.selectPage(value);\n      } else {\n        ngModelCtrl.$render();\n      }\n    });\n  };\n\n  this.calculateTotalPages = function() {\n    var totalPages = this.itemsPerPage < 1 ? 1 : Math.ceil($scope.totalItems / this.itemsPerPage);\n    return Math.max(totalPages || 0, 1);\n  };\n\n  this.render = function() {\n    $scope.page = parseInt(ngModelCtrl.$viewValue, 10) || 1;\n  };\n\n  $scope.selectPage = function(page, evt) {\n    if (evt) {\n      evt.preventDefault();\n    }\n\n    var clickAllowed = !$scope.ngDisabled || !evt;\n    if (clickAllowed && $scope.page !== page && page > 0 && page <= $scope.totalPages) {\n      if (evt && evt.target) {\n        evt.target.blur();\n      }\n      ngModelCtrl.$setViewValue(page);\n      ngModelCtrl.$render();\n    }\n  };\n\n  $scope.getText = function(key) {\n    return $scope[key + 'Text'] || self.config[key + 'Text'];\n  };\n\n  $scope.noPrevious = function() {\n    return $scope.page === 1;\n  };\n\n  $scope.noNext = function() {\n    return $scope.page === $scope.totalPages;\n  };\n}])\n\n.constant('uibPaginationConfig', {\n  itemsPerPage: 10,\n  boundaryLinks: false,\n  directionLinks: true,\n  firstText: 'First',\n  previousText: 'Previous',\n  nextText: 'Next',\n  lastText: 'Last',\n  rotate: true\n})\n\n.directive('uibPagination', ['$parse', 'uibPaginationConfig', function($parse, paginationConfig) {\n  return {\n    restrict: 'EA',\n    scope: {\n      totalItems: '=',\n      firstText: '@',\n      previousText: '@',\n      nextText: '@',\n      lastText: '@',\n      ngDisabled:'='\n    },\n    require: ['uibPagination', '?ngModel'],\n    controller: 'UibPaginationController',\n    controllerAs: 'pagination',\n    templateUrl: function(element, attrs) {\n      return attrs.templateUrl || 'template/pagination/pagination.html';\n    },\n    replace: true,\n    link: function(scope, element, attrs, ctrls) {\n      var paginationCtrl = ctrls[0], ngModelCtrl = ctrls[1];\n\n      if (!ngModelCtrl) {\n         return; // do nothing if no ng-model\n      }\n\n      // Setup configuration parameters\n      var maxSize = angular.isDefined(attrs.maxSize) ? scope.$parent.$eval(attrs.maxSize) : paginationConfig.maxSize,\n          rotate = angular.isDefined(attrs.rotate) ? scope.$parent.$eval(attrs.rotate) : paginationConfig.rotate;\n      scope.boundaryLinks = angular.isDefined(attrs.boundaryLinks) ? scope.$parent.$eval(attrs.boundaryLinks) : paginationConfig.boundaryLinks;\n      scope.directionLinks = angular.isDefined(attrs.directionLinks) ? scope.$parent.$eval(attrs.directionLinks) : paginationConfig.directionLinks;\n\n      paginationCtrl.init(ngModelCtrl, paginationConfig);\n\n      if (attrs.maxSize) {\n        scope.$parent.$watch($parse(attrs.maxSize), function(value) {\n          maxSize = parseInt(value, 10);\n          paginationCtrl.render();\n        });\n      }\n\n      // Create page object used in template\n      function makePage(number, text, isActive) {\n        return {\n          number: number,\n          text: text,\n          active: isActive\n        };\n      }\n\n      function getPages(currentPage, totalPages) {\n        var pages = [];\n\n        // Default page limits\n        var startPage = 1, endPage = totalPages;\n        var isMaxSized = angular.isDefined(maxSize) && maxSize < totalPages;\n\n        // recompute if maxSize\n        if (isMaxSized) {\n          if (rotate) {\n            // Current page is displayed in the middle of the visible ones\n            startPage = Math.max(currentPage - Math.floor(maxSize/2), 1);\n            endPage   = startPage + maxSize - 1;\n\n            // Adjust if limit is exceeded\n            if (endPage > totalPages) {\n              endPage   = totalPages;\n              startPage = endPage - maxSize + 1;\n            }\n          } else {\n            // Visible pages are paginated with maxSize\n            startPage = ((Math.ceil(currentPage / maxSize) - 1) * maxSize) + 1;\n\n            // Adjust last page if limit is exceeded\n            endPage = Math.min(startPage + maxSize - 1, totalPages);\n          }\n        }\n\n        // Add page number links\n        for (var number = startPage; number <= endPage; number++) {\n          var page = makePage(number, number, number === currentPage);\n          pages.push(page);\n        }\n\n        // Add links to move between page sets\n        if (isMaxSized && ! rotate) {\n          if (startPage > 1) {\n            var previousPageSet = makePage(startPage - 1, '...', false);\n            pages.unshift(previousPageSet);\n          }\n\n          if (endPage < totalPages) {\n            var nextPageSet = makePage(endPage + 1, '...', false);\n            pages.push(nextPageSet);\n          }\n        }\n\n        return pages;\n      }\n\n      var originalRender = paginationCtrl.render;\n      paginationCtrl.render = function() {\n        originalRender();\n        if (scope.page > 0 && scope.page <= scope.totalPages) {\n          scope.pages = getPages(scope.page, scope.totalPages);\n        }\n      };\n    }\n  };\n}])\n\n.constant('uibPagerConfig', {\n  itemsPerPage: 10,\n  previousText: '« Previous',\n  nextText: 'Next »',\n  align: true\n})\n\n.directive('uibPager', ['uibPagerConfig', function(pagerConfig) {\n  return {\n    restrict: 'EA',\n    scope: {\n      totalItems: '=',\n      previousText: '@',\n      nextText: '@',\n      ngDisabled: '='\n    },\n    require: ['uibPager', '?ngModel'],\n    controller: 'UibPaginationController',\n    controllerAs: 'pagination',\n    templateUrl: function(element, attrs) {\n      return attrs.templateUrl || 'template/pagination/pager.html';\n    },\n    replace: true,\n    link: function(scope, element, attrs, ctrls) {\n      var paginationCtrl = ctrls[0], ngModelCtrl = ctrls[1];\n\n      if (!ngModelCtrl) {\n         return; // do nothing if no ng-model\n      }\n\n      scope.align = angular.isDefined(attrs.align) ? scope.$parent.$eval(attrs.align) : pagerConfig.align;\n      paginationCtrl.init(ngModelCtrl, pagerConfig);\n    }\n  };\n}]);\n\n/* Deprecated Pagination Below */\n\nangular.module('ui.bootstrap.pagination')\n.value('$paginationSuppressWarning', false)\n.controller('PaginationController', ['$scope', '$attrs', '$parse', '$log', '$paginationSuppressWarning', function($scope, $attrs, $parse, $log, $paginationSuppressWarning) {\n  if (!$paginationSuppressWarning) {\n    $log.warn('PaginationController is now deprecated. Use UibPaginationController instead.');\n  }\n\n  var self = this,\n    ngModelCtrl = { $setViewValue: angular.noop }, // nullModelCtrl\n    setNumPages = $attrs.numPages ? $parse($attrs.numPages).assign : angular.noop;\n\n  this.init = function(ngModelCtrl_, config) {\n    ngModelCtrl = ngModelCtrl_;\n    this.config = config;\n\n    ngModelCtrl.$render = function() {\n      self.render();\n    };\n\n    if ($attrs.itemsPerPage) {\n      $scope.$parent.$watch($parse($attrs.itemsPerPage), function(value) {\n        self.itemsPerPage = parseInt(value, 10);\n        $scope.totalPages = self.calculateTotalPages();\n      });\n    } else {\n      this.itemsPerPage = config.itemsPerPage;\n    }\n\n    $scope.$watch('totalItems', function() {\n      $scope.totalPages = self.calculateTotalPages();\n    });\n\n    $scope.$watch('totalPages', function(value) {\n      setNumPages($scope.$parent, value); // Readonly variable\n\n      if ( $scope.page > value ) {\n        $scope.selectPage(value);\n      } else {\n        ngModelCtrl.$render();\n      }\n    });\n  };\n\n  this.calculateTotalPages = function() {\n    var totalPages = this.itemsPerPage < 1 ? 1 : Math.ceil($scope.totalItems / this.itemsPerPage);\n    return Math.max(totalPages || 0, 1);\n  };\n\n  this.render = function() {\n    $scope.page = parseInt(ngModelCtrl.$viewValue, 10) || 1;\n  };\n\n  $scope.selectPage = function(page, evt) {\n    if (evt) {\n      evt.preventDefault();\n    }\n\n    var clickAllowed = !$scope.ngDisabled || !evt;\n    if (clickAllowed && $scope.page !== page && page > 0 && page <= $scope.totalPages) {\n      if (evt && evt.target) {\n        evt.target.blur();\n      }\n      ngModelCtrl.$setViewValue(page);\n      ngModelCtrl.$render();\n    }\n  };\n\n  $scope.getText = function(key) {\n    return $scope[key + 'Text'] || self.config[key + 'Text'];\n  };\n\n  $scope.noPrevious = function() {\n    return $scope.page === 1;\n  };\n\n  $scope.noNext = function() {\n    return $scope.page === $scope.totalPages;\n  };\n}])\n.directive('pagination', ['$parse', 'uibPaginationConfig', '$log', '$paginationSuppressWarning', function($parse, paginationConfig, $log, $paginationSuppressWarning) {\n  return {\n    restrict: 'EA',\n    scope: {\n      totalItems: '=',\n      firstText: '@',\n      previousText: '@',\n      nextText: '@',\n      lastText: '@',\n      ngDisabled:'='\n    },\n    require: ['pagination', '?ngModel'],\n    controller: 'PaginationController',\n    controllerAs: 'pagination',\n    templateUrl: function(element, attrs) {\n      return attrs.templateUrl || 'template/pagination/pagination.html';\n    },\n    replace: true,\n    link: function(scope, element, attrs, ctrls) {\n      if (!$paginationSuppressWarning) {\n        $log.warn('pagination is now deprecated. Use uib-pagination instead.');\n      }\n      var paginationCtrl = ctrls[0], ngModelCtrl = ctrls[1];\n\n      if (!ngModelCtrl) {\n         return; // do nothing if no ng-model\n      }\n\n      // Setup configuration parameters\n      var maxSize = angular.isDefined(attrs.maxSize) ? scope.$parent.$eval(attrs.maxSize) : paginationConfig.maxSize,\n          rotate = angular.isDefined(attrs.rotate) ? scope.$parent.$eval(attrs.rotate) : paginationConfig.rotate;\n      scope.boundaryLinks = angular.isDefined(attrs.boundaryLinks) ? scope.$parent.$eval(attrs.boundaryLinks) : paginationConfig.boundaryLinks;\n      scope.directionLinks = angular.isDefined(attrs.directionLinks) ? scope.$parent.$eval(attrs.directionLinks) : paginationConfig.directionLinks;\n\n      paginationCtrl.init(ngModelCtrl, paginationConfig);\n\n      if (attrs.maxSize) {\n        scope.$parent.$watch($parse(attrs.maxSize), function(value) {\n          maxSize = parseInt(value, 10);\n          paginationCtrl.render();\n        });\n      }\n\n      // Create page object used in template\n      function makePage(number, text, isActive) {\n        return {\n          number: number,\n          text: text,\n          active: isActive\n        };\n      }\n\n      function getPages(currentPage, totalPages) {\n        var pages = [];\n\n        // Default page limits\n        var startPage = 1, endPage = totalPages;\n        var isMaxSized = angular.isDefined(maxSize) && maxSize < totalPages;\n\n        // recompute if maxSize\n        if (isMaxSized) {\n          if (rotate) {\n            // Current page is displayed in the middle of the visible ones\n            startPage = Math.max(currentPage - Math.floor(maxSize/2), 1);\n            endPage   = startPage + maxSize - 1;\n\n            // Adjust if limit is exceeded\n            if (endPage > totalPages) {\n              endPage   = totalPages;\n              startPage = endPage - maxSize + 1;\n            }\n          } else {\n            // Visible pages are paginated with maxSize\n            startPage = ((Math.ceil(currentPage / maxSize) - 1) * maxSize) + 1;\n\n            // Adjust last page if limit is exceeded\n            endPage = Math.min(startPage + maxSize - 1, totalPages);\n          }\n        }\n\n        // Add page number links\n        for (var number = startPage; number <= endPage; number++) {\n          var page = makePage(number, number, number === currentPage);\n          pages.push(page);\n        }\n\n        // Add links to move between page sets\n        if (isMaxSized && ! rotate) {\n          if (startPage > 1) {\n            var previousPageSet = makePage(startPage - 1, '...', false);\n            pages.unshift(previousPageSet);\n          }\n\n          if (endPage < totalPages) {\n            var nextPageSet = makePage(endPage + 1, '...', false);\n            pages.push(nextPageSet);\n          }\n        }\n\n        return pages;\n      }\n\n      var originalRender = paginationCtrl.render;\n      paginationCtrl.render = function() {\n        originalRender();\n        if (scope.page > 0 && scope.page <= scope.totalPages) {\n          scope.pages = getPages(scope.page, scope.totalPages);\n        }\n      };\n    }\n  };\n}])\n\n.directive('pager', ['uibPagerConfig', '$log', '$paginationSuppressWarning', function(pagerConfig, $log, $paginationSuppressWarning) {\n  return {\n    restrict: 'EA',\n    scope: {\n      totalItems: '=',\n      previousText: '@',\n      nextText: '@',\n      ngDisabled: '='\n    },\n    require: ['pager', '?ngModel'],\n    controller: 'PaginationController',\n    controllerAs: 'pagination',\n    templateUrl: function(element, attrs) {\n      return attrs.templateUrl || 'template/pagination/pager.html';\n    },\n    replace: true,\n    link: function(scope, element, attrs, ctrls) {\n      if (!$paginationSuppressWarning) {\n        $log.warn('pager is now deprecated. Use uib-pager instead.');\n      }\n      var paginationCtrl = ctrls[0], ngModelCtrl = ctrls[1];\n\n      if (!ngModelCtrl) {\n         return; // do nothing if no ng-model\n      }\n\n      scope.align = angular.isDefined(attrs.align) ? scope.$parent.$eval(attrs.align) : pagerConfig.align;\n      paginationCtrl.init(ngModelCtrl, pagerConfig);\n    }\n  };\n}]);\n\n/**\n * The following features are still outstanding: animation as a\n * function, placement as a function, inside, support for more triggers than\n * just mouse enter/leave, html tooltips, and selector delegation.\n */\nangular.module('ui.bootstrap.tooltip', ['ui.bootstrap.position', 'ui.bootstrap.stackedMap'])\n\n/**\n * The $tooltip service creates tooltip- and popover-like directives as well as\n * houses global options for them.\n */\n.provider('$uibTooltip', function() {\n  // The default options tooltip and popover.\n  var defaultOptions = {\n    placement: 'top',\n    animation: true,\n    popupDelay: 0,\n    popupCloseDelay: 0,\n    useContentExp: false\n  };\n\n  // Default hide triggers for each show trigger\n  var triggerMap = {\n    'mouseenter': 'mouseleave',\n    'click': 'click',\n    'focus': 'blur',\n    'none': ''\n  };\n\n  // The options specified to the provider globally.\n  var globalOptions = {};\n\n  /**\n   * `options({})` allows global configuration of all tooltips in the\n   * application.\n   *\n   *   var app = angular.module( 'App', ['ui.bootstrap.tooltip'], function( $tooltipProvider ) {\n   *     // place tooltips left instead of top by default\n   *     $tooltipProvider.options( { placement: 'left' } );\n   *   });\n   */\n\tthis.options = function(value) {\n\t\tangular.extend(globalOptions, value);\n\t};\n\n  /**\n   * This allows you to extend the set of trigger mappings available. E.g.:\n   *\n   *   $tooltipProvider.setTriggers( 'openTrigger': 'closeTrigger' );\n   */\n  this.setTriggers = function setTriggers(triggers) {\n    angular.extend(triggerMap, triggers);\n  };\n\n  /**\n   * This is a helper function for translating camel-case to snake-case.\n   */\n  function snake_case(name) {\n    var regexp = /[A-Z]/g;\n    var separator = '-';\n    return name.replace(regexp, function(letter, pos) {\n      return (pos ? separator : '') + letter.toLowerCase();\n    });\n  }\n\n  /**\n   * Returns the actual instance of the $tooltip service.\n   * TODO support multiple triggers\n   */\n  this.$get = ['$window', '$compile', '$timeout', '$document', '$uibPosition', '$interpolate', '$rootScope', '$parse', '$$stackedMap', function($window, $compile, $timeout, $document, $position, $interpolate, $rootScope, $parse, $$stackedMap) {\n    var openedTooltips = $$stackedMap.createNew();\n    $document.on('keypress', function(e) {\n      if (e.which === 27) {\n        var last = openedTooltips.top();\n        if (last) {\n          last.value.close();\n          openedTooltips.removeTop();\n          last = null;\n        }\n      }\n    });\n\n    return function $tooltip(ttType, prefix, defaultTriggerShow, options) {\n      options = angular.extend({}, defaultOptions, globalOptions, options);\n\n      /**\n       * Returns an object of show and hide triggers.\n       *\n       * If a trigger is supplied,\n       * it is used to show the tooltip; otherwise, it will use the `trigger`\n       * option passed to the `$tooltipProvider.options` method; else it will\n       * default to the trigger supplied to this directive factory.\n       *\n       * The hide trigger is based on the show trigger. If the `trigger` option\n       * was passed to the `$tooltipProvider.options` method, it will use the\n       * mapped trigger from `triggerMap` or the passed trigger if the map is\n       * undefined; otherwise, it uses the `triggerMap` value of the show\n       * trigger; else it will just use the show trigger.\n       */\n      function getTriggers(trigger) {\n        var show = (trigger || options.trigger || defaultTriggerShow).split(' ');\n        var hide = show.map(function(trigger) {\n          return triggerMap[trigger] || trigger;\n        });\n        return {\n          show: show,\n          hide: hide\n        };\n      }\n\n      var directiveName = snake_case(ttType);\n\n      var startSym = $interpolate.startSymbol();\n      var endSym = $interpolate.endSymbol();\n      var template =\n        '<div '+ directiveName + '-popup '+\n          'title=\"' + startSym + 'title' + endSym + '\" '+\n          (options.useContentExp ?\n            'content-exp=\"contentExp()\" ' :\n            'content=\"' + startSym + 'content' + endSym + '\" ') +\n          'placement=\"' + startSym + 'placement' + endSym + '\" '+\n          'popup-class=\"' + startSym + 'popupClass' + endSym + '\" '+\n          'animation=\"animation\" ' +\n          'is-open=\"isOpen\"' +\n          'origin-scope=\"origScope\" ' +\n          'style=\"visibility: hidden; display: block; top: -9999px; left: -9999px;\"' +\n          '>' +\n        '</div>';\n\n      return {\n        compile: function(tElem, tAttrs) {\n          var tooltipLinker = $compile(template);\n\n          return function link(scope, element, attrs, tooltipCtrl) {\n            var tooltip;\n            var tooltipLinkedScope;\n            var transitionTimeout;\n            var showTimeout;\n            var hideTimeout;\n            var positionTimeout;\n            var appendToBody = angular.isDefined(options.appendToBody) ? options.appendToBody : false;\n            var triggers = getTriggers(undefined);\n            var hasEnableExp = angular.isDefined(attrs[prefix + 'Enable']);\n            var ttScope = scope.$new(true);\n            var repositionScheduled = false;\n            var isOpenParse = angular.isDefined(attrs[prefix + 'IsOpen']) ? $parse(attrs[prefix + 'IsOpen']) : false;\n            var contentParse = options.useContentExp ? $parse(attrs[ttType]) : false;\n            var observers = [];\n\n            var positionTooltip = function() {\n              // check if tooltip exists and is not empty\n              if (!tooltip || !tooltip.html()) { return; }\n\n              if (!positionTimeout) {\n                positionTimeout = $timeout(function() {\n                  // Reset the positioning.\n                  tooltip.css({ top: 0, left: 0 });\n\n                  // Now set the calculated positioning.\n                  var ttCss = $position.positionElements(element, tooltip, ttScope.placement, appendToBody);\n                  ttCss.top += 'px';\n                  ttCss.left += 'px';\n                  ttCss.visibility = 'visible';\n                  tooltip.css(ttCss);\n\n                  positionTimeout = null;\n                }, 0, false);\n              }\n            };\n\n            // Set up the correct scope to allow transclusion later\n            ttScope.origScope = scope;\n\n            // By default, the tooltip is not open.\n            // TODO add ability to start tooltip opened\n            ttScope.isOpen = false;\n            openedTooltips.add(ttScope, {\n              close: hide\n            });\n\n            function toggleTooltipBind() {\n              if (!ttScope.isOpen) {\n                showTooltipBind();\n              } else {\n                hideTooltipBind();\n              }\n            }\n\n            // Show the tooltip with delay if specified, otherwise show it immediately\n            function showTooltipBind() {\n              if (hasEnableExp && !scope.$eval(attrs[prefix + 'Enable'])) {\n                return;\n              }\n\n              cancelHide();\n              prepareTooltip();\n\n              if (ttScope.popupDelay) {\n                // Do nothing if the tooltip was already scheduled to pop-up.\n                // This happens if show is triggered multiple times before any hide is triggered.\n                if (!showTimeout) {\n                  showTimeout = $timeout(show, ttScope.popupDelay, false);\n                }\n              } else {\n                show();\n              }\n            }\n\n            function hideTooltipBind() {\n              cancelShow();\n\n              if (ttScope.popupCloseDelay) {\n                if (!hideTimeout) {\n                  hideTimeout = $timeout(hide, ttScope.popupCloseDelay, false);\n                }\n              } else {\n                hide();\n              }\n            }\n\n            // Show the tooltip popup element.\n            function show() {\n              cancelShow();\n              cancelHide();\n\n              // Don't show empty tooltips.\n              if (!ttScope.content) {\n                return angular.noop;\n              }\n\n              createTooltip();\n\n              // And show the tooltip.\n              ttScope.$evalAsync(function() {\n                ttScope.isOpen = true;\n                assignIsOpen(true);\n                positionTooltip();\n              });\n            }\n\n            function cancelShow() {\n              if (showTimeout) {\n                $timeout.cancel(showTimeout);\n                showTimeout = null;\n              }\n\n              if (positionTimeout) {\n                $timeout.cancel(positionTimeout);\n                positionTimeout = null;\n              }\n            }\n\n            // Hide the tooltip popup element.\n            function hide() {\n              cancelShow();\n              cancelHide();\n\n              if (!ttScope) {\n                return;\n              }\n\n              // First things first: we don't show it anymore.\n              ttScope.$evalAsync(function() {\n                ttScope.isOpen = false;\n                assignIsOpen(false);\n                // And now we remove it from the DOM. However, if we have animation, we\n                // need to wait for it to expire beforehand.\n                // FIXME: this is a placeholder for a port of the transitions library.\n                // The fade transition in TWBS is 150ms.\n                if (ttScope.animation) {\n                  if (!transitionTimeout) {\n                    transitionTimeout = $timeout(removeTooltip, 150, false);\n                  }\n                } else {\n                  removeTooltip();\n                }\n              });\n            }\n\n            function cancelHide() {\n              if (hideTimeout) {\n                $timeout.cancel(hideTimeout);\n                hideTimeout = null;\n              }\n              if (transitionTimeout) {\n                $timeout.cancel(transitionTimeout);\n                transitionTimeout = null;\n              }\n            }\n\n            function createTooltip() {\n              // There can only be one tooltip element per directive shown at once.\n              if (tooltip) {\n                return;\n              }\n\n              tooltipLinkedScope = ttScope.$new();\n              tooltip = tooltipLinker(tooltipLinkedScope, function(tooltip) {\n                if (appendToBody) {\n                  $document.find('body').append(tooltip);\n                } else {\n                  element.after(tooltip);\n                }\n              });\n\n              prepObservers();\n            }\n\n            function removeTooltip() {\n              unregisterObservers();\n\n              transitionTimeout = null;\n              if (tooltip) {\n                tooltip.remove();\n                tooltip = null;\n              }\n              if (tooltipLinkedScope) {\n                tooltipLinkedScope.$destroy();\n                tooltipLinkedScope = null;\n              }\n            }\n\n            /**\n             * Set the inital scope values. Once\n             * the tooltip is created, the observers\n             * will be added to keep things in synch.\n             */\n            function prepareTooltip() {\n              ttScope.title = attrs[prefix + 'Title'];\n              if (contentParse) {\n                ttScope.content = contentParse(scope);\n              } else {\n                ttScope.content = attrs[ttType];\n              }\n\n              ttScope.popupClass = attrs[prefix + 'Class'];\n              ttScope.placement = angular.isDefined(attrs[prefix + 'Placement']) ? attrs[prefix + 'Placement'] : options.placement;\n\n              var delay = parseInt(attrs[prefix + 'PopupDelay'], 10);\n              var closeDelay = parseInt(attrs[prefix + 'PopupCloseDelay'], 10);\n              ttScope.popupDelay = !isNaN(delay) ? delay : options.popupDelay;\n              ttScope.popupCloseDelay = !isNaN(closeDelay) ? closeDelay : options.popupCloseDelay;\n            }\n\n            function assignIsOpen(isOpen) {\n              if (isOpenParse && angular.isFunction(isOpenParse.assign)) {\n                isOpenParse.assign(scope, isOpen);\n              }\n            }\n\n            ttScope.contentExp = function() {\n              return ttScope.content;\n            };\n\n            /**\n             * Observe the relevant attributes.\n             */\n            attrs.$observe('disabled', function(val) {\n              if (val) {\n                cancelShow();\n              }\n\n              if (val && ttScope.isOpen) {\n                hide();\n              }\n            });\n\n            if (isOpenParse) {\n              scope.$watch(isOpenParse, function(val) {\n                /*jshint -W018 */\n                if (ttScope && !val === ttScope.isOpen) {\n                  toggleTooltipBind();\n                }\n                /*jshint +W018 */\n              });\n            }\n\n            function prepObservers() {\n              observers.length = 0;\n\n              if (contentParse) {\n                observers.push(\n                  scope.$watch(contentParse, function(val) {\n                    ttScope.content = val;\n                    if (!val && ttScope.isOpen) {\n                      hide();\n                    }\n                  })\n                );\n\n                observers.push(\n                  tooltipLinkedScope.$watch(function() {\n                    if (!repositionScheduled) {\n                      repositionScheduled = true;\n                      tooltipLinkedScope.$$postDigest(function() {\n                        repositionScheduled = false;\n                        if (ttScope && ttScope.isOpen) {\n                          positionTooltip();\n                        }\n                      });\n                    }\n                  })\n                );\n              } else {\n                observers.push(\n                  attrs.$observe(ttType, function(val) {\n                    ttScope.content = val;\n                    if (!val && ttScope.isOpen) {\n                      hide();\n                    } else {\n                      positionTooltip();\n                    }\n                  })\n                );\n              }\n\n              observers.push(\n                attrs.$observe(prefix + 'Title', function(val) {\n                  ttScope.title = val;\n                  if (ttScope.isOpen) {\n                    positionTooltip();\n                  }\n                })\n              );\n\n              observers.push(\n                attrs.$observe(prefix + 'Placement', function(val) {\n                  ttScope.placement = val ? val : options.placement;\n                  if (ttScope.isOpen) {\n                    positionTooltip();\n                  }\n                })\n              );\n            }\n\n            function unregisterObservers() {\n              if (observers.length) {\n                angular.forEach(observers, function(observer) {\n                  observer();\n                });\n                observers.length = 0;\n              }\n            }\n\n            var unregisterTriggers = function() {\n              triggers.show.forEach(function(trigger) {\n                element.unbind(trigger, showTooltipBind);\n              });\n              triggers.hide.forEach(function(trigger) {\n                trigger.split(' ').forEach(function(hideTrigger) {\n                  element[0].removeEventListener(hideTrigger, hideTooltipBind);\n                });\n              });\n            };\n\n            function prepTriggers() {\n              var val = attrs[prefix + 'Trigger'];\n              unregisterTriggers();\n\n              triggers = getTriggers(val);\n\n              if (triggers.show !== 'none') {\n                triggers.show.forEach(function(trigger, idx) {\n                  // Using raw addEventListener due to jqLite/jQuery bug - #4060\n                  if (trigger === triggers.hide[idx]) {\n                    element[0].addEventListener(trigger, toggleTooltipBind);\n                  } else if (trigger) {\n                    element[0].addEventListener(trigger, showTooltipBind);\n                    triggers.hide[idx].split(' ').forEach(function(trigger) {\n                      element[0].addEventListener(trigger, hideTooltipBind);\n                    });\n                  }\n\n                  element.on('keypress', function(e) {\n                    if (e.which === 27) {\n                      hideTooltipBind();\n                    }\n                  });\n                });\n              }\n            }\n\n            prepTriggers();\n\n            var animation = scope.$eval(attrs[prefix + 'Animation']);\n            ttScope.animation = angular.isDefined(animation) ? !!animation : options.animation;\n\n            var appendToBodyVal = scope.$eval(attrs[prefix + 'AppendToBody']);\n            appendToBody = angular.isDefined(appendToBodyVal) ? appendToBodyVal : appendToBody;\n\n            // if a tooltip is attached to <body> we need to remove it on\n            // location change as its parent scope will probably not be destroyed\n            // by the change.\n            if (appendToBody) {\n              scope.$on('$locationChangeSuccess', function closeTooltipOnLocationChangeSuccess() {\n                if (ttScope.isOpen) {\n                  hide();\n                }\n              });\n            }\n\n            // Make sure tooltip is destroyed and removed.\n            scope.$on('$destroy', function onDestroyTooltip() {\n              cancelShow();\n              cancelHide();\n              unregisterTriggers();\n              removeTooltip();\n              openedTooltips.remove(ttScope);\n              ttScope = null;\n            });\n          };\n        }\n      };\n    };\n  }];\n})\n\n// This is mostly ngInclude code but with a custom scope\n.directive('uibTooltipTemplateTransclude', [\n         '$animate', '$sce', '$compile', '$templateRequest',\nfunction ($animate ,  $sce ,  $compile ,  $templateRequest) {\n  return {\n    link: function(scope, elem, attrs) {\n      var origScope = scope.$eval(attrs.tooltipTemplateTranscludeScope);\n\n      var changeCounter = 0,\n        currentScope,\n        previousElement,\n        currentElement;\n\n      var cleanupLastIncludeContent = function() {\n        if (previousElement) {\n          previousElement.remove();\n          previousElement = null;\n        }\n\n        if (currentScope) {\n          currentScope.$destroy();\n          currentScope = null;\n        }\n\n        if (currentElement) {\n          $animate.leave(currentElement).then(function() {\n            previousElement = null;\n          });\n          previousElement = currentElement;\n          currentElement = null;\n        }\n      };\n\n      scope.$watch($sce.parseAsResourceUrl(attrs.uibTooltipTemplateTransclude), function(src) {\n        var thisChangeId = ++changeCounter;\n\n        if (src) {\n          //set the 2nd param to true to ignore the template request error so that the inner\n          //contents and scope can be cleaned up.\n          $templateRequest(src, true).then(function(response) {\n            if (thisChangeId !== changeCounter) { return; }\n            var newScope = origScope.$new();\n            var template = response;\n\n            var clone = $compile(template)(newScope, function(clone) {\n              cleanupLastIncludeContent();\n              $animate.enter(clone, elem);\n            });\n\n            currentScope = newScope;\n            currentElement = clone;\n\n            currentScope.$emit('$includeContentLoaded', src);\n          }, function() {\n            if (thisChangeId === changeCounter) {\n              cleanupLastIncludeContent();\n              scope.$emit('$includeContentError', src);\n            }\n          });\n          scope.$emit('$includeContentRequested', src);\n        } else {\n          cleanupLastIncludeContent();\n        }\n      });\n\n      scope.$on('$destroy', cleanupLastIncludeContent);\n    }\n  };\n}])\n\n/**\n * Note that it's intentional that these classes are *not* applied through $animate.\n * They must not be animated as they're expected to be present on the tooltip on\n * initialization.\n */\n.directive('uibTooltipClasses', function() {\n  return {\n    restrict: 'A',\n    link: function(scope, element, attrs) {\n      if (scope.placement) {\n        element.addClass(scope.placement);\n      }\n\n      if (scope.popupClass) {\n        element.addClass(scope.popupClass);\n      }\n\n      if (scope.animation()) {\n        element.addClass(attrs.tooltipAnimationClass);\n      }\n    }\n  };\n})\n\n.directive('uibTooltipPopup', function() {\n  return {\n    replace: true,\n    scope: { content: '@', placement: '@', popupClass: '@', animation: '&', isOpen: '&' },\n    templateUrl: 'template/tooltip/tooltip-popup.html',\n    link: function(scope, element) {\n      element.addClass('tooltip');\n    }\n  };\n})\n\n.directive('uibTooltip', [ '$uibTooltip', function($uibTooltip) {\n  return $uibTooltip('uibTooltip', 'tooltip', 'mouseenter');\n}])\n\n.directive('uibTooltipTemplatePopup', function() {\n  return {\n    replace: true,\n    scope: { contentExp: '&', placement: '@', popupClass: '@', animation: '&', isOpen: '&',\n      originScope: '&' },\n    templateUrl: 'template/tooltip/tooltip-template-popup.html',\n    link: function(scope, element) {\n      element.addClass('tooltip');\n    }\n  };\n})\n\n.directive('uibTooltipTemplate', ['$uibTooltip', function($uibTooltip) {\n  return $uibTooltip('uibTooltipTemplate', 'tooltip', 'mouseenter', {\n    useContentExp: true\n  });\n}])\n\n.directive('uibTooltipHtmlPopup', function() {\n  return {\n    replace: true,\n    scope: { contentExp: '&', placement: '@', popupClass: '@', animation: '&', isOpen: '&' },\n    templateUrl: 'template/tooltip/tooltip-html-popup.html',\n    link: function(scope, element) {\n      element.addClass('tooltip');\n    }\n  };\n})\n\n.directive('uibTooltipHtml', ['$uibTooltip', function($uibTooltip) {\n  return $uibTooltip('uibTooltipHtml', 'tooltip', 'mouseenter', {\n    useContentExp: true\n  });\n}]);\n\n/* Deprecated tooltip below */\n\nangular.module('ui.bootstrap.tooltip')\n\n.value('$tooltipSuppressWarning', false)\n\n.provider('$tooltip', ['$uibTooltipProvider', function($uibTooltipProvider) {\n  angular.extend(this, $uibTooltipProvider);\n\n  this.$get = ['$log', '$tooltipSuppressWarning', '$injector', function($log, $tooltipSuppressWarning, $injector) {\n    if (!$tooltipSuppressWarning) {\n      $log.warn('$tooltip is now deprecated. Use $uibTooltip instead.');\n    }\n\n    return $injector.invoke($uibTooltipProvider.$get);\n  }];\n}])\n\n// This is mostly ngInclude code but with a custom scope\n.directive('tooltipTemplateTransclude', [\n         '$animate', '$sce', '$compile', '$templateRequest', '$log', '$tooltipSuppressWarning',\nfunction ($animate ,  $sce ,  $compile ,  $templateRequest,   $log,   $tooltipSuppressWarning) {\n  return {\n    link: function(scope, elem, attrs) {\n      if (!$tooltipSuppressWarning) {\n        $log.warn('tooltip-template-transclude is now deprecated. Use uib-tooltip-template-transclude instead.');\n      }\n\n      var origScope = scope.$eval(attrs.tooltipTemplateTranscludeScope);\n\n      var changeCounter = 0,\n        currentScope,\n        previousElement,\n        currentElement;\n\n      var cleanupLastIncludeContent = function() {\n        if (previousElement) {\n          previousElement.remove();\n          previousElement = null;\n        }\n        if (currentScope) {\n          currentScope.$destroy();\n          currentScope = null;\n        }\n        if (currentElement) {\n          $animate.leave(currentElement).then(function() {\n            previousElement = null;\n          });\n          previousElement = currentElement;\n          currentElement = null;\n        }\n      };\n\n      scope.$watch($sce.parseAsResourceUrl(attrs.tooltipTemplateTransclude), function(src) {\n        var thisChangeId = ++changeCounter;\n\n        if (src) {\n          //set the 2nd param to true to ignore the template request error so that the inner\n          //contents and scope can be cleaned up.\n          $templateRequest(src, true).then(function(response) {\n            if (thisChangeId !== changeCounter) { return; }\n            var newScope = origScope.$new();\n            var template = response;\n\n            var clone = $compile(template)(newScope, function(clone) {\n              cleanupLastIncludeContent();\n              $animate.enter(clone, elem);\n            });\n\n            currentScope = newScope;\n            currentElement = clone;\n\n            currentScope.$emit('$includeContentLoaded', src);\n          }, function() {\n            if (thisChangeId === changeCounter) {\n              cleanupLastIncludeContent();\n              scope.$emit('$includeContentError', src);\n            }\n          });\n          scope.$emit('$includeContentRequested', src);\n        } else {\n          cleanupLastIncludeContent();\n        }\n      });\n\n      scope.$on('$destroy', cleanupLastIncludeContent);\n    }\n  };\n}])\n\n.directive('tooltipClasses', ['$log', '$tooltipSuppressWarning', function($log, $tooltipSuppressWarning) {\n  return {\n    restrict: 'A',\n    link: function(scope, element, attrs) {\n      if (!$tooltipSuppressWarning) {\n        $log.warn('tooltip-classes is now deprecated. Use uib-tooltip-classes instead.');\n      }\n\n      if (scope.placement) {\n        element.addClass(scope.placement);\n      }\n      if (scope.popupClass) {\n        element.addClass(scope.popupClass);\n      }\n      if (scope.animation()) {\n        element.addClass(attrs.tooltipAnimationClass);\n      }\n    }\n  };\n}])\n\n.directive('tooltipPopup', ['$log', '$tooltipSuppressWarning', function($log, $tooltipSuppressWarning) {\n  return {\n    replace: true,\n    scope: { content: '@', placement: '@', popupClass: '@', animation: '&', isOpen: '&' },\n    templateUrl: 'template/tooltip/tooltip-popup.html',\n    link: function(scope, element) {\n      if (!$tooltipSuppressWarning) {\n        $log.warn('tooltip-popup is now deprecated. Use uib-tooltip-popup instead.');\n      }\n\n      element.addClass('tooltip');\n    }\n  };\n}])\n\n.directive('tooltip', ['$tooltip', function($tooltip) {\n  return $tooltip('tooltip', 'tooltip', 'mouseenter');\n}])\n\n.directive('tooltipTemplatePopup', ['$log', '$tooltipSuppressWarning', function($log, $tooltipSuppressWarning) {\n  return {\n    replace: true,\n    scope: { contentExp: '&', placement: '@', popupClass: '@', animation: '&', isOpen: '&',\n      originScope: '&' },\n    templateUrl: 'template/tooltip/tooltip-template-popup.html',\n    link: function(scope, element) {\n      if (!$tooltipSuppressWarning) {\n        $log.warn('tooltip-template-popup is now deprecated. Use uib-tooltip-template-popup instead.');\n      }\n\n      element.addClass('tooltip');\n    }\n  };\n}])\n\n.directive('tooltipTemplate', ['$tooltip', function($tooltip) {\n  return $tooltip('tooltipTemplate', 'tooltip', 'mouseenter', {\n    useContentExp: true\n  });\n}])\n\n.directive('tooltipHtmlPopup', ['$log', '$tooltipSuppressWarning', function($log, $tooltipSuppressWarning) {\n  return {\n    replace: true,\n    scope: { contentExp: '&', placement: '@', popupClass: '@', animation: '&', isOpen: '&' },\n    templateUrl: 'template/tooltip/tooltip-html-popup.html',\n    link: function(scope, element) {\n      if (!$tooltipSuppressWarning) {\n        $log.warn('tooltip-html-popup is now deprecated. Use uib-tooltip-html-popup instead.');\n      }\n\n      element.addClass('tooltip');\n    }\n  };\n}])\n\n.directive('tooltipHtml', ['$tooltip', function($tooltip) {\n  return $tooltip('tooltipHtml', 'tooltip', 'mouseenter', {\n    useContentExp: true\n  });\n}]);\n\n/**\n * The following features are still outstanding: popup delay, animation as a\n * function, placement as a function, inside, support for more triggers than\n * just mouse enter/leave, and selector delegatation.\n */\nangular.module('ui.bootstrap.popover', ['ui.bootstrap.tooltip'])\n\n.directive('uibPopoverTemplatePopup', function() {\n  return {\n    replace: true,\n    scope: { title: '@', contentExp: '&', placement: '@', popupClass: '@', animation: '&', isOpen: '&',\n      originScope: '&' },\n    templateUrl: 'template/popover/popover-template.html',\n    link: function(scope, element) {\n      element.addClass('popover');\n    }\n  };\n})\n\n.directive('uibPopoverTemplate', ['$uibTooltip', function($uibTooltip) {\n  return $uibTooltip('uibPopoverTemplate', 'popover', 'click', {\n    useContentExp: true\n  });\n}])\n\n.directive('uibPopoverHtmlPopup', function() {\n  return {\n    replace: true,\n    scope: { contentExp: '&', title: '@', placement: '@', popupClass: '@', animation: '&', isOpen: '&' },\n    templateUrl: 'template/popover/popover-html.html',\n    link: function(scope, element) {\n      element.addClass('popover');\n    }\n  };\n})\n\n.directive('uibPopoverHtml', ['$uibTooltip', function($uibTooltip) {\n  return $uibTooltip('uibPopoverHtml', 'popover', 'click', {\n    useContentExp: true\n  });\n}])\n\n.directive('uibPopoverPopup', function() {\n  return {\n    replace: true,\n    scope: { title: '@', content: '@', placement: '@', popupClass: '@', animation: '&', isOpen: '&' },\n    templateUrl: 'template/popover/popover.html',\n    link: function(scope, element) {\n      element.addClass('popover');\n    }\n  };\n})\n\n.directive('uibPopover', ['$uibTooltip', function($uibTooltip) {\n  return $uibTooltip('uibPopover', 'popover', 'click');\n}]);\n\n/* Deprecated popover below */\n\nangular.module('ui.bootstrap.popover')\n\n.value('$popoverSuppressWarning', false)\n\n.directive('popoverTemplatePopup', ['$log', '$popoverSuppressWarning', function($log, $popoverSuppressWarning) {\n  return {\n    replace: true,\n    scope: { title: '@', contentExp: '&', placement: '@', popupClass: '@', animation: '&', isOpen: '&',\n      originScope: '&' },\n    templateUrl: 'template/popover/popover-template.html',\n    link: function(scope, element) {\n      if (!$popoverSuppressWarning) {\n        $log.warn('popover-template-popup is now deprecated. Use uib-popover-template-popup instead.');\n      }\n\n      element.addClass('popover');\n    }\n  };\n}])\n\n.directive('popoverTemplate', ['$tooltip', function($tooltip) {\n  return $tooltip('popoverTemplate', 'popover', 'click', {\n    useContentExp: true\n  });\n}])\n\n.directive('popoverHtmlPopup', ['$log', '$popoverSuppressWarning', function($log, $popoverSuppressWarning) {\n  return {\n    replace: true,\n    scope: { contentExp: '&', title: '@', placement: '@', popupClass: '@', animation: '&', isOpen: '&' },\n    templateUrl: 'template/popover/popover-html.html',\n    link: function(scope, element) {\n      if (!$popoverSuppressWarning) {\n        $log.warn('popover-html-popup is now deprecated. Use uib-popover-html-popup instead.');\n      }\n\n      element.addClass('popover');\n    }\n  };\n}])\n\n.directive('popoverHtml', ['$tooltip', function($tooltip) {\n  return $tooltip('popoverHtml', 'popover', 'click', {\n    useContentExp: true\n  });\n}])\n\n.directive('popoverPopup', ['$log', '$popoverSuppressWarning', function($log, $popoverSuppressWarning) {\n  return {\n    replace: true,\n    scope: { title: '@', content: '@', placement: '@', popupClass: '@', animation: '&', isOpen: '&' },\n    templateUrl: 'template/popover/popover.html',\n    link: function(scope, element) {\n      if (!$popoverSuppressWarning) {\n        $log.warn('popover-popup is now deprecated. Use uib-popover-popup instead.');\n      }\n\n      element.addClass('popover');\n    }\n  };\n}])\n\n.directive('popover', ['$tooltip', function($tooltip) {\n\n  return $tooltip('popover', 'popover', 'click');\n}]);\n\nangular.module('ui.bootstrap.progressbar', [])\n\n.constant('uibProgressConfig', {\n  animate: true,\n  max: 100\n})\n\n.controller('UibProgressController', ['$scope', '$attrs', 'uibProgressConfig', function($scope, $attrs, progressConfig) {\n  var self = this,\n      animate = angular.isDefined($attrs.animate) ? $scope.$parent.$eval($attrs.animate) : progressConfig.animate;\n\n  this.bars = [];\n  $scope.max = angular.isDefined($scope.max) ? $scope.max : progressConfig.max;\n\n  this.addBar = function(bar, element, attrs) {\n    if (!animate) {\n      element.css({'transition': 'none'});\n    }\n\n    this.bars.push(bar);\n\n    bar.max = $scope.max;\n    bar.title = attrs && angular.isDefined(attrs.title) ? attrs.title : 'progressbar';\n\n    bar.$watch('value', function(value) {\n      bar.recalculatePercentage();\n    });\n\n    bar.recalculatePercentage = function() {\n      var totalPercentage = self.bars.reduce(function(total, bar) {\n        bar.percent = +(100 * bar.value / bar.max).toFixed(2);\n        return total + bar.percent;\n      }, 0);\n\n      if (totalPercentage > 100) {\n        bar.percent -= totalPercentage - 100;\n      }\n    };\n\n    bar.$on('$destroy', function() {\n      element = null;\n      self.removeBar(bar);\n    });\n  };\n\n  this.removeBar = function(bar) {\n    this.bars.splice(this.bars.indexOf(bar), 1);\n    this.bars.forEach(function (bar) {\n      bar.recalculatePercentage();\n    });\n  };\n\n  $scope.$watch('max', function(max) {\n    self.bars.forEach(function(bar) {\n      bar.max = $scope.max;\n      bar.recalculatePercentage();\n    });\n  });\n}])\n\n.directive('uibProgress', function() {\n  return {\n    replace: true,\n    transclude: true,\n    controller: 'UibProgressController',\n    require: 'uibProgress',\n    scope: {\n      max: '=?'\n    },\n    templateUrl: 'template/progressbar/progress.html'\n  };\n})\n\n.directive('uibBar', function() {\n  return {\n    replace: true,\n    transclude: true,\n    require: '^uibProgress',\n    scope: {\n      value: '=',\n      type: '@'\n    },\n    templateUrl: 'template/progressbar/bar.html',\n    link: function(scope, element, attrs, progressCtrl) {\n      progressCtrl.addBar(scope, element, attrs);\n    }\n  };\n})\n\n.directive('uibProgressbar', function() {\n  return {\n    replace: true,\n    transclude: true,\n    controller: 'UibProgressController',\n    scope: {\n      value: '=',\n      max: '=?',\n      type: '@'\n    },\n    templateUrl: 'template/progressbar/progressbar.html',\n    link: function(scope, element, attrs, progressCtrl) {\n      progressCtrl.addBar(scope, angular.element(element.children()[0]), {title: attrs.title});\n    }\n  };\n});\n\n/* Deprecated progressbar below */\n\nangular.module('ui.bootstrap.progressbar')\n\n.value('$progressSuppressWarning', false)\n\n.controller('ProgressController', ['$scope', '$attrs', 'uibProgressConfig', '$log', '$progressSuppressWarning', function($scope, $attrs, progressConfig, $log, $progressSuppressWarning) {\n  if (!$progressSuppressWarning) {\n    $log.warn('ProgressController is now deprecated. Use UibProgressController instead.');\n  }\n\n  var self = this,\n    animate = angular.isDefined($attrs.animate) ? $scope.$parent.$eval($attrs.animate) : progressConfig.animate;\n\n  this.bars = [];\n  $scope.max = angular.isDefined($scope.max) ? $scope.max : progressConfig.max;\n\n  this.addBar = function(bar, element, attrs) {\n    if (!animate) {\n      element.css({'transition': 'none'});\n    }\n\n    this.bars.push(bar);\n\n    bar.max = $scope.max;\n    bar.title = attrs && angular.isDefined(attrs.title) ? attrs.title : 'progressbar';\n\n    bar.$watch('value', function(value) {\n      bar.recalculatePercentage();\n    });\n\n    bar.recalculatePercentage = function() {\n      bar.percent = +(100 * bar.value / bar.max).toFixed(2);\n\n      var totalPercentage = self.bars.reduce(function(total, bar) {\n        return total + bar.percent;\n      }, 0);\n\n      if (totalPercentage > 100) {\n        bar.percent -= totalPercentage - 100;\n      }\n    };\n\n    bar.$on('$destroy', function() {\n      element = null;\n      self.removeBar(bar);\n    });\n  };\n\n  this.removeBar = function(bar) {\n    this.bars.splice(this.bars.indexOf(bar), 1);\n  };\n\n  $scope.$watch('max', function(max) {\n    self.bars.forEach(function(bar) {\n      bar.max = $scope.max;\n      bar.recalculatePercentage();\n    });\n  });\n}])\n\n.directive('progress', ['$log', '$progressSuppressWarning', function($log, $progressSuppressWarning) {\n  return {\n    replace: true,\n    transclude: true,\n    controller: 'ProgressController',\n    require: 'progress',\n    scope: {\n      max: '=?',\n      title: '@?'\n    },\n    templateUrl: 'template/progressbar/progress.html',\n    link: function() {\n      if (!$progressSuppressWarning) {\n        $log.warn('progress is now deprecated. Use uib-progress instead.');\n      }\n    }\n  };\n}])\n\n.directive('bar', ['$log', '$progressSuppressWarning', function($log, $progressSuppressWarning) {\n  return {\n    replace: true,\n    transclude: true,\n    require: '^progress',\n    scope: {\n      value: '=',\n      type: '@'\n    },\n    templateUrl: 'template/progressbar/bar.html',\n    link: function(scope, element, attrs, progressCtrl) {\n      if (!$progressSuppressWarning) {\n        $log.warn('bar is now deprecated. Use uib-bar instead.');\n      }\n      progressCtrl.addBar(scope, element);\n    }\n  };\n}])\n\n.directive('progressbar', ['$log', '$progressSuppressWarning', function($log, $progressSuppressWarning) {\n  return {\n    replace: true,\n    transclude: true,\n    controller: 'ProgressController',\n    scope: {\n      value: '=',\n      max: '=?',\n      type: '@'\n    },\n    templateUrl: 'template/progressbar/progressbar.html',\n    link: function(scope, element, attrs, progressCtrl) {\n      if (!$progressSuppressWarning) {\n        $log.warn('progressbar is now deprecated. Use uib-progressbar instead.');\n      }\n      progressCtrl.addBar(scope, angular.element(element.children()[0]), {title: attrs.title});\n    }\n  };\n}]);\n\nangular.module('ui.bootstrap.rating', [])\n\n.constant('uibRatingConfig', {\n  max: 5,\n  stateOn: null,\n  stateOff: null,\n  titles : ['one', 'two', 'three', 'four', 'five']\n})\n\n.controller('UibRatingController', ['$scope', '$attrs', 'uibRatingConfig', function($scope, $attrs, ratingConfig) {\n  var ngModelCtrl  = { $setViewValue: angular.noop };\n\n  this.init = function(ngModelCtrl_) {\n    ngModelCtrl = ngModelCtrl_;\n    ngModelCtrl.$render = this.render;\n\n    ngModelCtrl.$formatters.push(function(value) {\n      if (angular.isNumber(value) && value << 0 !== value) {\n        value = Math.round(value);\n      }\n      return value;\n    });\n\n    this.stateOn = angular.isDefined($attrs.stateOn) ? $scope.$parent.$eval($attrs.stateOn) : ratingConfig.stateOn;\n    this.stateOff = angular.isDefined($attrs.stateOff) ? $scope.$parent.$eval($attrs.stateOff) : ratingConfig.stateOff;\n    var tmpTitles = angular.isDefined($attrs.titles)  ? $scope.$parent.$eval($attrs.titles) : ratingConfig.titles ;\n    this.titles = angular.isArray(tmpTitles) && tmpTitles.length > 0 ?\n      tmpTitles : ratingConfig.titles;\n\n    var ratingStates = angular.isDefined($attrs.ratingStates) ?\n      $scope.$parent.$eval($attrs.ratingStates) :\n      new Array(angular.isDefined($attrs.max) ? $scope.$parent.$eval($attrs.max) : ratingConfig.max);\n    $scope.range = this.buildTemplateObjects(ratingStates);\n  };\n\n  this.buildTemplateObjects = function(states) {\n    for (var i = 0, n = states.length; i < n; i++) {\n      states[i] = angular.extend({ index: i }, { stateOn: this.stateOn, stateOff: this.stateOff, title: this.getTitle(i) }, states[i]);\n    }\n    return states;\n  };\n\n  this.getTitle = function(index) {\n    if (index >= this.titles.length) {\n      return index + 1;\n    } else {\n      return this.titles[index];\n    }\n  };\n\n  $scope.rate = function(value) {\n    if (!$scope.readonly && value >= 0 && value <= $scope.range.length) {\n      ngModelCtrl.$setViewValue(ngModelCtrl.$viewValue === value ? 0 : value);\n      ngModelCtrl.$render();\n    }\n  };\n\n  $scope.enter = function(value) {\n    if (!$scope.readonly) {\n      $scope.value = value;\n    }\n    $scope.onHover({value: value});\n  };\n\n  $scope.reset = function() {\n    $scope.value = ngModelCtrl.$viewValue;\n    $scope.onLeave();\n  };\n\n  $scope.onKeydown = function(evt) {\n    if (/(37|38|39|40)/.test(evt.which)) {\n      evt.preventDefault();\n      evt.stopPropagation();\n      $scope.rate($scope.value + (evt.which === 38 || evt.which === 39 ? 1 : -1));\n    }\n  };\n\n  this.render = function() {\n    $scope.value = ngModelCtrl.$viewValue;\n  };\n}])\n\n.directive('uibRating', function() {\n  return {\n    require: ['uibRating', 'ngModel'],\n    scope: {\n      readonly: '=?',\n      onHover: '&',\n      onLeave: '&'\n    },\n    controller: 'UibRatingController',\n    templateUrl: 'template/rating/rating.html',\n    replace: true,\n    link: function(scope, element, attrs, ctrls) {\n      var ratingCtrl = ctrls[0], ngModelCtrl = ctrls[1];\n      ratingCtrl.init(ngModelCtrl);\n    }\n  };\n});\n\n/* Deprecated rating below */\n\nangular.module('ui.bootstrap.rating')\n\n.value('$ratingSuppressWarning', false)\n\n.controller('RatingController', ['$scope', '$attrs', '$controller', '$log', '$ratingSuppressWarning', function($scope, $attrs, $controller, $log, $ratingSuppressWarning) {\n  if (!$ratingSuppressWarning) {\n    $log.warn('RatingController is now deprecated. Use UibRatingController instead.');\n  }\n\n  angular.extend(this, $controller('UibRatingController', {\n    $scope: $scope,\n    $attrs: $attrs\n  }));\n}])\n\n.directive('rating', ['$log', '$ratingSuppressWarning', function($log, $ratingSuppressWarning) {\n  return {\n    require: ['rating', 'ngModel'],\n    scope: {\n      readonly: '=?',\n      onHover: '&',\n      onLeave: '&'\n    },\n    controller: 'RatingController',\n    templateUrl: 'template/rating/rating.html',\n    replace: true,\n    link: function(scope, element, attrs, ctrls) {\n      if (!$ratingSuppressWarning) {\n        $log.warn('rating is now deprecated. Use uib-rating instead.');\n      }\n      var ratingCtrl = ctrls[0], ngModelCtrl = ctrls[1];\n      ratingCtrl.init(ngModelCtrl);\n    }\n  };\n}]);\n\n\n/**\n * @ngdoc overview\n * @name ui.bootstrap.tabs\n *\n * @description\n * AngularJS version of the tabs directive.\n */\n\nangular.module('ui.bootstrap.tabs', [])\n\n.controller('UibTabsetController', ['$scope', function ($scope) {\n  var ctrl = this,\n      tabs = ctrl.tabs = $scope.tabs = [];\n\n  ctrl.select = function(selectedTab) {\n    angular.forEach(tabs, function(tab) {\n      if (tab.active && tab !== selectedTab) {\n        tab.active = false;\n        tab.onDeselect();\n        selectedTab.selectCalled = false;\n      }\n    });\n    selectedTab.active = true;\n    // only call select if it has not already been called\n    if (!selectedTab.selectCalled) {\n      selectedTab.onSelect();\n      selectedTab.selectCalled = true;\n    }\n  };\n\n  ctrl.addTab = function addTab(tab) {\n    tabs.push(tab);\n    // we can't run the select function on the first tab\n    // since that would select it twice\n    if (tabs.length === 1 && tab.active !== false) {\n      tab.active = true;\n    } else if (tab.active) {\n      ctrl.select(tab);\n    } else {\n      tab.active = false;\n    }\n  };\n\n  ctrl.removeTab = function removeTab(tab) {\n    var index = tabs.indexOf(tab);\n    //Select a new tab if the tab to be removed is selected and not destroyed\n    if (tab.active && tabs.length > 1 && !destroyed) {\n      //If this is the last tab, select the previous tab. else, the next tab.\n      var newActiveIndex = index == tabs.length - 1 ? index - 1 : index + 1;\n      ctrl.select(tabs[newActiveIndex]);\n    }\n    tabs.splice(index, 1);\n  };\n\n  var destroyed;\n  $scope.$on('$destroy', function() {\n    destroyed = true;\n  });\n}])\n\n/**\n * @ngdoc directive\n * @name ui.bootstrap.tabs.directive:tabset\n * @restrict EA\n *\n * @description\n * Tabset is the outer container for the tabs directive\n *\n * @param {boolean=} vertical Whether or not to use vertical styling for the tabs.\n * @param {boolean=} justified Whether or not to use justified styling for the tabs.\n *\n * @example\n<example module=\"ui.bootstrap\">\n  <file name=\"index.html\">\n    <uib-tabset>\n      <uib-tab heading=\"Tab 1\"><b>First</b> Content!</uib-tab>\n      <uib-tab heading=\"Tab 2\"><i>Second</i> Content!</uib-tab>\n    </uib-tabset>\n    <hr />\n    <uib-tabset vertical=\"true\">\n      <uib-tab heading=\"Vertical Tab 1\"><b>First</b> Vertical Content!</uib-tab>\n      <uib-tab heading=\"Vertical Tab 2\"><i>Second</i> Vertical Content!</uib-tab>\n    </uib-tabset>\n    <uib-tabset justified=\"true\">\n      <uib-tab heading=\"Justified Tab 1\"><b>First</b> Justified Content!</uib-tab>\n      <uib-tab heading=\"Justified Tab 2\"><i>Second</i> Justified Content!</uib-tab>\n    </uib-tabset>\n  </file>\n</example>\n */\n.directive('uibTabset', function() {\n  return {\n    restrict: 'EA',\n    transclude: true,\n    replace: true,\n    scope: {\n      type: '@'\n    },\n    controller: 'UibTabsetController',\n    templateUrl: 'template/tabs/tabset.html',\n    link: function(scope, element, attrs) {\n      scope.vertical = angular.isDefined(attrs.vertical) ? scope.$parent.$eval(attrs.vertical) : false;\n      scope.justified = angular.isDefined(attrs.justified) ? scope.$parent.$eval(attrs.justified) : false;\n    }\n  };\n})\n\n/**\n * @ngdoc directive\n * @name ui.bootstrap.tabs.directive:tab\n * @restrict EA\n *\n * @param {string=} heading The visible heading, or title, of the tab. Set HTML headings with {@link ui.bootstrap.tabs.directive:tabHeading tabHeading}.\n * @param {string=} select An expression to evaluate when the tab is selected.\n * @param {boolean=} active A binding, telling whether or not this tab is selected.\n * @param {boolean=} disabled A binding, telling whether or not this tab is disabled.\n *\n * @description\n * Creates a tab with a heading and content. Must be placed within a {@link ui.bootstrap.tabs.directive:tabset tabset}.\n *\n * @example\n<example module=\"ui.bootstrap\">\n  <file name=\"index.html\">\n    <div ng-controller=\"TabsDemoCtrl\">\n      <button class=\"btn btn-small\" ng-click=\"items[0].active = true\">\n        Select item 1, using active binding\n      </button>\n      <button class=\"btn btn-small\" ng-click=\"items[1].disabled = !items[1].disabled\">\n        Enable/disable item 2, using disabled binding\n      </button>\n      <br />\n      <uib-tabset>\n        <uib-tab heading=\"Tab 1\">First Tab</uib-tab>\n        <uib-tab select=\"alertMe()\">\n          <uib-tab-heading><i class=\"icon-bell\"></i> Alert me!</tab-heading>\n          Second Tab, with alert callback and html heading!\n        </uib-tab>\n        <uib-tab ng-repeat=\"item in items\"\n          heading=\"{{item.title}}\"\n          disabled=\"item.disabled\"\n          active=\"item.active\">\n          {{item.content}}\n        </uib-tab>\n      </uib-tabset>\n    </div>\n  </file>\n  <file name=\"script.js\">\n    function TabsDemoCtrl($scope) {\n      $scope.items = [\n        { title:\"Dynamic Title 1\", content:\"Dynamic Item 0\" },\n        { title:\"Dynamic Title 2\", content:\"Dynamic Item 1\", disabled: true }\n      ];\n\n      $scope.alertMe = function() {\n        setTimeout(function() {\n          alert(\"You've selected the alert tab!\");\n        });\n      };\n    };\n  </file>\n</example>\n */\n\n/**\n * @ngdoc directive\n * @name ui.bootstrap.tabs.directive:tabHeading\n * @restrict EA\n *\n * @description\n * Creates an HTML heading for a {@link ui.bootstrap.tabs.directive:tab tab}. Must be placed as a child of a tab element.\n *\n * @example\n<example module=\"ui.bootstrap\">\n  <file name=\"index.html\">\n    <uib-tabset>\n      <uib-tab>\n        <uib-tab-heading><b>HTML</b> in my titles?!</tab-heading>\n        And some content, too!\n      </uib-tab>\n      <uib-tab>\n        <uib-tab-heading><i class=\"icon-heart\"></i> Icon heading?!?</tab-heading>\n        That's right.\n      </uib-tab>\n    </uib-tabset>\n  </file>\n</example>\n */\n.directive('uibTab', ['$parse', function($parse) {\n  return {\n    require: '^uibTabset',\n    restrict: 'EA',\n    replace: true,\n    templateUrl: 'template/tabs/tab.html',\n    transclude: true,\n    scope: {\n      active: '=?',\n      heading: '@',\n      onSelect: '&select', //This callback is called in contentHeadingTransclude\n                          //once it inserts the tab's content into the dom\n      onDeselect: '&deselect'\n    },\n    controller: function() {\n      //Empty controller so other directives can require being 'under' a tab\n    },\n    link: function(scope, elm, attrs, tabsetCtrl, transclude) {\n      scope.$watch('active', function(active) {\n        if (active) {\n          tabsetCtrl.select(scope);\n        }\n      });\n\n      scope.disabled = false;\n      if (attrs.disable) {\n        scope.$parent.$watch($parse(attrs.disable), function(value) {\n          scope.disabled = !! value;\n        });\n      }\n\n      scope.select = function() {\n        if (!scope.disabled) {\n          scope.active = true;\n        }\n      };\n\n      tabsetCtrl.addTab(scope);\n      scope.$on('$destroy', function() {\n        tabsetCtrl.removeTab(scope);\n      });\n\n      //We need to transclude later, once the content container is ready.\n      //when this link happens, we're inside a tab heading.\n      scope.$transcludeFn = transclude;\n    }\n  };\n}])\n\n.directive('uibTabHeadingTransclude', function() {\n  return {\n    restrict: 'A',\n    require: ['?^uibTab', '?^tab'], // TODO: change to '^uibTab' after deprecation removal\n    link: function(scope, elm) {\n      scope.$watch('headingElement', function updateHeadingElement(heading) {\n        if (heading) {\n          elm.html('');\n          elm.append(heading);\n        }\n      });\n    }\n  };\n})\n\n.directive('uibTabContentTransclude', function() {\n  return {\n    restrict: 'A',\n    require: ['?^uibTabset', '?^tabset'], // TODO: change to '^uibTabset' after deprecation removal\n    link: function(scope, elm, attrs) {\n      var tab = scope.$eval(attrs.uibTabContentTransclude);\n\n      //Now our tab is ready to be transcluded: both the tab heading area\n      //and the tab content area are loaded.  Transclude 'em both.\n      tab.$transcludeFn(tab.$parent, function(contents) {\n        angular.forEach(contents, function(node) {\n          if (isTabHeading(node)) {\n            //Let tabHeadingTransclude know.\n            tab.headingElement = node;\n          } else {\n            elm.append(node);\n          }\n        });\n      });\n    }\n  };\n\n  function isTabHeading(node) {\n    return node.tagName && (\n      node.hasAttribute('tab-heading') || // TODO: remove after deprecation removal\n      node.hasAttribute('data-tab-heading') || // TODO: remove after deprecation removal\n      node.hasAttribute('x-tab-heading') || // TODO: remove after deprecation removal\n      node.hasAttribute('uib-tab-heading') ||\n      node.hasAttribute('data-uib-tab-heading') ||\n      node.hasAttribute('x-uib-tab-heading') ||\n      node.tagName.toLowerCase() === 'tab-heading' || // TODO: remove after deprecation removal\n      node.tagName.toLowerCase() === 'data-tab-heading' || // TODO: remove after deprecation removal\n      node.tagName.toLowerCase() === 'x-tab-heading' || // TODO: remove after deprecation removal\n      node.tagName.toLowerCase() === 'uib-tab-heading' ||\n      node.tagName.toLowerCase() === 'data-uib-tab-heading' ||\n      node.tagName.toLowerCase() === 'x-uib-tab-heading'\n    );\n  }\n});\n\n/* deprecated tabs below */\n\nangular.module('ui.bootstrap.tabs')\n\n  .value('$tabsSuppressWarning', false)\n\n  .controller('TabsetController', ['$scope', '$controller', '$log', '$tabsSuppressWarning', function($scope, $controller, $log, $tabsSuppressWarning) {\n    if (!$tabsSuppressWarning) {\n      $log.warn('TabsetController is now deprecated. Use UibTabsetController instead.');\n    }\n\n    angular.extend(this, $controller('UibTabsetController', {\n      $scope: $scope\n    }));\n  }])\n\n  .directive('tabset', ['$log', '$tabsSuppressWarning', function($log, $tabsSuppressWarning) {\n    return {\n      restrict: 'EA',\n      transclude: true,\n      replace: true,\n      scope: {\n        type: '@'\n      },\n      controller: 'TabsetController',\n      templateUrl: 'template/tabs/tabset.html',\n      link: function(scope, element, attrs) {\n\n        if (!$tabsSuppressWarning) {\n          $log.warn('tabset is now deprecated. Use uib-tabset instead.');\n        }\n        scope.vertical = angular.isDefined(attrs.vertical) ? scope.$parent.$eval(attrs.vertical) : false;\n        scope.justified = angular.isDefined(attrs.justified) ? scope.$parent.$eval(attrs.justified) : false;\n      }\n    };\n  }])\n\n  .directive('tab', ['$parse', '$log', '$tabsSuppressWarning', function($parse, $log, $tabsSuppressWarning) {\n    return {\n      require: '^tabset',\n      restrict: 'EA',\n      replace: true,\n      templateUrl: 'template/tabs/tab.html',\n      transclude: true,\n      scope: {\n        active: '=?',\n        heading: '@',\n        onSelect: '&select', //This callback is called in contentHeadingTransclude\n        //once it inserts the tab's content into the dom\n        onDeselect: '&deselect'\n      },\n      controller: function() {\n        //Empty controller so other directives can require being 'under' a tab\n      },\n      link: function(scope, elm, attrs, tabsetCtrl, transclude) {\n        if (!$tabsSuppressWarning) {\n          $log.warn('tab is now deprecated. Use uib-tab instead.');\n        }\n\n        scope.$watch('active', function(active) {\n          if (active) {\n            tabsetCtrl.select(scope);\n          }\n        });\n\n        scope.disabled = false;\n        if (attrs.disable) {\n          scope.$parent.$watch($parse(attrs.disable), function(value) {\n            scope.disabled = !!value;\n          });\n        }\n\n        scope.select = function() {\n          if (!scope.disabled) {\n            scope.active = true;\n          }\n        };\n\n        tabsetCtrl.addTab(scope);\n        scope.$on('$destroy', function() {\n          tabsetCtrl.removeTab(scope);\n        });\n\n        //We need to transclude later, once the content container is ready.\n        //when this link happens, we're inside a tab heading.\n        scope.$transcludeFn = transclude;\n      }\n    };\n  }])\n\n  .directive('tabHeadingTransclude', ['$log', '$tabsSuppressWarning', function($log, $tabsSuppressWarning) {\n    return {\n      restrict: 'A',\n      require: '^tab',\n      link: function(scope, elm) {\n        if (!$tabsSuppressWarning) {\n          $log.warn('tab-heading-transclude is now deprecated. Use uib-tab-heading-transclude instead.');\n        }\n\n        scope.$watch('headingElement', function updateHeadingElement(heading) {\n          if (heading) {\n            elm.html('');\n            elm.append(heading);\n          }\n        });\n      }\n    };\n  }])\n\n  .directive('tabContentTransclude', ['$log', '$tabsSuppressWarning', function($log, $tabsSuppressWarning) {\n    return {\n      restrict: 'A',\n      require: '^tabset',\n      link: function(scope, elm, attrs) {\n        if (!$tabsSuppressWarning) {\n          $log.warn('tab-content-transclude is now deprecated. Use uib-tab-content-transclude instead.');\n        }\n\n        var tab = scope.$eval(attrs.tabContentTransclude);\n\n        //Now our tab is ready to be transcluded: both the tab heading area\n        //and the tab content area are loaded.  Transclude 'em both.\n        tab.$transcludeFn(tab.$parent, function(contents) {\n          angular.forEach(contents, function(node) {\n            if (isTabHeading(node)) {\n              //Let tabHeadingTransclude know.\n              tab.headingElement = node;\n            }\n            else {\n              elm.append(node);\n            }\n          });\n        });\n      }\n    };\n\n    function isTabHeading(node) {\n      return node.tagName && (\n          node.hasAttribute('tab-heading') ||\n          node.hasAttribute('data-tab-heading') ||\n          node.hasAttribute('x-tab-heading') ||\n          node.tagName.toLowerCase() === 'tab-heading' ||\n          node.tagName.toLowerCase() === 'data-tab-heading' ||\n          node.tagName.toLowerCase() === 'x-tab-heading'\n        );\n    }\n  }]);\n\nangular.module('ui.bootstrap.timepicker', [])\n\n.constant('uibTimepickerConfig', {\n  hourStep: 1,\n  minuteStep: 1,\n  showMeridian: true,\n  meridians: null,\n  readonlyInput: false,\n  mousewheel: true,\n  arrowkeys: true,\n  showSpinners: true\n})\n\n.controller('UibTimepickerController', ['$scope', '$element', '$attrs', '$parse', '$log', '$locale', 'uibTimepickerConfig', function($scope, $element, $attrs, $parse, $log, $locale, timepickerConfig) {\n  var selected = new Date(),\n      ngModelCtrl = { $setViewValue: angular.noop }, // nullModelCtrl\n      meridians = angular.isDefined($attrs.meridians) ? $scope.$parent.$eval($attrs.meridians) : timepickerConfig.meridians || $locale.DATETIME_FORMATS.AMPMS;\n\n  $scope.tabindex = angular.isDefined($attrs.tabindex) ? $attrs.tabindex : 0;\n  $element.removeAttr('tabindex');\n\n  this.init = function(ngModelCtrl_, inputs) {\n    ngModelCtrl = ngModelCtrl_;\n    ngModelCtrl.$render = this.render;\n\n    ngModelCtrl.$formatters.unshift(function(modelValue) {\n      return modelValue ? new Date(modelValue) : null;\n    });\n\n    var hoursInputEl = inputs.eq(0),\n        minutesInputEl = inputs.eq(1);\n\n    var mousewheel = angular.isDefined($attrs.mousewheel) ? $scope.$parent.$eval($attrs.mousewheel) : timepickerConfig.mousewheel;\n    if (mousewheel) {\n      this.setupMousewheelEvents(hoursInputEl, minutesInputEl);\n    }\n\n    var arrowkeys = angular.isDefined($attrs.arrowkeys) ? $scope.$parent.$eval($attrs.arrowkeys) : timepickerConfig.arrowkeys;\n    if (arrowkeys) {\n      this.setupArrowkeyEvents(hoursInputEl, minutesInputEl);\n    }\n\n    $scope.readonlyInput = angular.isDefined($attrs.readonlyInput) ? $scope.$parent.$eval($attrs.readonlyInput) : timepickerConfig.readonlyInput;\n    this.setupInputEvents(hoursInputEl, minutesInputEl);\n  };\n\n  var hourStep = timepickerConfig.hourStep;\n  if ($attrs.hourStep) {\n    $scope.$parent.$watch($parse($attrs.hourStep), function(value) {\n      hourStep = parseInt(value, 10);\n    });\n  }\n\n  var minuteStep = timepickerConfig.minuteStep;\n  if ($attrs.minuteStep) {\n    $scope.$parent.$watch($parse($attrs.minuteStep), function(value) {\n      minuteStep = parseInt(value, 10);\n    });\n  }\n\n  var min;\n  $scope.$parent.$watch($parse($attrs.min), function(value) {\n    var dt = new Date(value);\n    min = isNaN(dt) ? undefined : dt;\n  });\n\n  var max;\n  $scope.$parent.$watch($parse($attrs.max), function(value) {\n    var dt = new Date(value);\n    max = isNaN(dt) ? undefined : dt;\n  });\n\n  $scope.noIncrementHours = function() {\n    var incrementedSelected = addMinutes(selected, hourStep * 60);\n    return incrementedSelected > max ||\n      (incrementedSelected < selected && incrementedSelected < min);\n  };\n\n  $scope.noDecrementHours = function() {\n    var decrementedSelected = addMinutes(selected, -hourStep * 60);\n    return decrementedSelected < min ||\n      (decrementedSelected > selected && decrementedSelected > max);\n  };\n\n  $scope.noIncrementMinutes = function() {\n    var incrementedSelected = addMinutes(selected, minuteStep);\n    return incrementedSelected > max ||\n      (incrementedSelected < selected && incrementedSelected < min);\n  };\n\n  $scope.noDecrementMinutes = function() {\n    var decrementedSelected = addMinutes(selected, -minuteStep);\n    return decrementedSelected < min ||\n      (decrementedSelected > selected && decrementedSelected > max);\n  };\n\n  $scope.noToggleMeridian = function() {\n    if (selected.getHours() < 13) {\n      return addMinutes(selected, 12 * 60) > max;\n    } else {\n      return addMinutes(selected, -12 * 60) < min;\n    }\n  };\n\n  // 12H / 24H mode\n  $scope.showMeridian = timepickerConfig.showMeridian;\n  if ($attrs.showMeridian) {\n    $scope.$parent.$watch($parse($attrs.showMeridian), function(value) {\n      $scope.showMeridian = !!value;\n\n      if (ngModelCtrl.$error.time) {\n        // Evaluate from template\n        var hours = getHoursFromTemplate(), minutes = getMinutesFromTemplate();\n        if (angular.isDefined(hours) && angular.isDefined(minutes)) {\n          selected.setHours(hours);\n          refresh();\n        }\n      } else {\n        updateTemplate();\n      }\n    });\n  }\n\n  // Get $scope.hours in 24H mode if valid\n  function getHoursFromTemplate() {\n    var hours = parseInt($scope.hours, 10);\n    var valid = $scope.showMeridian ? (hours > 0 && hours < 13) : (hours >= 0 && hours < 24);\n    if (!valid) {\n      return undefined;\n    }\n\n    if ($scope.showMeridian) {\n      if (hours === 12) {\n        hours = 0;\n      }\n      if ($scope.meridian === meridians[1]) {\n        hours = hours + 12;\n      }\n    }\n    return hours;\n  }\n\n  function getMinutesFromTemplate() {\n    var minutes = parseInt($scope.minutes, 10);\n    return (minutes >= 0 && minutes < 60) ? minutes : undefined;\n  }\n\n  function pad(value) {\n    return (angular.isDefined(value) && value.toString().length < 2) ? '0' + value : value.toString();\n  }\n\n  // Respond on mousewheel spin\n  this.setupMousewheelEvents = function(hoursInputEl, minutesInputEl) {\n    var isScrollingUp = function(e) {\n      if (e.originalEvent) {\n        e = e.originalEvent;\n      }\n      //pick correct delta variable depending on event\n      var delta = (e.wheelDelta) ? e.wheelDelta : -e.deltaY;\n      return (e.detail || delta > 0);\n    };\n\n    hoursInputEl.bind('mousewheel wheel', function(e) {\n      $scope.$apply(isScrollingUp(e) ? $scope.incrementHours() : $scope.decrementHours());\n      e.preventDefault();\n    });\n\n    minutesInputEl.bind('mousewheel wheel', function(e) {\n      $scope.$apply(isScrollingUp(e) ? $scope.incrementMinutes() : $scope.decrementMinutes());\n      e.preventDefault();\n    });\n\n  };\n\n  // Respond on up/down arrowkeys\n  this.setupArrowkeyEvents = function(hoursInputEl, minutesInputEl) {\n    hoursInputEl.bind('keydown', function(e) {\n      if (e.which === 38) { // up\n        e.preventDefault();\n        $scope.incrementHours();\n        $scope.$apply();\n      } else if (e.which === 40) { // down\n        e.preventDefault();\n        $scope.decrementHours();\n        $scope.$apply();\n      }\n    });\n\n    minutesInputEl.bind('keydown', function(e) {\n      if (e.which === 38) { // up\n        e.preventDefault();\n        $scope.incrementMinutes();\n        $scope.$apply();\n      } else if (e.which === 40) { // down\n        e.preventDefault();\n        $scope.decrementMinutes();\n        $scope.$apply();\n      }\n    });\n  };\n\n  this.setupInputEvents = function(hoursInputEl, minutesInputEl) {\n    if ($scope.readonlyInput) {\n      $scope.updateHours = angular.noop;\n      $scope.updateMinutes = angular.noop;\n      return;\n    }\n\n    var invalidate = function(invalidHours, invalidMinutes) {\n      ngModelCtrl.$setViewValue(null);\n      ngModelCtrl.$setValidity('time', false);\n      if (angular.isDefined(invalidHours)) {\n        $scope.invalidHours = invalidHours;\n      }\n      if (angular.isDefined(invalidMinutes)) {\n        $scope.invalidMinutes = invalidMinutes;\n      }\n    };\n\n    $scope.updateHours = function() {\n      var hours = getHoursFromTemplate(),\n        minutes = getMinutesFromTemplate();\n\n      if (angular.isDefined(hours) && angular.isDefined(minutes)) {\n        selected.setHours(hours);\n        if (selected < min || selected > max) {\n          invalidate(true);\n        } else {\n          refresh('h');\n        }\n      } else {\n        invalidate(true);\n      }\n    };\n\n    hoursInputEl.bind('blur', function(e) {\n      if (!$scope.invalidHours && $scope.hours < 10) {\n        $scope.$apply(function() {\n          $scope.hours = pad($scope.hours);\n        });\n      }\n    });\n\n    $scope.updateMinutes = function() {\n      var minutes = getMinutesFromTemplate(),\n        hours = getHoursFromTemplate();\n\n      if (angular.isDefined(minutes) && angular.isDefined(hours)) {\n        selected.setMinutes(minutes);\n        if (selected < min || selected > max) {\n          invalidate(undefined, true);\n        } else {\n          refresh('m');\n        }\n      } else {\n        invalidate(undefined, true);\n      }\n    };\n\n    minutesInputEl.bind('blur', function(e) {\n      if (!$scope.invalidMinutes && $scope.minutes < 10) {\n        $scope.$apply(function() {\n          $scope.minutes = pad($scope.minutes);\n        });\n      }\n    });\n\n  };\n\n  this.render = function() {\n    var date = ngModelCtrl.$viewValue;\n\n    if (isNaN(date)) {\n      ngModelCtrl.$setValidity('time', false);\n      $log.error('Timepicker directive: \"ng-model\" value must be a Date object, a number of milliseconds since 01.01.1970 or a string representing an RFC2822 or ISO 8601 date.');\n    } else {\n      if (date) {\n        selected = date;\n      }\n\n      if (selected < min || selected > max) {\n        ngModelCtrl.$setValidity('time', false);\n        $scope.invalidHours = true;\n        $scope.invalidMinutes = true;\n      } else {\n        makeValid();\n      }\n      updateTemplate();\n    }\n  };\n\n  // Call internally when we know that model is valid.\n  function refresh(keyboardChange) {\n    makeValid();\n    ngModelCtrl.$setViewValue(new Date(selected));\n    updateTemplate(keyboardChange);\n  }\n\n  function makeValid() {\n    ngModelCtrl.$setValidity('time', true);\n    $scope.invalidHours = false;\n    $scope.invalidMinutes = false;\n  }\n\n  function updateTemplate(keyboardChange) {\n    var hours = selected.getHours(), minutes = selected.getMinutes();\n\n    if ($scope.showMeridian) {\n      hours = (hours === 0 || hours === 12) ? 12 : hours % 12; // Convert 24 to 12 hour system\n    }\n\n    $scope.hours = keyboardChange === 'h' ? hours : pad(hours);\n    if (keyboardChange !== 'm') {\n      $scope.minutes = pad(minutes);\n    }\n    $scope.meridian = selected.getHours() < 12 ? meridians[0] : meridians[1];\n  }\n\n  function addMinutes(date, minutes) {\n    var dt = new Date(date.getTime() + minutes * 60000);\n    var newDate = new Date(date);\n    newDate.setHours(dt.getHours(), dt.getMinutes());\n    return newDate;\n  }\n\n  function addMinutesToSelected(minutes) {\n    selected = addMinutes(selected, minutes);\n    refresh();\n  }\n\n  $scope.showSpinners = angular.isDefined($attrs.showSpinners) ?\n    $scope.$parent.$eval($attrs.showSpinners) : timepickerConfig.showSpinners;\n\n  $scope.incrementHours = function() {\n    if (!$scope.noIncrementHours()) {\n      addMinutesToSelected(hourStep * 60);\n    }\n  };\n\n  $scope.decrementHours = function() {\n    if (!$scope.noDecrementHours()) {\n      addMinutesToSelected(-hourStep * 60);\n    }\n  };\n\n  $scope.incrementMinutes = function() {\n    if (!$scope.noIncrementMinutes()) {\n      addMinutesToSelected(minuteStep);\n    }\n  };\n\n  $scope.decrementMinutes = function() {\n    if (!$scope.noDecrementMinutes()) {\n      addMinutesToSelected(-minuteStep);\n    }\n  };\n\n  $scope.toggleMeridian = function() {\n    if (!$scope.noToggleMeridian()) {\n      addMinutesToSelected(12 * 60 * (selected.getHours() < 12 ? 1 : -1));\n    }\n  };\n}])\n\n.directive('uibTimepicker', function() {\n  return {\n    restrict: 'EA',\n    require: ['uibTimepicker', '?^ngModel'],\n    controller: 'UibTimepickerController',\n    controllerAs: 'timepicker',\n    replace: true,\n    scope: {},\n    templateUrl: function(element, attrs) {\n      return attrs.templateUrl || 'template/timepicker/timepicker.html';\n    },\n    link: function(scope, element, attrs, ctrls) {\n      var timepickerCtrl = ctrls[0], ngModelCtrl = ctrls[1];\n\n      if (ngModelCtrl) {\n        timepickerCtrl.init(ngModelCtrl, element.find('input'));\n      }\n    }\n  };\n});\n\n/* Deprecated timepicker below */\n\nangular.module('ui.bootstrap.timepicker')\n\n.value('$timepickerSuppressWarning', false)\n\n.controller('TimepickerController', ['$scope', '$element', '$attrs', '$controller', '$log', '$timepickerSuppressWarning', function($scope, $element, $attrs, $controller, $log, $timepickerSuppressWarning) {\n  if (!$timepickerSuppressWarning) {\n    $log.warn('TimepickerController is now deprecated. Use UibTimepickerController instead.');\n  }\n\n  angular.extend(this, $controller('UibTimepickerController', {\n    $scope: $scope,\n    $element: $element,\n    $attrs: $attrs\n  }));\n}])\n\n.directive('timepicker', ['$log', '$timepickerSuppressWarning', function($log, $timepickerSuppressWarning) {\n  return {\n    restrict: 'EA',\n    require: ['timepicker', '?^ngModel'],\n    controller: 'TimepickerController',\n    controllerAs: 'timepicker',\n    replace: true,\n    scope: {},\n    templateUrl: function(element, attrs) {\n      return attrs.templateUrl || 'template/timepicker/timepicker.html';\n    },\n    link: function(scope, element, attrs, ctrls) {\n      if (!$timepickerSuppressWarning) {\n        $log.warn('timepicker is now deprecated. Use uib-timepicker instead.');\n      }\n      var timepickerCtrl = ctrls[0], ngModelCtrl = ctrls[1];\n\n      if (ngModelCtrl) {\n        timepickerCtrl.init(ngModelCtrl, element.find('input'));\n      }\n    }\n  };\n}]);\n\nangular.module('ui.bootstrap.typeahead', ['ui.bootstrap.position'])\n\n/**\n * A helper service that can parse typeahead's syntax (string provided by users)\n * Extracted to a separate service for ease of unit testing\n */\n  .factory('uibTypeaheadParser', ['$parse', function($parse) {\n    //                      00000111000000000000022200000000000000003333333333333330000000000044000\n    var TYPEAHEAD_REGEXP = /^\\s*([\\s\\S]+?)(?:\\s+as\\s+([\\s\\S]+?))?\\s+for\\s+(?:([\\$\\w][\\$\\w\\d]*))\\s+in\\s+([\\s\\S]+?)$/;\n    return {\n      parse: function(input) {\n        var match = input.match(TYPEAHEAD_REGEXP);\n        if (!match) {\n          throw new Error(\n            'Expected typeahead specification in form of \"_modelValue_ (as _label_)? for _item_ in _collection_\"' +\n              ' but got \"' + input + '\".');\n        }\n\n        return {\n          itemName: match[3],\n          source: $parse(match[4]),\n          viewMapper: $parse(match[2] || match[1]),\n          modelMapper: $parse(match[1])\n        };\n      }\n    };\n  }])\n\n  .controller('UibTypeaheadController', ['$scope', '$element', '$attrs', '$compile', '$parse', '$q', '$timeout', '$document', '$window', '$rootScope', '$uibPosition', 'uibTypeaheadParser',\n    function(originalScope, element, attrs, $compile, $parse, $q, $timeout, $document, $window, $rootScope, $position, typeaheadParser) {\n    var HOT_KEYS = [9, 13, 27, 38, 40];\n    var eventDebounceTime = 200;\n    var modelCtrl, ngModelOptions;\n    //SUPPORTED ATTRIBUTES (OPTIONS)\n\n    //minimal no of characters that needs to be entered before typeahead kicks-in\n    var minLength = originalScope.$eval(attrs.typeaheadMinLength);\n    if (!minLength && minLength !== 0) {\n      minLength = 1;\n    }\n\n    //minimal wait time after last character typed before typeahead kicks-in\n    var waitTime = originalScope.$eval(attrs.typeaheadWaitMs) || 0;\n\n    //should it restrict model values to the ones selected from the popup only?\n    var isEditable = originalScope.$eval(attrs.typeaheadEditable) !== false;\n\n    //binding to a variable that indicates if matches are being retrieved asynchronously\n    var isLoadingSetter = $parse(attrs.typeaheadLoading).assign || angular.noop;\n\n    //a callback executed when a match is selected\n    var onSelectCallback = $parse(attrs.typeaheadOnSelect);\n\n    //should it select highlighted popup value when losing focus?\n    var isSelectOnBlur = angular.isDefined(attrs.typeaheadSelectOnBlur) ? originalScope.$eval(attrs.typeaheadSelectOnBlur) : false;\n\n    //binding to a variable that indicates if there were no results after the query is completed\n    var isNoResultsSetter = $parse(attrs.typeaheadNoResults).assign || angular.noop;\n\n    var inputFormatter = attrs.typeaheadInputFormatter ? $parse(attrs.typeaheadInputFormatter) : undefined;\n\n    var appendToBody =  attrs.typeaheadAppendToBody ? originalScope.$eval(attrs.typeaheadAppendToBody) : false;\n\n    var appendToElementId =  attrs.typeaheadAppendToElementId || false;\n\n    var focusFirst = originalScope.$eval(attrs.typeaheadFocusFirst) !== false;\n\n    //If input matches an item of the list exactly, select it automatically\n    var selectOnExact = attrs.typeaheadSelectOnExact ? originalScope.$eval(attrs.typeaheadSelectOnExact) : false;\n\n    //INTERNAL VARIABLES\n\n    //model setter executed upon match selection\n    var parsedModel = $parse(attrs.ngModel);\n    var invokeModelSetter = $parse(attrs.ngModel + '($$$p)');\n    var $setModelValue = function(scope, newValue) {\n      if (angular.isFunction(parsedModel(originalScope)) &&\n        ngModelOptions && ngModelOptions.$options && ngModelOptions.$options.getterSetter) {\n        return invokeModelSetter(scope, {$$$p: newValue});\n      } else {\n        return parsedModel.assign(scope, newValue);\n      }\n    };\n\n    //expressions used by typeahead\n    var parserResult = typeaheadParser.parse(attrs.uibTypeahead);\n\n    var hasFocus;\n\n    //Used to avoid bug in iOS webview where iOS keyboard does not fire\n    //mousedown & mouseup events\n    //Issue #3699\n    var selected;\n\n    //create a child scope for the typeahead directive so we are not polluting original scope\n    //with typeahead-specific data (matches, query etc.)\n    var scope = originalScope.$new();\n    var offDestroy = originalScope.$on('$destroy', function() {\n      scope.$destroy();\n    });\n    scope.$on('$destroy', offDestroy);\n\n    // WAI-ARIA\n    var popupId = 'typeahead-' + scope.$id + '-' + Math.floor(Math.random() * 10000);\n    element.attr({\n      'aria-autocomplete': 'list',\n      'aria-expanded': false,\n      'aria-owns': popupId\n    });\n\n    //pop-up element used to display matches\n    var popUpEl = angular.element('<div uib-typeahead-popup></div>');\n    popUpEl.attr({\n      id: popupId,\n      matches: 'matches',\n      active: 'activeIdx',\n      select: 'select(activeIdx)',\n      'move-in-progress': 'moveInProgress',\n      query: 'query',\n      position: 'position'\n    });\n    //custom item template\n    if (angular.isDefined(attrs.typeaheadTemplateUrl)) {\n      popUpEl.attr('template-url', attrs.typeaheadTemplateUrl);\n    }\n\n    if (angular.isDefined(attrs.typeaheadPopupTemplateUrl)) {\n      popUpEl.attr('popup-template-url', attrs.typeaheadPopupTemplateUrl);\n    }\n\n    var resetMatches = function() {\n      scope.matches = [];\n      scope.activeIdx = -1;\n      element.attr('aria-expanded', false);\n    };\n\n    var getMatchId = function(index) {\n      return popupId + '-option-' + index;\n    };\n\n    // Indicate that the specified match is the active (pre-selected) item in the list owned by this typeahead.\n    // This attribute is added or removed automatically when the `activeIdx` changes.\n    scope.$watch('activeIdx', function(index) {\n      if (index < 0) {\n        element.removeAttr('aria-activedescendant');\n      } else {\n        element.attr('aria-activedescendant', getMatchId(index));\n      }\n    });\n\n    var inputIsExactMatch = function(inputValue, index) {\n      if (scope.matches.length > index && inputValue) {\n        return inputValue.toUpperCase() === scope.matches[index].label.toUpperCase();\n      }\n\n      return false;\n    };\n\n    var getMatchesAsync = function(inputValue) {\n      var locals = {$viewValue: inputValue};\n      isLoadingSetter(originalScope, true);\n      isNoResultsSetter(originalScope, false);\n      $q.when(parserResult.source(originalScope, locals)).then(function(matches) {\n        //it might happen that several async queries were in progress if a user were typing fast\n        //but we are interested only in responses that correspond to the current view value\n        var onCurrentRequest = (inputValue === modelCtrl.$viewValue);\n        if (onCurrentRequest && hasFocus) {\n          if (matches && matches.length > 0) {\n            scope.activeIdx = focusFirst ? 0 : -1;\n            isNoResultsSetter(originalScope, false);\n            scope.matches.length = 0;\n\n            //transform labels\n            for (var i = 0; i < matches.length; i++) {\n              locals[parserResult.itemName] = matches[i];\n              scope.matches.push({\n                id: getMatchId(i),\n                label: parserResult.viewMapper(scope, locals),\n                model: matches[i]\n              });\n            }\n\n            scope.query = inputValue;\n            //position pop-up with matches - we need to re-calculate its position each time we are opening a window\n            //with matches as a pop-up might be absolute-positioned and position of an input might have changed on a page\n            //due to other elements being rendered\n            recalculatePosition();\n\n            element.attr('aria-expanded', true);\n\n            //Select the single remaining option if user input matches\n            if (selectOnExact && scope.matches.length === 1 && inputIsExactMatch(inputValue, 0)) {\n              scope.select(0);\n            }\n          } else {\n            resetMatches();\n            isNoResultsSetter(originalScope, true);\n          }\n        }\n        if (onCurrentRequest) {\n          isLoadingSetter(originalScope, false);\n        }\n      }, function() {\n        resetMatches();\n        isLoadingSetter(originalScope, false);\n        isNoResultsSetter(originalScope, true);\n      });\n    };\n\n    // bind events only if appendToBody params exist - performance feature\n    if (appendToBody) {\n      angular.element($window).bind('resize', fireRecalculating);\n      $document.find('body').bind('scroll', fireRecalculating);\n    }\n\n    // Declare the timeout promise var outside the function scope so that stacked calls can be cancelled later\n    var timeoutEventPromise;\n\n    // Default progress type\n    scope.moveInProgress = false;\n\n    function fireRecalculating() {\n      if (!scope.moveInProgress) {\n        scope.moveInProgress = true;\n        scope.$digest();\n      }\n\n      // Cancel previous timeout\n      if (timeoutEventPromise) {\n        $timeout.cancel(timeoutEventPromise);\n      }\n\n      // Debounced executing recalculate after events fired\n      timeoutEventPromise = $timeout(function() {\n        // if popup is visible\n        if (scope.matches.length) {\n          recalculatePosition();\n        }\n\n        scope.moveInProgress = false;\n      }, eventDebounceTime);\n    }\n\n    // recalculate actual position and set new values to scope\n    // after digest loop is popup in right position\n    function recalculatePosition() {\n      scope.position = appendToBody ? $position.offset(element) : $position.position(element);\n      scope.position.top += element.prop('offsetHeight');\n    }\n\n    //we need to propagate user's query so we can higlight matches\n    scope.query = undefined;\n\n    //Declare the timeout promise var outside the function scope so that stacked calls can be cancelled later\n    var timeoutPromise;\n\n    var scheduleSearchWithTimeout = function(inputValue) {\n      timeoutPromise = $timeout(function() {\n        getMatchesAsync(inputValue);\n      }, waitTime);\n    };\n\n    var cancelPreviousTimeout = function() {\n      if (timeoutPromise) {\n        $timeout.cancel(timeoutPromise);\n      }\n    };\n\n    resetMatches();\n\n    scope.select = function(activeIdx) {\n      //called from within the $digest() cycle\n      var locals = {};\n      var model, item;\n\n      selected = true;\n      locals[parserResult.itemName] = item = scope.matches[activeIdx].model;\n      model = parserResult.modelMapper(originalScope, locals);\n      $setModelValue(originalScope, model);\n      modelCtrl.$setValidity('editable', true);\n      modelCtrl.$setValidity('parse', true);\n\n      onSelectCallback(originalScope, {\n        $item: item,\n        $model: model,\n        $label: parserResult.viewMapper(originalScope, locals)\n      });\n\n      resetMatches();\n\n      //return focus to the input element if a match was selected via a mouse click event\n      // use timeout to avoid $rootScope:inprog error\n      if (scope.$eval(attrs.typeaheadFocusOnSelect) !== false) {\n        $timeout(function() { element[0].focus(); }, 0, false);\n      }\n    };\n\n    //bind keyboard events: arrows up(38) / down(40), enter(13) and tab(9), esc(27)\n    element.bind('keydown', function(evt) {\n      //typeahead is open and an \"interesting\" key was pressed\n      if (scope.matches.length === 0 || HOT_KEYS.indexOf(evt.which) === -1) {\n        return;\n      }\n\n      // if there's nothing selected (i.e. focusFirst) and enter or tab is hit, clear the results\n      if (scope.activeIdx === -1 && (evt.which === 9 || evt.which === 13)) {\n        resetMatches();\n        scope.$digest();\n        return;\n      }\n\n      evt.preventDefault();\n\n      if (evt.which === 40) {\n        scope.activeIdx = (scope.activeIdx + 1) % scope.matches.length;\n        scope.$digest();\n      } else if (evt.which === 38) {\n        scope.activeIdx = (scope.activeIdx > 0 ? scope.activeIdx : scope.matches.length) - 1;\n        scope.$digest();\n      } else if (evt.which === 13 || evt.which === 9) {\n        scope.$apply(function () {\n          scope.select(scope.activeIdx);\n        });\n      } else if (evt.which === 27) {\n        evt.stopPropagation();\n\n        resetMatches();\n        scope.$digest();\n      }\n    });\n\n    element.bind('blur', function() {\n      if (isSelectOnBlur && scope.matches.length && scope.activeIdx !== -1 && !selected) {\n        selected = true;\n        scope.$apply(function() {\n          scope.select(scope.activeIdx);\n        });\n      }\n      hasFocus = false;\n      selected = false;\n    });\n\n    // Keep reference to click handler to unbind it.\n    var dismissClickHandler = function(evt) {\n      // Issue #3973\n      // Firefox treats right click as a click on document\n      if (element[0] !== evt.target && evt.which !== 3 && scope.matches.length !== 0) {\n        resetMatches();\n        if (!$rootScope.$$phase) {\n          scope.$digest();\n        }\n      }\n    };\n\n    $document.bind('click', dismissClickHandler);\n\n    originalScope.$on('$destroy', function() {\n      $document.unbind('click', dismissClickHandler);\n      if (appendToBody || appendToElementId) {\n        $popup.remove();\n      }\n\n      if (appendToBody) {\n        angular.element($window).unbind('resize', fireRecalculating);\n        $document.find('body').unbind('scroll', fireRecalculating);\n      }\n      // Prevent jQuery cache memory leak\n      popUpEl.remove();\n    });\n\n    var $popup = $compile(popUpEl)(scope);\n\n    if (appendToBody) {\n      $document.find('body').append($popup);\n    } else if (appendToElementId !== false) {\n      angular.element($document[0].getElementById(appendToElementId)).append($popup);\n    } else {\n      element.after($popup);\n    }\n\n    this.init = function(_modelCtrl, _ngModelOptions) {\n      modelCtrl = _modelCtrl;\n      ngModelOptions = _ngModelOptions;\n\n      //plug into $parsers pipeline to open a typeahead on view changes initiated from DOM\n      //$parsers kick-in on all the changes coming from the view as well as manually triggered by $setViewValue\n      modelCtrl.$parsers.unshift(function(inputValue) {\n        hasFocus = true;\n\n        if (minLength === 0 || inputValue && inputValue.length >= minLength) {\n          if (waitTime > 0) {\n            cancelPreviousTimeout();\n            scheduleSearchWithTimeout(inputValue);\n          } else {\n            getMatchesAsync(inputValue);\n          }\n        } else {\n          isLoadingSetter(originalScope, false);\n          cancelPreviousTimeout();\n          resetMatches();\n        }\n\n        if (isEditable) {\n          return inputValue;\n        } else {\n          if (!inputValue) {\n            // Reset in case user had typed something previously.\n            modelCtrl.$setValidity('editable', true);\n            return null;\n          } else {\n            modelCtrl.$setValidity('editable', false);\n            return undefined;\n          }\n        }\n      });\n\n      modelCtrl.$formatters.push(function(modelValue) {\n        var candidateViewValue, emptyViewValue;\n        var locals = {};\n\n        // The validity may be set to false via $parsers (see above) if\n        // the model is restricted to selected values. If the model\n        // is set manually it is considered to be valid.\n        if (!isEditable) {\n          modelCtrl.$setValidity('editable', true);\n        }\n\n        if (inputFormatter) {\n          locals.$model = modelValue;\n          return inputFormatter(originalScope, locals);\n        } else {\n          //it might happen that we don't have enough info to properly render input value\n          //we need to check for this situation and simply return model value if we can't apply custom formatting\n          locals[parserResult.itemName] = modelValue;\n          candidateViewValue = parserResult.viewMapper(originalScope, locals);\n          locals[parserResult.itemName] = undefined;\n          emptyViewValue = parserResult.viewMapper(originalScope, locals);\n\n          return candidateViewValue !== emptyViewValue ? candidateViewValue : modelValue;\n        }\n      });\n    };\n  }])\n\n  .directive('uibTypeahead', function() {\n    return {\n      controller: 'UibTypeaheadController',\n      require: ['ngModel', '^?ngModelOptions', 'uibTypeahead'],\n      link: function(originalScope, element, attrs, ctrls) {\n        ctrls[2].init(ctrls[0], ctrls[1]);\n      }\n    };\n  })\n\n  .directive('uibTypeaheadPopup', function() {\n    return {\n      scope: {\n        matches: '=',\n        query: '=',\n        active: '=',\n        position: '&',\n        moveInProgress: '=',\n        select: '&'\n      },\n      replace: true,\n      templateUrl: function(element, attrs) {\n        return attrs.popupTemplateUrl || 'template/typeahead/typeahead-popup.html';\n      },\n      link: function(scope, element, attrs) {\n        scope.templateUrl = attrs.templateUrl;\n\n        scope.isOpen = function() {\n          return scope.matches.length > 0;\n        };\n\n        scope.isActive = function(matchIdx) {\n          return scope.active == matchIdx;\n        };\n\n        scope.selectActive = function(matchIdx) {\n          scope.active = matchIdx;\n        };\n\n        scope.selectMatch = function(activeIdx) {\n          scope.select({activeIdx:activeIdx});\n        };\n      }\n    };\n  })\n\n  .directive('uibTypeaheadMatch', ['$templateRequest', '$compile', '$parse', function($templateRequest, $compile, $parse) {\n    return {\n      scope: {\n        index: '=',\n        match: '=',\n        query: '='\n      },\n      link:function(scope, element, attrs) {\n        var tplUrl = $parse(attrs.templateUrl)(scope.$parent) || 'template/typeahead/typeahead-match.html';\n        $templateRequest(tplUrl).then(function(tplContent) {\n          $compile(tplContent.trim())(scope, function(clonedElement) {\n            element.replaceWith(clonedElement);\n          });\n        });\n      }\n    };\n  }])\n\n  .filter('uibTypeaheadHighlight', ['$sce', '$injector', '$log', function($sce, $injector, $log) {\n    var isSanitizePresent;\n    isSanitizePresent = $injector.has('$sanitize');\n\n    function escapeRegexp(queryToEscape) {\n      // Regex: capture the whole query string and replace it with the string that will be used to match\n      // the results, for example if the capture is \"a\" the result will be \\a\n      return queryToEscape.replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n    }\n\n    function containsHtml(matchItem) {\n      return /<.*>/g.test(matchItem);\n    }\n\n    return function(matchItem, query) {\n      if (!isSanitizePresent && containsHtml(matchItem)) {\n        $log.warn('Unsafe use of typeahead please use ngSanitize'); // Warn the user about the danger\n      }\n      matchItem = query? ('' + matchItem).replace(new RegExp(escapeRegexp(query), 'gi'), '<strong>$&</strong>') : matchItem; // Replaces the capture string with a the same string inside of a \"strong\" tag\n      if (!isSanitizePresent) {\n        matchItem = $sce.trustAsHtml(matchItem); // If $sanitize is not present we pack the string in a $sce object for the ng-bind-html directive\n      }\n      return matchItem;\n    };\n  }]);\n\n/* Deprecated typeahead below */\n  \nangular.module('ui.bootstrap.typeahead')\n  .value('$typeaheadSuppressWarning', false)\n  .service('typeaheadParser', ['$parse', 'uibTypeaheadParser', '$log', '$typeaheadSuppressWarning', function($parse, uibTypeaheadParser, $log, $typeaheadSuppressWarning) {\n    if (!$typeaheadSuppressWarning) {\n      $log.warn('typeaheadParser is now deprecated. Use uibTypeaheadParser instead.');\n    }\n\n    return uibTypeaheadParser;\n  }])\n\n  .directive('typeahead', ['$compile', '$parse', '$q', '$timeout', '$document', '$window', '$rootScope', '$uibPosition', 'typeaheadParser', '$log', '$typeaheadSuppressWarning',\n    function($compile, $parse, $q, $timeout, $document, $window, $rootScope, $position, typeaheadParser, $log, $typeaheadSuppressWarning) {\n    var HOT_KEYS = [9, 13, 27, 38, 40];\n    var eventDebounceTime = 200;\n    return {\n      require: ['ngModel', '^?ngModelOptions'],\n      link: function(originalScope, element, attrs, ctrls) {\n        if (!$typeaheadSuppressWarning) {\n          $log.warn('typeahead is now deprecated. Use uib-typeahead instead.');\n        }\n        var modelCtrl = ctrls[0];\n        var ngModelOptions = ctrls[1];\n        //SUPPORTED ATTRIBUTES (OPTIONS)\n\n        //minimal no of characters that needs to be entered before typeahead kicks-in\n        var minLength = originalScope.$eval(attrs.typeaheadMinLength);\n        if (!minLength && minLength !== 0) {\n          minLength = 1;\n        }\n\n        //minimal wait time after last character typed before typeahead kicks-in\n        var waitTime = originalScope.$eval(attrs.typeaheadWaitMs) || 0;\n\n        //should it restrict model values to the ones selected from the popup only?\n        var isEditable = originalScope.$eval(attrs.typeaheadEditable) !== false;\n\n        //binding to a variable that indicates if matches are being retrieved asynchronously\n        var isLoadingSetter = $parse(attrs.typeaheadLoading).assign || angular.noop;\n\n        //a callback executed when a match is selected\n        var onSelectCallback = $parse(attrs.typeaheadOnSelect);\n\n        //should it select highlighted popup value when losing focus?\n        var isSelectOnBlur = angular.isDefined(attrs.typeaheadSelectOnBlur) ? originalScope.$eval(attrs.typeaheadSelectOnBlur) : false;\n\n        //binding to a variable that indicates if there were no results after the query is completed\n        var isNoResultsSetter = $parse(attrs.typeaheadNoResults).assign || angular.noop;\n\n        var inputFormatter = attrs.typeaheadInputFormatter ? $parse(attrs.typeaheadInputFormatter) : undefined;\n\n        var appendToBody =  attrs.typeaheadAppendToBody ? originalScope.$eval(attrs.typeaheadAppendToBody) : false;\n\n        var appendToElementId =  attrs.typeaheadAppendToElementId || false;\n\n        var focusFirst = originalScope.$eval(attrs.typeaheadFocusFirst) !== false;\n\n        //If input matches an item of the list exactly, select it automatically\n        var selectOnExact = attrs.typeaheadSelectOnExact ? originalScope.$eval(attrs.typeaheadSelectOnExact) : false;\n\n        //INTERNAL VARIABLES\n\n        //model setter executed upon match selection\n        var parsedModel = $parse(attrs.ngModel);\n        var invokeModelSetter = $parse(attrs.ngModel + '($$$p)');\n        var $setModelValue = function(scope, newValue) {\n          if (angular.isFunction(parsedModel(originalScope)) &&\n            ngModelOptions && ngModelOptions.$options && ngModelOptions.$options.getterSetter) {\n            return invokeModelSetter(scope, {$$$p: newValue});\n          } else {\n            return parsedModel.assign(scope, newValue);\n          }\n        };\n\n        //expressions used by typeahead\n        var parserResult = typeaheadParser.parse(attrs.typeahead);\n\n        var hasFocus;\n\n        //Used to avoid bug in iOS webview where iOS keyboard does not fire\n        //mousedown & mouseup events\n        //Issue #3699\n        var selected;\n\n        //create a child scope for the typeahead directive so we are not polluting original scope\n        //with typeahead-specific data (matches, query etc.)\n        var scope = originalScope.$new();\n        var offDestroy = originalScope.$on('$destroy', function() {\n\t\t\t    scope.$destroy();\n        });\n        scope.$on('$destroy', offDestroy);\n\n        // WAI-ARIA\n        var popupId = 'typeahead-' + scope.$id + '-' + Math.floor(Math.random() * 10000);\n        element.attr({\n          'aria-autocomplete': 'list',\n          'aria-expanded': false,\n          'aria-owns': popupId\n        });\n\n        //pop-up element used to display matches\n        var popUpEl = angular.element('<div typeahead-popup></div>');\n        popUpEl.attr({\n          id: popupId,\n          matches: 'matches',\n          active: 'activeIdx',\n          select: 'select(activeIdx)',\n          'move-in-progress': 'moveInProgress',\n          query: 'query',\n          position: 'position'\n        });\n        //custom item template\n        if (angular.isDefined(attrs.typeaheadTemplateUrl)) {\n          popUpEl.attr('template-url', attrs.typeaheadTemplateUrl);\n        }\n\n        if (angular.isDefined(attrs.typeaheadPopupTemplateUrl)) {\n          popUpEl.attr('popup-template-url', attrs.typeaheadPopupTemplateUrl);\n        }\n\n        var resetMatches = function() {\n          scope.matches = [];\n          scope.activeIdx = -1;\n          element.attr('aria-expanded', false);\n        };\n\n        var getMatchId = function(index) {\n          return popupId + '-option-' + index;\n        };\n\n        // Indicate that the specified match is the active (pre-selected) item in the list owned by this typeahead.\n        // This attribute is added or removed automatically when the `activeIdx` changes.\n        scope.$watch('activeIdx', function(index) {\n          if (index < 0) {\n            element.removeAttr('aria-activedescendant');\n          } else {\n            element.attr('aria-activedescendant', getMatchId(index));\n          }\n        });\n\n        var inputIsExactMatch = function(inputValue, index) {\n          if (scope.matches.length > index && inputValue) {\n            return inputValue.toUpperCase() === scope.matches[index].label.toUpperCase();\n          }\n\n          return false;\n        };\n\n        var getMatchesAsync = function(inputValue) {\n          var locals = {$viewValue: inputValue};\n          isLoadingSetter(originalScope, true);\n          isNoResultsSetter(originalScope, false);\n          $q.when(parserResult.source(originalScope, locals)).then(function(matches) {\n            //it might happen that several async queries were in progress if a user were typing fast\n            //but we are interested only in responses that correspond to the current view value\n            var onCurrentRequest = (inputValue === modelCtrl.$viewValue);\n            if (onCurrentRequest && hasFocus) {\n              if (matches && matches.length > 0) {\n                scope.activeIdx = focusFirst ? 0 : -1;\n                isNoResultsSetter(originalScope, false);\n                scope.matches.length = 0;\n\n                //transform labels\n                for (var i = 0; i < matches.length; i++) {\n                  locals[parserResult.itemName] = matches[i];\n                  scope.matches.push({\n                    id: getMatchId(i),\n                    label: parserResult.viewMapper(scope, locals),\n                    model: matches[i]\n                  });\n                }\n\n                scope.query = inputValue;\n                //position pop-up with matches - we need to re-calculate its position each time we are opening a window\n                //with matches as a pop-up might be absolute-positioned and position of an input might have changed on a page\n                //due to other elements being rendered\n                recalculatePosition();\n\n                element.attr('aria-expanded', true);\n\n                //Select the single remaining option if user input matches\n                if (selectOnExact && scope.matches.length === 1 && inputIsExactMatch(inputValue, 0)) {\n                  scope.select(0);\n                }\n              } else {\n                resetMatches();\n                isNoResultsSetter(originalScope, true);\n              }\n            }\n            if (onCurrentRequest) {\n              isLoadingSetter(originalScope, false);\n            }\n          }, function() {\n            resetMatches();\n            isLoadingSetter(originalScope, false);\n            isNoResultsSetter(originalScope, true);\n          });\n        };\n\n        // bind events only if appendToBody params exist - performance feature\n        if (appendToBody) {\n          angular.element($window).bind('resize', fireRecalculating);\n          $document.find('body').bind('scroll', fireRecalculating);\n        }\n\n        // Declare the timeout promise var outside the function scope so that stacked calls can be cancelled later\n        var timeoutEventPromise;\n\n        // Default progress type\n        scope.moveInProgress = false;\n\n        function fireRecalculating() {\n          if (!scope.moveInProgress) {\n            scope.moveInProgress = true;\n            scope.$digest();\n          }\n\n          // Cancel previous timeout\n          if (timeoutEventPromise) {\n            $timeout.cancel(timeoutEventPromise);\n          }\n\n          // Debounced executing recalculate after events fired\n          timeoutEventPromise = $timeout(function() {\n            // if popup is visible\n            if (scope.matches.length) {\n              recalculatePosition();\n            }\n\n            scope.moveInProgress = false;\n          }, eventDebounceTime);\n        }\n\n        // recalculate actual position and set new values to scope\n        // after digest loop is popup in right position\n        function recalculatePosition() {\n          scope.position = appendToBody ? $position.offset(element) : $position.position(element);\n          scope.position.top += element.prop('offsetHeight');\n        }\n\n        resetMatches();\n\n        //we need to propagate user's query so we can higlight matches\n        scope.query = undefined;\n\n        //Declare the timeout promise var outside the function scope so that stacked calls can be cancelled later\n        var timeoutPromise;\n\n        var scheduleSearchWithTimeout = function(inputValue) {\n          timeoutPromise = $timeout(function() {\n            getMatchesAsync(inputValue);\n          }, waitTime);\n        };\n\n        var cancelPreviousTimeout = function() {\n          if (timeoutPromise) {\n            $timeout.cancel(timeoutPromise);\n          }\n        };\n\n        //plug into $parsers pipeline to open a typeahead on view changes initiated from DOM\n        //$parsers kick-in on all the changes coming from the view as well as manually triggered by $setViewValue\n        modelCtrl.$parsers.unshift(function(inputValue) {\n          hasFocus = true;\n\n          if (minLength === 0 || inputValue && inputValue.length >= minLength) {\n            if (waitTime > 0) {\n              cancelPreviousTimeout();\n              scheduleSearchWithTimeout(inputValue);\n            } else {\n              getMatchesAsync(inputValue);\n            }\n          } else {\n            isLoadingSetter(originalScope, false);\n            cancelPreviousTimeout();\n            resetMatches();\n          }\n\n          if (isEditable) {\n            return inputValue;\n          } else {\n            if (!inputValue) {\n              // Reset in case user had typed something previously.\n              modelCtrl.$setValidity('editable', true);\n              return null;\n            } else {\n              modelCtrl.$setValidity('editable', false);\n              return undefined;\n            }\n          }\n        });\n\n        modelCtrl.$formatters.push(function(modelValue) {\n          var candidateViewValue, emptyViewValue;\n          var locals = {};\n\n          // The validity may be set to false via $parsers (see above) if\n          // the model is restricted to selected values. If the model\n          // is set manually it is considered to be valid.\n          if (!isEditable) {\n            modelCtrl.$setValidity('editable', true);\n          }\n\n          if (inputFormatter) {\n            locals.$model = modelValue;\n            return inputFormatter(originalScope, locals);\n          } else {\n            //it might happen that we don't have enough info to properly render input value\n            //we need to check for this situation and simply return model value if we can't apply custom formatting\n            locals[parserResult.itemName] = modelValue;\n            candidateViewValue = parserResult.viewMapper(originalScope, locals);\n            locals[parserResult.itemName] = undefined;\n            emptyViewValue = parserResult.viewMapper(originalScope, locals);\n\n            return candidateViewValue !== emptyViewValue ? candidateViewValue : modelValue;\n          }\n        });\n\n        scope.select = function(activeIdx) {\n          //called from within the $digest() cycle\n          var locals = {};\n          var model, item;\n\n          selected = true;\n          locals[parserResult.itemName] = item = scope.matches[activeIdx].model;\n          model = parserResult.modelMapper(originalScope, locals);\n          $setModelValue(originalScope, model);\n          modelCtrl.$setValidity('editable', true);\n          modelCtrl.$setValidity('parse', true);\n\n          onSelectCallback(originalScope, {\n            $item: item,\n            $model: model,\n            $label: parserResult.viewMapper(originalScope, locals)\n          });\n\n          resetMatches();\n\n          //return focus to the input element if a match was selected via a mouse click event\n          // use timeout to avoid $rootScope:inprog error\n          if (scope.$eval(attrs.typeaheadFocusOnSelect) !== false) {\n            $timeout(function() { element[0].focus(); }, 0, false);\n          }\n        };\n\n        //bind keyboard events: arrows up(38) / down(40), enter(13) and tab(9), esc(27)\n        element.bind('keydown', function(evt) {\n          //typeahead is open and an \"interesting\" key was pressed\n          if (scope.matches.length === 0 || HOT_KEYS.indexOf(evt.which) === -1) {\n            return;\n          }\n\n          // if there's nothing selected (i.e. focusFirst) and enter or tab is hit, clear the results\n          if (scope.activeIdx === -1 && (evt.which === 9 || evt.which === 13)) {\n            resetMatches();\n            scope.$digest();\n            return;\n          }\n\n          evt.preventDefault();\n\n          if (evt.which === 40) {\n            scope.activeIdx = (scope.activeIdx + 1) % scope.matches.length;\n            scope.$digest();\n          } else if (evt.which === 38) {\n            scope.activeIdx = (scope.activeIdx > 0 ? scope.activeIdx : scope.matches.length) - 1;\n            scope.$digest();\n          } else if (evt.which === 13 || evt.which === 9) {\n            scope.$apply(function () {\n              scope.select(scope.activeIdx);\n            });\n          } else if (evt.which === 27) {\n            evt.stopPropagation();\n\n            resetMatches();\n            scope.$digest();\n          }\n        });\n\n        element.bind('blur', function() {\n          if (isSelectOnBlur && scope.matches.length && scope.activeIdx !== -1 && !selected) {\n            selected = true;\n            scope.$apply(function() {\n              scope.select(scope.activeIdx);\n            });\n          }\n          hasFocus = false;\n          selected = false;\n        });\n\n        // Keep reference to click handler to unbind it.\n        var dismissClickHandler = function(evt) {\n          // Issue #3973\n          // Firefox treats right click as a click on document\n          if (element[0] !== evt.target && evt.which !== 3 && scope.matches.length !== 0) {\n            resetMatches();\n            if (!$rootScope.$$phase) {\n              scope.$digest();\n            }\n          }\n        };\n\n        $document.bind('click', dismissClickHandler);\n\n        originalScope.$on('$destroy', function() {\n          $document.unbind('click', dismissClickHandler);\n          if (appendToBody || appendToElementId) {\n            $popup.remove();\n          }\n\n          if (appendToBody) {\n            angular.element($window).unbind('resize', fireRecalculating);\n            $document.find('body').unbind('scroll', fireRecalculating);\n          }\n          // Prevent jQuery cache memory leak\n          popUpEl.remove();\n        });\n\n        var $popup = $compile(popUpEl)(scope);\n\n        if (appendToBody) {\n          $document.find('body').append($popup);\n        } else if (appendToElementId !== false) {\n          angular.element($document[0].getElementById(appendToElementId)).append($popup);\n        } else {\n          element.after($popup);\n        }\n      }\n    };\n  }])\n  \n  .directive('typeaheadPopup', ['$typeaheadSuppressWarning', '$log', function($typeaheadSuppressWarning, $log) {\n    return {\n      scope: {\n        matches: '=',\n        query: '=',\n        active: '=',\n        position: '&',\n        moveInProgress: '=',\n        select: '&'\n      },\n      replace: true,\n      templateUrl: function(element, attrs) {\n        return attrs.popupTemplateUrl || 'template/typeahead/typeahead-popup.html';\n      },\n      link: function(scope, element, attrs) {\n        \n        if (!$typeaheadSuppressWarning) {\n          $log.warn('typeahead-popup is now deprecated. Use uib-typeahead-popup instead.');\n        }\n        scope.templateUrl = attrs.templateUrl;\n\n        scope.isOpen = function() {\n          return scope.matches.length > 0;\n        };\n\n        scope.isActive = function(matchIdx) {\n          return scope.active == matchIdx;\n        };\n\n        scope.selectActive = function(matchIdx) {\n          scope.active = matchIdx;\n        };\n\n        scope.selectMatch = function(activeIdx) {\n          scope.select({activeIdx:activeIdx});\n        };\n      }\n    };\n  }])\n  \n  .directive('typeaheadMatch', ['$templateRequest', '$compile', '$parse', '$typeaheadSuppressWarning', '$log', function($templateRequest, $compile, $parse, $typeaheadSuppressWarning, $log) {\n    return {\n      restrict: 'EA',\n      scope: {\n        index: '=',\n        match: '=',\n        query: '='\n      },\n      link:function(scope, element, attrs) {\n        if (!$typeaheadSuppressWarning) {\n          $log.warn('typeahead-match is now deprecated. Use uib-typeahead-match instead.');\n        }\n\n        var tplUrl = $parse(attrs.templateUrl)(scope.$parent) || 'template/typeahead/typeahead-match.html';\n        $templateRequest(tplUrl).then(function(tplContent) {\n          $compile(tplContent.trim())(scope, function(clonedElement) {\n            element.replaceWith(clonedElement);\n          });\n        });\n      }\n    };\n  }])\n  \n  .filter('typeaheadHighlight', ['$sce', '$injector', '$log', '$typeaheadSuppressWarning', function($sce, $injector, $log, $typeaheadSuppressWarning) {\n    var isSanitizePresent;\n    isSanitizePresent = $injector.has('$sanitize');\n\n    function escapeRegexp(queryToEscape) {\n      // Regex: capture the whole query string and replace it with the string that will be used to match\n      // the results, for example if the capture is \"a\" the result will be \\a\n      return queryToEscape.replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n    }\n\n    function containsHtml(matchItem) {\n      return /<.*>/g.test(matchItem);\n    }\n\n    return function(matchItem, query) {\n      if (!$typeaheadSuppressWarning) {\n        $log.warn('typeaheadHighlight is now deprecated. Use uibTypeaheadHighlight instead.');\n      }\n\n      if (!isSanitizePresent && containsHtml(matchItem)) {\n        $log.warn('Unsafe use of typeahead please use ngSanitize'); // Warn the user about the danger\n      }\n\n      matchItem = query? ('' + matchItem).replace(new RegExp(escapeRegexp(query), 'gi'), '<strong>$&</strong>') : matchItem; // Replaces the capture string with a the same string inside of a \"strong\" tag\n      if (!isSanitizePresent) {\n        matchItem = $sce.trustAsHtml(matchItem); // If $sanitize is not present we pack the string in a $sce object for the ng-bind-html directive\n      }\n\n      return matchItem;\n    };\n  }]);\n!angular.$$csp() && angular.element(document).find('head').prepend('<style type=\"text/css\">.ng-animate.item:not(.left):not(.right){-webkit-transition:0s ease-in-out left;transition:0s ease-in-out left}</style>');"],"sourceRoot":"/source/"}